/* Generated by the Nim Compiler v1.4.2 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI12956044 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1214623 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12591057 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1208007 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI12591064 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1214621 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1214643 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1214645 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI11746506 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12705648 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2512002 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2336069 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI12705677 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12705674 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12705671 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12775843 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14738215 = {size: 0,kind: 43,base: null,node: null,finalizer: null};
var NTI14738402 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1214641 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12815076 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12591084 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI12591076 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1214657 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI12591247 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI1208005 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI12591239 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12591243 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI12591202 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI12591233 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12591232 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI14630081 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14360050 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI14360060 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI14360047 = {size: 0,kind: 16,base: null,node: null,finalizer: null};
var NTI14356121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI14356086 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI12815116 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12815113 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12815103 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI12815101 = {size: 0,kind: 21,base: null,node: null,finalizer: null};
var NTI1208044 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI10623276 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI10623237 = {size: 0,kind: 20,base: null,node: null,finalizer: null};
var NTI1208052 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI10623239 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12815096 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI12815127 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI1214649 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1208064 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1208056 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI12591080 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1214653 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1214635 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1214408 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1214728 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1208013 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1208015 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI1214723 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI1214617 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1214619 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1214633 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1214637 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI1214637 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1214637.node = NNI1214637;
var NNI1214633 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1214633.node = NNI1214633;
var NNI1214619 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1214619.node = NNI1214619;
NTI1214723.base = NTI1214617;
NTI1214728.base = NTI1214617;
var NNI1214617 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI1214723, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1208015, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI1208013, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI1208013, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI1214728, name: "up", sons: null}]};
NTI1214617.node = NNI1214617;
var NNI1214408 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1214408.node = NNI1214408;
NTI1214617.base = NTI1214408;
NTI1214619.base = NTI1214617;
NTI1214633.base = NTI1214619;
NTI1214637.base = NTI1214633;
var NNI1214635 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1214635.node = NNI1214635;
NTI1214635.base = NTI1214633;
var NNI1214653 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1214653.node = NNI1214653;
NTI1214653.base = NTI1214619;
var NNI12591080 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1208056, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1208056, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1208056, name: "Field2", sons: null}]};
NTI12591080.node = NNI12591080;
var NNI1214649 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1214649.node = NNI1214649;
NTI1214649.base = NTI1214619;
NTI10623237.base = NTI10623276;
var NNI10623239 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI1208052, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI10623237, name: "nanosecond", sons: null}]};
NTI10623239.node = NNI10623239;
NTI12815101.base = NTI12815096;
NTI12815103.base = NTI12815096;
var NNI12815096 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI1208013, name: "name", sons: null}, 
{kind: 1, offset: "start", len: 0, typ: NTI10623239, name: "start", sons: null}, 
{kind: 1, offset: "time", len: 0, typ: NTI1208052, name: "time", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI1208044, name: "count", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI12815101, name: "parent", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI12815103, name: "children", sons: null}]};
NTI12815096.node = NNI12815096;
NTI12815127.base = NTI12815096;
NTI12815116.base = NTI12815096;
var NNI12815113 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI12815116, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1208044, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI1208044, name: "tail", sons: null}, 
{kind: 1, offset: "size", len: 0, typ: NTI1208044, name: "size", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI1208044, name: "length", sons: null}]};
NTI12815113.node = NNI12815113;
var NNI14356121 = {kind: 1, offset: "length", len: 0, typ: NTI1208044, name: "length", sons: null};
NTI14356121.node = NNI14356121;
NTI14356121.base = NTI1214408;
NTI14356086.base = NTI14356121;
NTI14360060.base = NTI14360050;
NTI14360047.base = NTI14360060;
var NNI12591202 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI12591202, name: "Keyboard", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12591202, name: "Gamepad", len: 0, sons: null}}};
NTI12591202.node = NNI12591202;
var NNI12591239 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1208005, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1208005, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1208044, name: "Field2", sons: null}]};
NTI12591239.node = NNI12591239;
NTI12591243.base = NTI12591239;
NTI12591247.base = NTI1208044;
var NNI12591233 = {kind: 2, len: 9, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI12591202, name: "kind", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI1208013, name: "name", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI1208044, name: "id", sons: null}, 
{kind: 1, offset: "axes", len: 0, typ: NTI12591243, name: "axes", sons: null}, 
{kind: 1, offset: "buttons", len: 0, typ: NTI12591247, name: "buttons", sons: null}, 
{kind: 1, offset: "deadzone", len: 0, typ: NTI1208005, name: "deadzone", sons: null}, 
{kind: 1, offset: "invertX", len: 0, typ: NTI1208064, name: "invertX", sons: null}, 
{kind: 1, offset: "invertY", len: 0, typ: NTI1208064, name: "invertY", sons: null}, 
{kind: 1, offset: "useRightStick", len: 0, typ: NTI1208064, name: "useRightStick", sons: null}]};
NTI12591233.node = NNI12591233;
NTI12591232.base = NTI12591233;
NTI14630081.base = NTI12591232;
var NNI1214657 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1214657.node = NNI1214657;
NTI1214657.base = NTI1214619;
NTI12591084.base = NTI12591080;
var NNI12591076 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1208044, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI12591084, name: "Field1", sons: null}]};
NTI12591076.node = NNI12591076;
var NNI12815076 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1208056, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1208056, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1208056, name: "Field2", sons: null}]};
NTI12815076.node = NNI12815076;
var NNI1214641 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1214641.node = NNI1214641;
NTI1214641.base = NTI1214619;
var NNI14738402 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a0", len: 0, typ: NTI14738215, name: "a0", sons: null}, 
{kind: 1, offset: "a1", len: 0, typ: NTI14738215, name: "a1", sons: null}]};
NTI14738402.node = NNI14738402;
NTI12775843.base = NTI1208056;
var NNI12705648 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1208044, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1208044, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI1208044, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1208044, name: "Field3", sons: null}]};
NTI12705648.node = NNI12705648;
var NNI12705677 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2336069, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2512002, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI12705648, name: "Field2", sons: null}]};
NTI12705677.node = NNI12705677;
NTI12705674.base = NTI12705677;
var NNI12705671 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI12705674, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI1208044, name: "counter", sons: null}]};
NTI12705671.node = NNI12705671;
var NNI11746506 = {kind: 2, offset: 0, typ: null, name: null, len: 240, sons: {"0": {kind: 1, offset: 0, typ: NTI11746506, name: "K_UNKNOWN", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI11746506, name: "K_BACKSPACE", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI11746506, name: "K_TAB", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI11746506, name: "K_RETURN", len: 0, sons: null}, 
"27": {kind: 1, offset: 27, typ: NTI11746506, name: "K_ESCAPE", len: 0, sons: null}, 
"32": {kind: 1, offset: 32, typ: NTI11746506, name: "K_SPACE", len: 0, sons: null}, 
"33": {kind: 1, offset: 33, typ: NTI11746506, name: "K_EXCLAIM", len: 0, sons: null}, 
"34": {kind: 1, offset: 34, typ: NTI11746506, name: "K_QUOTEDBL", len: 0, sons: null}, 
"35": {kind: 1, offset: 35, typ: NTI11746506, name: "K_HASH", len: 0, sons: null}, 
"36": {kind: 1, offset: 36, typ: NTI11746506, name: "K_DOLLAR", len: 0, sons: null}, 
"37": {kind: 1, offset: 37, typ: NTI11746506, name: "K_PERCENT", len: 0, sons: null}, 
"38": {kind: 1, offset: 38, typ: NTI11746506, name: "K_AMPERSAND", len: 0, sons: null}, 
"39": {kind: 1, offset: 39, typ: NTI11746506, name: "K_QUOTE", len: 0, sons: null}, 
"40": {kind: 1, offset: 40, typ: NTI11746506, name: "K_LEFTPAREN", len: 0, sons: null}, 
"41": {kind: 1, offset: 41, typ: NTI11746506, name: "K_RIGHTPAREN", len: 0, sons: null}, 
"42": {kind: 1, offset: 42, typ: NTI11746506, name: "K_ASTERISK", len: 0, sons: null}, 
"43": {kind: 1, offset: 43, typ: NTI11746506, name: "K_PLUS", len: 0, sons: null}, 
"44": {kind: 1, offset: 44, typ: NTI11746506, name: "K_COMMA", len: 0, sons: null}, 
"45": {kind: 1, offset: 45, typ: NTI11746506, name: "K_MINUS", len: 0, sons: null}, 
"46": {kind: 1, offset: 46, typ: NTI11746506, name: "K_PERIOD", len: 0, sons: null}, 
"47": {kind: 1, offset: 47, typ: NTI11746506, name: "K_SLASH", len: 0, sons: null}, 
"48": {kind: 1, offset: 48, typ: NTI11746506, name: "K_0", len: 0, sons: null}, 
"49": {kind: 1, offset: 49, typ: NTI11746506, name: "K_1", len: 0, sons: null}, 
"50": {kind: 1, offset: 50, typ: NTI11746506, name: "K_2", len: 0, sons: null}, 
"51": {kind: 1, offset: 51, typ: NTI11746506, name: "K_3", len: 0, sons: null}, 
"52": {kind: 1, offset: 52, typ: NTI11746506, name: "K_4", len: 0, sons: null}, 
"53": {kind: 1, offset: 53, typ: NTI11746506, name: "K_5", len: 0, sons: null}, 
"54": {kind: 1, offset: 54, typ: NTI11746506, name: "K_6", len: 0, sons: null}, 
"55": {kind: 1, offset: 55, typ: NTI11746506, name: "K_7", len: 0, sons: null}, 
"56": {kind: 1, offset: 56, typ: NTI11746506, name: "K_8", len: 0, sons: null}, 
"57": {kind: 1, offset: 57, typ: NTI11746506, name: "K_9", len: 0, sons: null}, 
"58": {kind: 1, offset: 58, typ: NTI11746506, name: "K_COLON", len: 0, sons: null}, 
"59": {kind: 1, offset: 59, typ: NTI11746506, name: "K_SEMICOLON", len: 0, sons: null}, 
"60": {kind: 1, offset: 60, typ: NTI11746506, name: "K_LESS", len: 0, sons: null}, 
"61": {kind: 1, offset: 61, typ: NTI11746506, name: "K_EQUALS", len: 0, sons: null}, 
"62": {kind: 1, offset: 62, typ: NTI11746506, name: "K_GREATER", len: 0, sons: null}, 
"63": {kind: 1, offset: 63, typ: NTI11746506, name: "K_QUESTION", len: 0, sons: null}, 
"64": {kind: 1, offset: 64, typ: NTI11746506, name: "K_AT", len: 0, sons: null}, 
"91": {kind: 1, offset: 91, typ: NTI11746506, name: "K_LEFTBRACKET", len: 0, sons: null}, 
"92": {kind: 1, offset: 92, typ: NTI11746506, name: "K_BACKSLASH", len: 0, sons: null}, 
"93": {kind: 1, offset: 93, typ: NTI11746506, name: "K_RIGHTBRACKET", len: 0, sons: null}, 
"94": {kind: 1, offset: 94, typ: NTI11746506, name: "K_CARET", len: 0, sons: null}, 
"95": {kind: 1, offset: 95, typ: NTI11746506, name: "K_UNDERSCORE", len: 0, sons: null}, 
"96": {kind: 1, offset: 96, typ: NTI11746506, name: "K_BACKQUOTE", len: 0, sons: null}, 
"97": {kind: 1, offset: 97, typ: NTI11746506, name: "K_a", len: 0, sons: null}, 
"98": {kind: 1, offset: 98, typ: NTI11746506, name: "K_b", len: 0, sons: null}, 
"99": {kind: 1, offset: 99, typ: NTI11746506, name: "K_c", len: 0, sons: null}, 
"100": {kind: 1, offset: 100, typ: NTI11746506, name: "K_d", len: 0, sons: null}, 
"101": {kind: 1, offset: 101, typ: NTI11746506, name: "K_e", len: 0, sons: null}, 
"102": {kind: 1, offset: 102, typ: NTI11746506, name: "K_f", len: 0, sons: null}, 
"103": {kind: 1, offset: 103, typ: NTI11746506, name: "K_g", len: 0, sons: null}, 
"104": {kind: 1, offset: 104, typ: NTI11746506, name: "K_h", len: 0, sons: null}, 
"105": {kind: 1, offset: 105, typ: NTI11746506, name: "K_i", len: 0, sons: null}, 
"106": {kind: 1, offset: 106, typ: NTI11746506, name: "K_j", len: 0, sons: null}, 
"107": {kind: 1, offset: 107, typ: NTI11746506, name: "K_k", len: 0, sons: null}, 
"108": {kind: 1, offset: 108, typ: NTI11746506, name: "K_l", len: 0, sons: null}, 
"109": {kind: 1, offset: 109, typ: NTI11746506, name: "K_m", len: 0, sons: null}, 
"110": {kind: 1, offset: 110, typ: NTI11746506, name: "K_n", len: 0, sons: null}, 
"111": {kind: 1, offset: 111, typ: NTI11746506, name: "K_o", len: 0, sons: null}, 
"112": {kind: 1, offset: 112, typ: NTI11746506, name: "K_p", len: 0, sons: null}, 
"113": {kind: 1, offset: 113, typ: NTI11746506, name: "K_q", len: 0, sons: null}, 
"114": {kind: 1, offset: 114, typ: NTI11746506, name: "K_r", len: 0, sons: null}, 
"115": {kind: 1, offset: 115, typ: NTI11746506, name: "K_s", len: 0, sons: null}, 
"116": {kind: 1, offset: 116, typ: NTI11746506, name: "K_t", len: 0, sons: null}, 
"117": {kind: 1, offset: 117, typ: NTI11746506, name: "K_u", len: 0, sons: null}, 
"118": {kind: 1, offset: 118, typ: NTI11746506, name: "K_v", len: 0, sons: null}, 
"119": {kind: 1, offset: 119, typ: NTI11746506, name: "K_w", len: 0, sons: null}, 
"120": {kind: 1, offset: 120, typ: NTI11746506, name: "K_x", len: 0, sons: null}, 
"121": {kind: 1, offset: 121, typ: NTI11746506, name: "K_y", len: 0, sons: null}, 
"122": {kind: 1, offset: 122, typ: NTI11746506, name: "K_z", len: 0, sons: null}, 
"127": {kind: 1, offset: 127, typ: NTI11746506, name: "K_DELETE", len: 0, sons: null}, 
"1073741881": {kind: 1, offset: 1073741881, typ: NTI11746506, name: "K_CAPSLOCK", len: 0, sons: null}, 
"1073741882": {kind: 1, offset: 1073741882, typ: NTI11746506, name: "K_F1", len: 0, sons: null}, 
"1073741883": {kind: 1, offset: 1073741883, typ: NTI11746506, name: "K_F2", len: 0, sons: null}, 
"1073741884": {kind: 1, offset: 1073741884, typ: NTI11746506, name: "K_F3", len: 0, sons: null}, 
"1073741885": {kind: 1, offset: 1073741885, typ: NTI11746506, name: "K_F4", len: 0, sons: null}, 
"1073741886": {kind: 1, offset: 1073741886, typ: NTI11746506, name: "K_F5", len: 0, sons: null}, 
"1073741887": {kind: 1, offset: 1073741887, typ: NTI11746506, name: "K_F6", len: 0, sons: null}, 
"1073741888": {kind: 1, offset: 1073741888, typ: NTI11746506, name: "K_F7", len: 0, sons: null}, 
"1073741889": {kind: 1, offset: 1073741889, typ: NTI11746506, name: "K_F8", len: 0, sons: null}, 
"1073741890": {kind: 1, offset: 1073741890, typ: NTI11746506, name: "K_F9", len: 0, sons: null}, 
"1073741891": {kind: 1, offset: 1073741891, typ: NTI11746506, name: "K_F10", len: 0, sons: null}, 
"1073741892": {kind: 1, offset: 1073741892, typ: NTI11746506, name: "K_F11", len: 0, sons: null}, 
"1073741893": {kind: 1, offset: 1073741893, typ: NTI11746506, name: "K_F12", len: 0, sons: null}, 
"1073741894": {kind: 1, offset: 1073741894, typ: NTI11746506, name: "K_PRINTSCREEN", len: 0, sons: null}, 
"1073741895": {kind: 1, offset: 1073741895, typ: NTI11746506, name: "K_SCROLLLOCK", len: 0, sons: null}, 
"1073741896": {kind: 1, offset: 1073741896, typ: NTI11746506, name: "K_PAUSE", len: 0, sons: null}, 
"1073741897": {kind: 1, offset: 1073741897, typ: NTI11746506, name: "K_INSERT", len: 0, sons: null}, 
"1073741898": {kind: 1, offset: 1073741898, typ: NTI11746506, name: "K_HOME", len: 0, sons: null}, 
"1073741899": {kind: 1, offset: 1073741899, typ: NTI11746506, name: "K_PAGEUP", len: 0, sons: null}, 
"1073741901": {kind: 1, offset: 1073741901, typ: NTI11746506, name: "K_END", len: 0, sons: null}, 
"1073741902": {kind: 1, offset: 1073741902, typ: NTI11746506, name: "K_PAGEDOWN", len: 0, sons: null}, 
"1073741903": {kind: 1, offset: 1073741903, typ: NTI11746506, name: "K_RIGHT", len: 0, sons: null}, 
"1073741904": {kind: 1, offset: 1073741904, typ: NTI11746506, name: "K_LEFT", len: 0, sons: null}, 
"1073741905": {kind: 1, offset: 1073741905, typ: NTI11746506, name: "K_DOWN", len: 0, sons: null}, 
"1073741906": {kind: 1, offset: 1073741906, typ: NTI11746506, name: "K_UP", len: 0, sons: null}, 
"1073741907": {kind: 1, offset: 1073741907, typ: NTI11746506, name: "K_NUMLOCKCLEAR", len: 0, sons: null}, 
"1073741908": {kind: 1, offset: 1073741908, typ: NTI11746506, name: "K_KP_DIVIDE", len: 0, sons: null}, 
"1073741909": {kind: 1, offset: 1073741909, typ: NTI11746506, name: "K_KP_MULTIPLY", len: 0, sons: null}, 
"1073741910": {kind: 1, offset: 1073741910, typ: NTI11746506, name: "K_KP_MINUS", len: 0, sons: null}, 
"1073741911": {kind: 1, offset: 1073741911, typ: NTI11746506, name: "K_KP_PLUS", len: 0, sons: null}, 
"1073741912": {kind: 1, offset: 1073741912, typ: NTI11746506, name: "K_KP_ENTER", len: 0, sons: null}, 
"1073741913": {kind: 1, offset: 1073741913, typ: NTI11746506, name: "K_KP_1", len: 0, sons: null}, 
"1073741914": {kind: 1, offset: 1073741914, typ: NTI11746506, name: "K_KP_2", len: 0, sons: null}, 
"1073741915": {kind: 1, offset: 1073741915, typ: NTI11746506, name: "K_KP_3", len: 0, sons: null}, 
"1073741916": {kind: 1, offset: 1073741916, typ: NTI11746506, name: "K_KP_4", len: 0, sons: null}, 
"1073741917": {kind: 1, offset: 1073741917, typ: NTI11746506, name: "K_KP_5", len: 0, sons: null}, 
"1073741918": {kind: 1, offset: 1073741918, typ: NTI11746506, name: "K_KP_6", len: 0, sons: null}, 
"1073741919": {kind: 1, offset: 1073741919, typ: NTI11746506, name: "K_KP_7", len: 0, sons: null}, 
"1073741920": {kind: 1, offset: 1073741920, typ: NTI11746506, name: "K_KP_8", len: 0, sons: null}, 
"1073741921": {kind: 1, offset: 1073741921, typ: NTI11746506, name: "K_KP_9", len: 0, sons: null}, 
"1073741922": {kind: 1, offset: 1073741922, typ: NTI11746506, name: "K_KP_0", len: 0, sons: null}, 
"1073741923": {kind: 1, offset: 1073741923, typ: NTI11746506, name: "K_KP_PERIOD", len: 0, sons: null}, 
"1073741925": {kind: 1, offset: 1073741925, typ: NTI11746506, name: "K_APPLICATION", len: 0, sons: null}, 
"1073741926": {kind: 1, offset: 1073741926, typ: NTI11746506, name: "K_POWER", len: 0, sons: null}, 
"1073741927": {kind: 1, offset: 1073741927, typ: NTI11746506, name: "K_KP_EQUALS", len: 0, sons: null}, 
"1073741928": {kind: 1, offset: 1073741928, typ: NTI11746506, name: "K_F13", len: 0, sons: null}, 
"1073741929": {kind: 1, offset: 1073741929, typ: NTI11746506, name: "K_F14", len: 0, sons: null}, 
"1073741930": {kind: 1, offset: 1073741930, typ: NTI11746506, name: "K_F15", len: 0, sons: null}, 
"1073741931": {kind: 1, offset: 1073741931, typ: NTI11746506, name: "K_F16", len: 0, sons: null}, 
"1073741932": {kind: 1, offset: 1073741932, typ: NTI11746506, name: "K_F17", len: 0, sons: null}, 
"1073741933": {kind: 1, offset: 1073741933, typ: NTI11746506, name: "K_F18", len: 0, sons: null}, 
"1073741934": {kind: 1, offset: 1073741934, typ: NTI11746506, name: "K_F19", len: 0, sons: null}, 
"1073741935": {kind: 1, offset: 1073741935, typ: NTI11746506, name: "K_F20", len: 0, sons: null}, 
"1073741936": {kind: 1, offset: 1073741936, typ: NTI11746506, name: "K_F21", len: 0, sons: null}, 
"1073741937": {kind: 1, offset: 1073741937, typ: NTI11746506, name: "K_F22", len: 0, sons: null}, 
"1073741938": {kind: 1, offset: 1073741938, typ: NTI11746506, name: "K_F23", len: 0, sons: null}, 
"1073741939": {kind: 1, offset: 1073741939, typ: NTI11746506, name: "K_F24", len: 0, sons: null}, 
"1073741940": {kind: 1, offset: 1073741940, typ: NTI11746506, name: "K_EXECUTE", len: 0, sons: null}, 
"1073741941": {kind: 1, offset: 1073741941, typ: NTI11746506, name: "K_HELP", len: 0, sons: null}, 
"1073741942": {kind: 1, offset: 1073741942, typ: NTI11746506, name: "K_MENU", len: 0, sons: null}, 
"1073741943": {kind: 1, offset: 1073741943, typ: NTI11746506, name: "K_SELECT", len: 0, sons: null}, 
"1073741944": {kind: 1, offset: 1073741944, typ: NTI11746506, name: "K_STOP", len: 0, sons: null}, 
"1073741945": {kind: 1, offset: 1073741945, typ: NTI11746506, name: "K_AGAIN", len: 0, sons: null}, 
"1073741946": {kind: 1, offset: 1073741946, typ: NTI11746506, name: "K_UNDO", len: 0, sons: null}, 
"1073741947": {kind: 1, offset: 1073741947, typ: NTI11746506, name: "K_CUT", len: 0, sons: null}, 
"1073741948": {kind: 1, offset: 1073741948, typ: NTI11746506, name: "K_COPY", len: 0, sons: null}, 
"1073741949": {kind: 1, offset: 1073741949, typ: NTI11746506, name: "K_PASTE", len: 0, sons: null}, 
"1073741950": {kind: 1, offset: 1073741950, typ: NTI11746506, name: "K_FIND", len: 0, sons: null}, 
"1073741951": {kind: 1, offset: 1073741951, typ: NTI11746506, name: "K_MUTE", len: 0, sons: null}, 
"1073741952": {kind: 1, offset: 1073741952, typ: NTI11746506, name: "K_VOLUMEUP", len: 0, sons: null}, 
"1073741953": {kind: 1, offset: 1073741953, typ: NTI11746506, name: "K_VOLUMEDOWN", len: 0, sons: null}, 
"1073741957": {kind: 1, offset: 1073741957, typ: NTI11746506, name: "K_KP_COMMA", len: 0, sons: null}, 
"1073741958": {kind: 1, offset: 1073741958, typ: NTI11746506, name: "K_KP_EQUALSAS400", len: 0, sons: null}, 
"1073741977": {kind: 1, offset: 1073741977, typ: NTI11746506, name: "K_ALTERASE", len: 0, sons: null}, 
"1073741978": {kind: 1, offset: 1073741978, typ: NTI11746506, name: "K_SYSREQ", len: 0, sons: null}, 
"1073741979": {kind: 1, offset: 1073741979, typ: NTI11746506, name: "K_CANCEL", len: 0, sons: null}, 
"1073741980": {kind: 1, offset: 1073741980, typ: NTI11746506, name: "K_CLEAR", len: 0, sons: null}, 
"1073741981": {kind: 1, offset: 1073741981, typ: NTI11746506, name: "K_PRIOR", len: 0, sons: null}, 
"1073741982": {kind: 1, offset: 1073741982, typ: NTI11746506, name: "K_RETURN2", len: 0, sons: null}, 
"1073741983": {kind: 1, offset: 1073741983, typ: NTI11746506, name: "K_SEPARATOR", len: 0, sons: null}, 
"1073741984": {kind: 1, offset: 1073741984, typ: NTI11746506, name: "K_OUT", len: 0, sons: null}, 
"1073741985": {kind: 1, offset: 1073741985, typ: NTI11746506, name: "K_OPER", len: 0, sons: null}, 
"1073741986": {kind: 1, offset: 1073741986, typ: NTI11746506, name: "K_CLEARAGAIN", len: 0, sons: null}, 
"1073741987": {kind: 1, offset: 1073741987, typ: NTI11746506, name: "K_CRSEL", len: 0, sons: null}, 
"1073741988": {kind: 1, offset: 1073741988, typ: NTI11746506, name: "K_EXSEL", len: 0, sons: null}, 
"1073742000": {kind: 1, offset: 1073742000, typ: NTI11746506, name: "K_KP_00", len: 0, sons: null}, 
"1073742001": {kind: 1, offset: 1073742001, typ: NTI11746506, name: "K_KP_000", len: 0, sons: null}, 
"1073742002": {kind: 1, offset: 1073742002, typ: NTI11746506, name: "K_THOUSANDSSEPARATOR", len: 0, sons: null}, 
"1073742003": {kind: 1, offset: 1073742003, typ: NTI11746506, name: "K_DECIMALSEPARATOR", len: 0, sons: null}, 
"1073742004": {kind: 1, offset: 1073742004, typ: NTI11746506, name: "K_CURRENCYUNIT", len: 0, sons: null}, 
"1073742005": {kind: 1, offset: 1073742005, typ: NTI11746506, name: "K_CURRENCYSUBUNIT", len: 0, sons: null}, 
"1073742006": {kind: 1, offset: 1073742006, typ: NTI11746506, name: "K_KP_LEFTPAREN", len: 0, sons: null}, 
"1073742007": {kind: 1, offset: 1073742007, typ: NTI11746506, name: "K_KP_RIGHTPAREN", len: 0, sons: null}, 
"1073742008": {kind: 1, offset: 1073742008, typ: NTI11746506, name: "K_KP_LEFTBRACE", len: 0, sons: null}, 
"1073742009": {kind: 1, offset: 1073742009, typ: NTI11746506, name: "K_KP_RIGHTBRACE", len: 0, sons: null}, 
"1073742010": {kind: 1, offset: 1073742010, typ: NTI11746506, name: "K_KP_TAB", len: 0, sons: null}, 
"1073742011": {kind: 1, offset: 1073742011, typ: NTI11746506, name: "K_KP_BACKSPACE", len: 0, sons: null}, 
"1073742012": {kind: 1, offset: 1073742012, typ: NTI11746506, name: "K_KP_A", len: 0, sons: null}, 
"1073742013": {kind: 1, offset: 1073742013, typ: NTI11746506, name: "K_KP_B", len: 0, sons: null}, 
"1073742014": {kind: 1, offset: 1073742014, typ: NTI11746506, name: "K_KP_C", len: 0, sons: null}, 
"1073742015": {kind: 1, offset: 1073742015, typ: NTI11746506, name: "K_KP_D", len: 0, sons: null}, 
"1073742016": {kind: 1, offset: 1073742016, typ: NTI11746506, name: "K_KP_E", len: 0, sons: null}, 
"1073742017": {kind: 1, offset: 1073742017, typ: NTI11746506, name: "K_KP_F", len: 0, sons: null}, 
"1073742018": {kind: 1, offset: 1073742018, typ: NTI11746506, name: "K_KP_XOR", len: 0, sons: null}, 
"1073742019": {kind: 1, offset: 1073742019, typ: NTI11746506, name: "K_KP_POWER", len: 0, sons: null}, 
"1073742020": {kind: 1, offset: 1073742020, typ: NTI11746506, name: "K_KP_PERCENT", len: 0, sons: null}, 
"1073742021": {kind: 1, offset: 1073742021, typ: NTI11746506, name: "K_KP_LESS", len: 0, sons: null}, 
"1073742022": {kind: 1, offset: 1073742022, typ: NTI11746506, name: "K_KP_GREATER", len: 0, sons: null}, 
"1073742023": {kind: 1, offset: 1073742023, typ: NTI11746506, name: "K_KP_AMPERSAND", len: 0, sons: null}, 
"1073742024": {kind: 1, offset: 1073742024, typ: NTI11746506, name: "K_KP_DBLAMPERSAND", len: 0, sons: null}, 
"1073742025": {kind: 1, offset: 1073742025, typ: NTI11746506, name: "K_KP_VERTICALBAR", len: 0, sons: null}, 
"1073742026": {kind: 1, offset: 1073742026, typ: NTI11746506, name: "K_KP_DBLVERTICALBAR", len: 0, sons: null}, 
"1073742027": {kind: 1, offset: 1073742027, typ: NTI11746506, name: "K_KP_COLON", len: 0, sons: null}, 
"1073742028": {kind: 1, offset: 1073742028, typ: NTI11746506, name: "K_KP_HASH", len: 0, sons: null}, 
"1073742029": {kind: 1, offset: 1073742029, typ: NTI11746506, name: "K_KP_SPACE", len: 0, sons: null}, 
"1073742030": {kind: 1, offset: 1073742030, typ: NTI11746506, name: "K_KP_AT", len: 0, sons: null}, 
"1073742031": {kind: 1, offset: 1073742031, typ: NTI11746506, name: "K_KP_EXCLAM", len: 0, sons: null}, 
"1073742032": {kind: 1, offset: 1073742032, typ: NTI11746506, name: "K_KP_MEMSTORE", len: 0, sons: null}, 
"1073742033": {kind: 1, offset: 1073742033, typ: NTI11746506, name: "K_KP_MEMRECALL", len: 0, sons: null}, 
"1073742034": {kind: 1, offset: 1073742034, typ: NTI11746506, name: "K_KP_MEMCLEAR", len: 0, sons: null}, 
"1073742035": {kind: 1, offset: 1073742035, typ: NTI11746506, name: "K_KP_MEMADD", len: 0, sons: null}, 
"1073742036": {kind: 1, offset: 1073742036, typ: NTI11746506, name: "K_KP_MEMSUBTRACT", len: 0, sons: null}, 
"1073742037": {kind: 1, offset: 1073742037, typ: NTI11746506, name: "K_KP_MEMMULTIPLY", len: 0, sons: null}, 
"1073742038": {kind: 1, offset: 1073742038, typ: NTI11746506, name: "K_KP_MEMDIVIDE", len: 0, sons: null}, 
"1073742039": {kind: 1, offset: 1073742039, typ: NTI11746506, name: "K_KP_PLUSMINUS", len: 0, sons: null}, 
"1073742040": {kind: 1, offset: 1073742040, typ: NTI11746506, name: "K_KP_CLEAR", len: 0, sons: null}, 
"1073742041": {kind: 1, offset: 1073742041, typ: NTI11746506, name: "K_KP_CLEARENTRY", len: 0, sons: null}, 
"1073742042": {kind: 1, offset: 1073742042, typ: NTI11746506, name: "K_KP_BINARY", len: 0, sons: null}, 
"1073742043": {kind: 1, offset: 1073742043, typ: NTI11746506, name: "K_KP_OCTAL", len: 0, sons: null}, 
"1073742044": {kind: 1, offset: 1073742044, typ: NTI11746506, name: "K_KP_DECIMAL", len: 0, sons: null}, 
"1073742045": {kind: 1, offset: 1073742045, typ: NTI11746506, name: "K_KP_HEXADECIMAL", len: 0, sons: null}, 
"1073742048": {kind: 1, offset: 1073742048, typ: NTI11746506, name: "K_LCTRL", len: 0, sons: null}, 
"1073742049": {kind: 1, offset: 1073742049, typ: NTI11746506, name: "K_LSHIFT", len: 0, sons: null}, 
"1073742050": {kind: 1, offset: 1073742050, typ: NTI11746506, name: "K_LALT", len: 0, sons: null}, 
"1073742051": {kind: 1, offset: 1073742051, typ: NTI11746506, name: "K_LGUI", len: 0, sons: null}, 
"1073742052": {kind: 1, offset: 1073742052, typ: NTI11746506, name: "K_RCTRL", len: 0, sons: null}, 
"1073742053": {kind: 1, offset: 1073742053, typ: NTI11746506, name: "K_RSHIFT", len: 0, sons: null}, 
"1073742054": {kind: 1, offset: 1073742054, typ: NTI11746506, name: "K_RALT", len: 0, sons: null}, 
"1073742055": {kind: 1, offset: 1073742055, typ: NTI11746506, name: "K_RGUI", len: 0, sons: null}, 
"1073742081": {kind: 1, offset: 1073742081, typ: NTI11746506, name: "K_MODE", len: 0, sons: null}, 
"1073742082": {kind: 1, offset: 1073742082, typ: NTI11746506, name: "K_AUDIONEXT", len: 0, sons: null}, 
"1073742083": {kind: 1, offset: 1073742083, typ: NTI11746506, name: "K_AUDIOPREV", len: 0, sons: null}, 
"1073742084": {kind: 1, offset: 1073742084, typ: NTI11746506, name: "K_AUDIOSTOP", len: 0, sons: null}, 
"1073742085": {kind: 1, offset: 1073742085, typ: NTI11746506, name: "K_AUDIOPLAY", len: 0, sons: null}, 
"1073742086": {kind: 1, offset: 1073742086, typ: NTI11746506, name: "K_AUDIOMUTE", len: 0, sons: null}, 
"1073742087": {kind: 1, offset: 1073742087, typ: NTI11746506, name: "K_MEDIASELECT", len: 0, sons: null}, 
"1073742088": {kind: 1, offset: 1073742088, typ: NTI11746506, name: "K_WWW", len: 0, sons: null}, 
"1073742089": {kind: 1, offset: 1073742089, typ: NTI11746506, name: "K_MAIL", len: 0, sons: null}, 
"1073742090": {kind: 1, offset: 1073742090, typ: NTI11746506, name: "K_CALCULATOR", len: 0, sons: null}, 
"1073742091": {kind: 1, offset: 1073742091, typ: NTI11746506, name: "K_COMPUTER", len: 0, sons: null}, 
"1073742092": {kind: 1, offset: 1073742092, typ: NTI11746506, name: "K_AC_SEARCH", len: 0, sons: null}, 
"1073742093": {kind: 1, offset: 1073742093, typ: NTI11746506, name: "K_AC_HOME", len: 0, sons: null}, 
"1073742094": {kind: 1, offset: 1073742094, typ: NTI11746506, name: "K_AC_BACK", len: 0, sons: null}, 
"1073742095": {kind: 1, offset: 1073742095, typ: NTI11746506, name: "K_AC_FORWARD", len: 0, sons: null}, 
"1073742096": {kind: 1, offset: 1073742096, typ: NTI11746506, name: "K_AC_STOP", len: 0, sons: null}, 
"1073742097": {kind: 1, offset: 1073742097, typ: NTI11746506, name: "K_AC_REFRESH", len: 0, sons: null}, 
"1073742098": {kind: 1, offset: 1073742098, typ: NTI11746506, name: "K_AC_BOOKMARKS", len: 0, sons: null}, 
"1073742099": {kind: 1, offset: 1073742099, typ: NTI11746506, name: "K_BRIGHTNESSDOWN", len: 0, sons: null}, 
"1073742100": {kind: 1, offset: 1073742100, typ: NTI11746506, name: "K_BRIGHTNESSUP", len: 0, sons: null}, 
"1073742101": {kind: 1, offset: 1073742101, typ: NTI11746506, name: "K_DISPLAYSWITCH", len: 0, sons: null}, 
"1073742102": {kind: 1, offset: 1073742102, typ: NTI11746506, name: "K_KBDILLUMTOGGLE", len: 0, sons: null}, 
"1073742103": {kind: 1, offset: 1073742103, typ: NTI11746506, name: "K_KBDILLUMDOWN", len: 0, sons: null}, 
"1073742104": {kind: 1, offset: 1073742104, typ: NTI11746506, name: "K_KBDILLUMUP", len: 0, sons: null}, 
"1073742105": {kind: 1, offset: 1073742105, typ: NTI11746506, name: "K_EJECT", len: 0, sons: null}, 
"1073742106": {kind: 1, offset: 1073742106, typ: NTI11746506, name: "K_SLEEP", len: 0, sons: null}, 
"1073742107": {kind: 1, offset: 1073742107, typ: NTI11746506, name: "K_APP1", len: 0, sons: null}, 
"1073742108": {kind: 1, offset: 1073742108, typ: NTI11746506, name: "K_APP2", len: 0, sons: null}, 
"1073742109": {kind: 1, offset: 1073742109, typ: NTI11746506, name: "K_AUDIOREWIND", len: 0, sons: null}, 
"1073742110": {kind: 1, offset: 1073742110, typ: NTI11746506, name: "K_AUDIOFASTFORWARD", len: 0, sons: null}}};
NTI11746506.node = NNI11746506;
var NNI1214645 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1214645.node = NNI1214645;
var NNI1214643 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1214643.node = NNI1214643;
var NNI1214621 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1214621.node = NNI1214621;
NTI1214621.base = NTI1214617;
NTI1214643.base = NTI1214621;
NTI1214645.base = NTI1214643;
var NNI12591057 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI12591057, name: "tsStarted", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI12591057, name: "tsHeld", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI12591057, name: "tsMoved", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI12591057, name: "tsEnded", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI12591057, name: "tsCancelled", len: 0, sons: null}}};
NTI12591057.node = NNI12591057;
var NNI12591064 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI1208044, name: "id", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI1208044, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI1208044, name: "y", sons: null}, 
{kind: 1, offset: "sx", len: 0, typ: NTI1208007, name: "sx", sons: null}, 
{kind: 1, offset: "sy", len: 0, typ: NTI1208007, name: "sy", sons: null}, 
{kind: 1, offset: "xrel", len: 0, typ: NTI1208007, name: "xrel", sons: null}, 
{kind: 1, offset: "yrel", len: 0, typ: NTI1208007, name: "yrel", sons: null}, 
{kind: 1, offset: "xrelraw", len: 0, typ: NTI1208007, name: "xrelraw", sons: null}, 
{kind: 1, offset: "yrelraw", len: 0, typ: NTI1208007, name: "yrelraw", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI12591057, name: "state", sons: null}]};
NTI12591064.node = NNI12591064;
var NNI1214623 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1214623.node = NNI1214623;
NTI1214623.base = NTI1214621;
NTI12956044.base = NTI1208056;
function makeNimstrLit(c_1475062) {
      var ln = c_1475062.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_1475062.charCodeAt(i);
  }
  return result;
  

  
}
function toJSStr(s_1475096) {
                    var Tmp5;
            var Tmp7;

  var result_1475097 = null;

    var res_1475170 = newSeq_1475128((s_1475096).length);
    var i_1475172 = 0;
    var j_1475174 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_1475172 < (s_1475096).length)) break L2;
          var c_1475175 = s_1475096[i_1475172];
          if ((c_1475175 < 128)) {
          res_1475170[j_1475174] = String.fromCharCode(c_1475175);
          i_1475172 += 1;
          }
          else {
            var helper_1475198 = newSeq_1475128(0);
            L3: do {
                L4: while (true) {
                if (!true) break L4;
                  var code_1475199 = c_1475175.toString(16);
                  if (((code_1475199).length == 1)) {
                  helper_1475198.push("%0");;
                  }
                  else {
                  helper_1475198.push("%");;
                  }
                  
                  helper_1475198.push(code_1475199);;
                  i_1475172 += 1;
                    if (((s_1475096).length <= i_1475172)) Tmp5 = true; else {                      Tmp5 = (s_1475096[i_1475172] < 128);                    }                  if (Tmp5) {
                  break L3;
                  }
                  
                  c_1475175 = s_1475096[i_1475172];
                }
            } while(false);
++excHandler;
            Tmp7 = framePtr;
            try {
            res_1475170[j_1475174] = decodeURIComponent(helper_1475198.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
            framePtr = Tmp7;
            res_1475170[j_1475174] = helper_1475198.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Tmp7;
            }
          }
          
          j_1475174 += 1;
        }
    } while(false);
    if (res_1475170.length < j_1475174) { for (var i=res_1475170.length;i<j_1475174;++i) res_1475170.push(null); }
               else { res_1475170.length = j_1475174; };
    result_1475097 = res_1475170.join("");

  return result_1475097;

}
function raiseException(e_1440218, ename_1440219) {
    e_1440218.name = ename_1440219;
    if ((excHandler == 0)) {
    unhandledException(e_1440218);
    }
    
    throw e_1440218;

  
}
function addInt(a_1480419, b_1480420) {
        var result = a_1480419 + b_1480420;
    checkOverflowInt(result);
    return result;
  

  
}
function divInt(a_1480473, b_1480474) {
        if (b_1480474 == 0) raiseDivByZero();
    if (b_1480474 == -1 && a_1480473 == 2147483647) raiseOverflow();
    return Math.trunc(a_1480473 / b_1480474);
  

  
}
function mulInt(a_1480455, b_1480456) {
        var result = a_1480455 * b_1480456;
    checkOverflowInt(result);
    return result;
  

  
}
function chckRange(i_1505016, a_1505017, b_1505018) {
      var Tmp1;

  var result_1505019 = 0;

  BeforeRet: do {
      if (!(a_1505017 <= i_1505016)) Tmp1 = false; else {        Tmp1 = (i_1505016 <= b_1505018);      }    if (Tmp1) {
    result_1505019 = i_1505016;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_1505019;

}
function arrayConstr(len_1500067, value_1500068, typ_1500069) {
        var result = new Array(len_1500067);
    for (var i = 0; i < len_1500067; ++i) result[i] = nimCopy(null, value_1500068, typ_1500069);
    return result;
  

  
}
function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);
function nimCopy(dest_1490023, src_1490024, ti_1490025) {
  var result_1495219 = null;

    switch (ti_1490025.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_1485401(ti_1490025))) {
      result_1495219 = src_1490024;
      }
      else {
        result_1495219 = [src_1490024[0], src_1490024[1]];
      }
      
      break;
    case 19:
            if (dest_1490023 === null || dest_1490023 === undefined) {
        dest_1490023 = {};
      }
      else {
        for (var key in dest_1490023) { delete dest_1490023[key]; }
      }
      for (var key in src_1490024) { dest_1490023[key] = src_1490024[key]; }
      result_1495219 = dest_1490023;
    
      break;
    case 18:
    case 17:
      if (!((ti_1490025.base == null))) {
      result_1495219 = nimCopy(dest_1490023, src_1490024, ti_1490025.base);
      }
      else {
      if ((ti_1490025.kind == 17)) {
      result_1495219 = (dest_1490023 === null || dest_1490023 === undefined) ? {m_type: ti_1490025} : dest_1490023;
      }
      else {
        result_1495219 = (dest_1490023 === null || dest_1490023 === undefined) ? {} : dest_1490023;
      }
      }
      nimCopyAux(result_1495219, src_1490024, ti_1490025.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_1490024 === null) {
        result_1495219 = null;
      }
      else {
        if (dest_1490023 === null || dest_1490023 === undefined) {
          dest_1490023 = new Array(src_1490024.length);
        }
        else {
          dest_1490023.length = src_1490024.length;
        }
        result_1495219 = dest_1490023;
        for (var i = 0; i < src_1490024.length; ++i) {
          result_1495219[i] = nimCopy(result_1495219[i], src_1490024[i], ti_1490025.base);
        }
      }
    
      break;
    case 28:
            if (src_1490024 !== null) {
        result_1495219 = src_1490024.slice(0);
      }
    
      break;
    default: 
      result_1495219 = src_1490024;
      break;
    }

  return result_1495219;

}
function cstrToNimstr(c_1475079) {
      var ln = c_1475079.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_1475079.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_1475079.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
function chckIndx(i_1500086, a_1500087, b_1500088) {
      var Tmp1;

  var result_1500089 = 0;

  BeforeRet: do {
      if (!(a_1500087 <= i_1500086)) Tmp1 = false; else {        Tmp1 = (i_1500086 <= b_1500088);      }    if (Tmp1) {
    result_1500089 = i_1500086;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_1500086, a_1500087, b_1500088);
    }
    
  } while (false);

  return result_1500089;

}
function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
function subInt(a_1480437, b_1480438) {
        var result = a_1480437 - b_1480438;
    checkOverflowInt(result);
    return result;
  

  
}
function reprEnum(e_1565272, typ_1565273) {
  var result_1565274 = [];

    var tmp_1565275 = false;
    var item_1565276 = typ_1565273.node.sons[e_1565272];
    tmp_1565275 = item_1565276 !== undefined
    if (tmp_1565275) {
    result_1565274 = nimCopy(null, makeNimstrLit(item_1565276.name), NTI1208013);
    }
    else {
      result_1565274 = nimCopy(null, (cstrToNimstr((e_1565272)+"") || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI1208013);
    }
    

  return result_1565274;

}
function isObj(obj_1520062, subclass_1520063) {
  var result_1520064 = false;

  BeforeRet: do {
    var x_1520065 = obj_1520062;
    if ((x_1520065 == subclass_1520063)) {
    result_1520064 = true;
    break BeforeRet;
    }
    
    L1: do {
        L2: while (true) {
        if (!!((x_1520065 == subclass_1520063))) break L2;
          if ((x_1520065 == null)) {
          result_1520064 = false;
          break BeforeRet;
          }
          
          x_1520065 = x_1520065.base;
        }
    } while(false);
    result_1520064 = true;
    break BeforeRet;
  } while (false);

  return result_1520064;

}
function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: makeNimstrLit("no exception to reraise"), parent: null, m_type: NTI1214657, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_1395704()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
function mnewString(len_1480044) {
        return new Array(len_1480044);
  

  
}
function nimFloatToString(a_1480649) {
  var result_1480650 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_1480649)) result_1480650 =  a_1480649+".0"
    else {
      result_1480650 = a_1480649+""
      if(nimOnlyDigitsOrMinus(result_1480650)){
        result_1480650 = a_1480649+".0"
      }
    }
  

  return result_1480650;

}
function negInt(a_1480615) {
  var result_1480616 = 0;

    result_1480616 = (a_1480615 * -1);

  return result_1480616;

}
var ConstSet2 = setConstr(13, 10);
function modInt(a_1480491, b_1480492) {
        if (b_1480492 == 0) raiseDivByZero();
    if (b_1480492 == -1 && a_1480491 == 2147483647) raiseOverflow();
    return Math.trunc(a_1480491 % b_1480492);
  

  
}
function nimMax(a_1480821, b_1480822) {
    var Tmp1;

  var result_1480823 = 0;

  BeforeRet: do {
    if ((b_1480822 <= a_1480821)) {
    Tmp1 = a_1480821;
    }
    else {
    Tmp1 = b_1480822;
    }
    
    result_1480823 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_1480823;

}
function nimMin(a_1480803, b_1480804) {
    var Tmp1;

  var result_1480805 = 0;

  BeforeRet: do {
    if ((a_1480803 <= b_1480804)) {
    Tmp1 = a_1480803;
    }
    else {
    Tmp1 = b_1480804;
    }
    
    result_1480805 = Tmp1;
    break BeforeRet;
  } while (false);

  return result_1480805;

}
var ConstSet3 = setConstr(13, 10);
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var objectID_2340031 = [0];
if (globalThis.utcInstance_11175231 === undefined) {
  utcInstance_11175231 = [null];
}
if (globalThis.localInstance_11175232 === undefined) {
  localInstance_11175232 = [null];
}
function nextPowerOfTwo_2305014(x_2305016) {
  var result_2305017 = 0;

    result_2305017 = (x_2305016 - 1);
    result_2305017 = (result_2305017 | (result_2305017 >> 16));
    result_2305017 = (result_2305017 | (result_2305017 >> 8));
    result_2305017 = (result_2305017 | (result_2305017 >> 4));
    result_2305017 = (result_2305017 | (result_2305017 >> 2));
    result_2305017 = (result_2305017 | (result_2305017 >> 1));
    result_2305017 += (1 + ((x_2305016 <= 0) ? 1:0));

  return result_2305017;

}
function add_1377211(x_1377214, x_1377214_Idx, y_1377215) {
          if (x_1377214[x_1377214_Idx] === null) { x_1377214[x_1377214_Idx] = []; }
      var off = x_1377214[x_1377214_Idx].length;
      x_1377214[x_1377214_Idx].length += y_1377215.length;
      for (var i = 0; i < y_1377215.length; ++i) {
        x_1377214[x_1377214_Idx][off+i] = y_1377215.charCodeAt(i);
      }
    

  
}
function newSeq_1475128(len_1475131) {
  var result_1475133 = [];

    result_1475133 = new Array(len_1475131); for (var i=0;i<len_1475131;++i) {result_1475133[i]=null;}
  return result_1475133;

}
function unhandledException(e_1435059) {
    var buf_1435060 = [[]];
    if (!(((e_1435059.message).length == 0))) {
    buf_1435060[0].push.apply(buf_1435060[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_1435060[0].push.apply(buf_1435060[0], e_1435059.message);;
    }
    else {
    buf_1435060[0].push.apply(buf_1435060[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_1435060[0].push.apply(buf_1435060[0], makeNimstrLit(" ["));;
    add_1377211(buf_1435060, 0, e_1435059.name);
    buf_1435060[0].push.apply(buf_1435060[0], makeNimstrLit("]\x0A"));;
    var cbuf_1440201 = toJSStr(buf_1435060[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_1440201);
  }
  else {
    throw cbuf_1440201;
  }
  

  
}
function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI1214637, name: null, trace: [], up: null}, "OverflowDefect");

  
}
function checkOverflowInt(a_1480403) {
        if (a_1480403 > 2147483647 || a_1480403 < -2147483648) raiseOverflow();
  

  
}
function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI1214635, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}
function slotsNeeded_2415048(count_2415050) {
  var result_2415051 = 0;

    result_2415051 = nextPowerOfTwo_2305014(addInt(divInt(mulInt(count_2415050, 3), 2), 4));

  return result_2415051;

}
function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI1214653, name: null, trace: [], up: null}, "RangeDefect");

  
}
function initTable_12697016(initialSize_12697020) {
  var result_12697036 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_12700001 = slotsNeeded_2415048(chckRange(initialSize_12697020, 0, 2147483647));
    result_12697036.counter = 0;
    result_12697036.data = new Array(chckRange(correctSizeHEX60gensym0_12700001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym0_12700001, 0, 2147483647);++i) {result_12697036.data[i]={Field0: 0, Field1: 0, Field2: 0};}
  return result_12697036;

}
var keysDown_12705629 = [initTable_12697016(32)];
var aKeyWasPressed_12705630 = [false];
var aKeyWasReleased_12705631 = [false];
function isFatPointer_1485401(ti_1485403) {
  var result_1485404 = false;

  BeforeRet: do {
    result_1485404 = !((ConstSet1[ti_1485403.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_1485404;

}
function nimCopyAux(dest_1490028, src_1490029, n_1490031) {
    switch (n_1490031.kind) {
    case 0:
      break;
    case 1:
            dest_1490028[n_1490031.offset] = nimCopy(dest_1490028[n_1490031.offset], src_1490029[n_1490031.offset], n_1490031.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_1490031.sons.length; i++) {
      nimCopyAux(dest_1490028, src_1490029, n_1490031.sons[i]);
    }
    
      break;
    case 3:
            dest_1490028[n_1490031.offset] = nimCopy(dest_1490028[n_1490031.offset], src_1490029[n_1490031.offset], n_1490031.typ);
      for (var i = 0; i < n_1490031.sons.length; ++i) {
        nimCopyAux(dest_1490028, src_1490029, n_1490031.sons[i][1]);
      }
    
      break;
    }

  
}
function toFloat_1236659(i_1236661) {
  var result_1236662 = 0.0;

    result_1236662 = i_1236661;

  return result_1236662;

}
function HEX2F_1575648(x_1575650, y_1575651) {
  var result_1575652 = 0.0;

    result_1575652 = (toFloat_1236659(x_1575650) / toFloat_1236659(y_1575651));

  return result_1575652;

}
function raiseIndexError(i_1460047, a_1460048, b_1460049) {
    var Tmp1;

    if ((b_1460049 < a_1460048)) {
    Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_1460047)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_1460048)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_1460049)+"") || []);
    }
    
    raiseException({message: nimCopy(null, Tmp1, NTI1208013), parent: null, m_type: NTI1214649, name: null, trace: [], up: null}, "IndexDefect");

  
}
        var Tmp4;
var currentPalette_12775140 = [{Field0: 0, Field1: arrayConstr(256, {Field0: 0, Field1: 0, Field2: 0}, NTI12591080)}];
var touches_12775142 = [[]];
var touchMouseEmulation_12775143 = [false];
var masterVolume_12775144 = [1.0000000000000000e+000];
var sfxVolume_12775145 = [1.0000000000000000e+000];
var musicVolume_12775146 = [1.0000000000000000e+000];
var sampleRate_12775147 = [4.4100000000000000e+004];
var invSampleRate_12775148 = [(1.0000000000000000e+000 / sampleRate_12775147[0])];
var tickFunc_12775151 = [null];
var currentBpm_12775153 = [128];
var currentTpb_12775154 = [4];
var initialized_12775155 = [false];
var running_12775156 = [false];
var keyListeners_12775173 = [[]];
var eventListeners_12775190 = [[]];
var loading_12775191 = [0];
var cursorX_12775193 = [0];
var cursorY_12775195 = [0];
var swCanvas_12775196 = [null];
var stencilBuffer_12775197 = [null];
var stencilMode_12775207 = [0];
var stencilWrite_12775208 = [false];
var stencilRef_12775209 = [0];
var targetScreenWidth_12775212 = [128];
var targetScreenHeight_12775215 = [128];
var fixedScreenSize_12775216 = [true];
var integerScreenScale_12775217 = [false];
var screenWidth_12775220 = [128];
var screenHeight_12775223 = [128];
var screenPaddingX_12775225 = [0];
var screenPaddingY_12775227 = [0];
var keymap_12775232 = [[[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]];
var controllerAddedFunc_12775236 = [null];
var controllerRemovedFunc_12775240 = [null];
var controllers_12775242 = [[]];
var focused_12775243 = [true];
var recordSeconds_12775245 = [30];
var fullSpeedGif_12775246 = [true];
var mixerChannels_12775248 = [0];
var gDitherPattern_12775250 = [65535];
var frameRate_12775252 = [60];
var timeStep_12775253 = [HEX2F_1575648(1, frameRate_12775252[0])];
var frameMult_12775255 = [1];
var basePath_12775256 = [[]];
var assetPath_12775257 = [[]];
var writePath_12775258 = [[]];
var screenScale_12775259 = [4.0000000000000000e+000];
var spritesheets_12775263 = [[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]];
var spritesheet_12775264 = [null];
var tilemaps_12775268 = [[({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0}), ({data: [], w: 0, h: 0, hex: false, hexOffset: 0, tw: 0, th: 0})]];
var currentTilemap_12775270 = [null];
var initFunc_12775273 = [null];
var updateFunc_12775277 = [null];
var drawFunc_12775280 = [null];
var textFunc_12775284 = [null];
var resizeFuncs_12775286 = [[]];
var fonts_12775290 = [[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]];
var currentFont_12775291 = [null];
var currentFontId_12775292 = [0];
var frame_12775294 = [0];
var cameraX_12775295 = [0];
var cameraY_12775296 = [0];
var paletteMapDraw_12775300 = [new Int32Array(256)];
var paletteMapDisplay_12775304 = [new Int32Array(256)];
var paletteTransparent_12775308 = [arrayConstr(256, false, NTI1208064)];
L1: do {
  var i_12775317 = [0];
  var i_12775717 = 0;
  L2: do {
      L3: while (true) {
      if (!(i_12775717 < 256)) break L3;
        i_12775317[0] = i_12775717;
        paletteMapDraw_12775300[0][chckIndx(i_12775317[0], 0, (paletteMapDraw_12775300[0]).length-1)] = i_12775317[0];
        paletteMapDisplay_12775304[0][chckIndx(i_12775317[0], 0, (paletteMapDisplay_12775304[0]).length-1)] = i_12775317[0];
        if ((i_12775317[0] == 0)) {
        Tmp4 = true;
        }
        else {
        Tmp4 = false;
        }
        
        paletteTransparent_12775308[0][chckIndx(i_12775317[0], 0, (paletteTransparent_12775308[0]).length-1)] = Tmp4;
        i_12775717 = addInt(i_12775717, 1);
      }
  } while(false);
} while(false);
var currentColor_12775318 = [0];
var keepRunning_12775319 = [true];
var muteAudio_12775320 = [false];
var currentMusicId_12775332 = [-1];
var clipMinX_12775333 = [0];
var clipMaxX_12775334 = [0];
var clipMinY_12775335 = [0];
var clipMaxY_12775336 = [0];
var clippingRect_12775337 = [{Field0: 0, Field1: 0, Field2: 0, Field3: 0}];
var mouseDetected_12775338 = [false];
var mouseX_12775339 = [0];
var mouseY_12775340 = [0];
var mouseRawX_12775341 = [0];
var mouseRawY_12775342 = [0];
var mouseRelX_12775343 = [0.0];
var mouseRelY_12775344 = [0.0];
var lastMouseX_12775345 = [0];
var lastMouseY_12775346 = [0];
var lastMouseRawX_12775347 = [0];
var lastMouseRawY_12775348 = [0];
var mouseButtonsDown_12775352 = [[false, false, false]];
var mouseButtons_12775356 = [new Int32Array(3)];
var mouseWheelState_12775357 = [0];
function newSeq_12815123(len_12815126) {
  var result_12815128 = [];

    result_12815128 = new Array(len_12815126); for (var i=0;i<len_12815126;++i) {result_12815128[i]=({name: [], start: ({seconds: 0, nanosecond: 0}), time: 0, count: 0, parent: null, children: []});}
  return result_12815128;

}
function newRingBuffer_12815107(length_12815110) {
  var result_12815121 = ({data: [], head: 0, tail: 0, size: 0, length: 0});

    var s_12815179 = newSeq_12815123(chckRange(length_12815110, 0, 2147483647));
    nimCopy(result_12815121, {data: nimCopy(null, s_12815179, NTI12815127), head: 0, tail: -1, size: 0, length: length_12815110}, NTI12815113);

  return result_12815121;

}
var profileCollect_12815105 = [true];
var profileHistory_12815224 = [newRingBuffer_12815107(256)];
var AudioContext = window.AudioContext || window.webkitAudioContext || null;

var ctx_14357014 = [null];
var swCanvas32_14357015 = [null];
var canvas_14357016 = [null];
var interval_14357018 = [null];
var audioContext_14357019 = [null];
var noiseBuffer_14357020 = [null];
var noiseBuffer2_14357021 = [null];
var audioChannels_14357102 = [[({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)}), ({kind: 0, source: null, callback: null, musicId: 0, loop: 0, phase: 0.0, freq: 0.0, basefreq: 0.0, targetFreq: 0.0, width: 0.0, pan: 0.0, shape: 0, gain: null, synthData: {Field0: 0, Field1: [{Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}, {Field0: 0, Field1: 0, Field2: 0}], Field2: 0, Field3: 0}, synthDataIndex: 0, init: 0, env: 0, envValue: 0.0, envPhase: 0, length: 0, vibspeed: 0, vibamount: 0, glide: 0, pchange: 0, trigger: false, lfsr: 0, lfsr2: 0, nextClick: 0, outvalue: 0.0, priority: 0.0, wavData: new Uint8Array(32)})]];
var tickFunc_14357105 = [null];
var currentBpm_14360033 = [128];
var currentTpb_14360034 = [4];
var sfxData_14360038 = [arrayConstr(64, null, NTI14356086)];
var musicData_14360042 = [arrayConstr(64, null, NTI14356086)];
var currentMusic_14360043 = [null];
var sfxGain_14360044 = [null];
var musicGain_14360045 = [null];
var masterGain_14360046 = [null];
nimCopy(keymap_12775232[0], [[37, 65], [39, 68], [38, 87], [40, 83], [90, 78], [88, 77], [67, 72], [86, 74], [70], [71], [72], [86], [66], [78], [13, 32], [27, 8]], NTI14360047);
var requestedFullscreen_14370291 = [false];
function clearSaveData() {
    window.localStorage.clear();

  
}
function mute() {
  BeforeRet: do {
    if ((audioContext_14357019[0] == null)) {
    break BeforeRet;
    }
    
    if (!((masterGain_14360046[0].gain.value == 0.0))) {
    rawEcho(makeNimstrLit("muting audio"));
    masterGain_14360046[0].gain.value = 0.0;
    }
    else {
      rawEcho(makeNimstrLit("unmuting audio"));
      masterGain_14360046[0].gain.value = 1.0000000000000000e+000;
    }
    
  } while (false);

  
}
var state_14738405 = [{a0: 1773455756, a1: 4275166512}];
clipMaxX_12775334[0] = subInt(screenWidth_12775220[0], 1);
clipMaxY_12775336[0] = subInt(screenHeight_12775223[0], 1);
var ditherColor_15090339 = [-1];
var defaultFontSurface_16175071 = {w: 381, h: 8, channels: 1, tw: 4, th: 4, filename: [], data: [2, 0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 0, 2, 1, 0, 0, 2, 0, 1, 1, 2, 0, 1, 0, 2, 0, 0, 0, 2, 0, 1, 0, 2, 1, 1, 1, 2, 1, 1, 0, 2, 0, 1, 1, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 0, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 0, 1, 1, 2, 1, 1, 0, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0, 2, 0, 0, 1, 2, 1, 1, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 0, 0, 1, 2, 0, 1, 0, 2, 0, 1, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 0, 1, 0, 2, 0, 0, 1, 2, 0, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 0, 2, 0, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 0, 1, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 1, 1, 1, 2, 0, 1, 0, 2, 0, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 0, 2, 0, 1, 1, 2, 1, 1, 1, 2, 0, 1, 0, 2, 1, 1, 1, 2, 0, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 0, 2, 0, 1, 0, 2, 0, 0, 1, 2, 1, 0, 1, 2, 0, 0, 0, 2, 0, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 1, 2, 0, 1, 0, 2, 0, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 0, 0, 1, 2, 0, 1, 0, 2, 0, 1, 0, 2, 0, 0, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 0, 1, 0, 2, 0, 0, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 0, 1, 0, 2, 1, 1, 0, 2, 0, 0, 0, 2, 1, 0, 0, 2, 0, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 0, 1, 0, 2, 1, 1, 1, 2, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 0, 2, 0, 0, 0, 2, 1, 0, 0, 2, 0, 0, 0, 2, 0, 0, 1, 2, 0, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 0, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 1, 0, 2, 1, 1, 0, 2, 1, 0, 0, 2, 1, 0, 1, 2, 0, 1, 0, 2, 0, 1, 0, 2, 1, 1, 0, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 0, 1, 0, 2, 1, 1, 1, 2, 0, 0, 1, 2, 1, 0, 0, 2, 0, 1, 0, 2, 0, 0, 1, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 1, 0, 2, 1, 1, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 0, 1, 0, 2, 0, 0, 1, 2, 1, 1, 0, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 0, 2, 1, 1, 1, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 0, 1, 0, 2, 1, 1, 1, 2, 0, 1, 0, 2, 1, 1, 0, 2, 0, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 1, 2, 0, 1, 1, 2, 1, 0, 0, 2, 1, 0, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 0, 0, 1, 2, 0, 1, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 0, 1, 0, 2, 1, 0, 0, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 1, 0, 1, 2, 0, 0, 1, 2, 1, 0, 1, 2, 0, 0, 1, 2, 0, 1, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 1, 1, 1, 2, 0, 1, 0, 2, 0, 0, 0, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 0, 1, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 1, 0, 2, 0, 0, 1, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 0, 0, 1, 2, 1, 0, 0, 2, 1, 0, 0, 2, 0, 1, 0, 2, 0, 0, 1, 2, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 0, 1, 0, 2, 0, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 0, 0, 2, 1, 1, 0, 2, 1, 0, 1, 2, 0, 0, 1, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 0, 0, 1, 2, 1, 0, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 1, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 0, 1, 0, 2, 0, 0, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 0, 0, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 1, 0, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 0, 0, 0, 2, 0, 1, 0, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 0, 1, 2, 1, 1, 1, 2, 0, 0, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 0, 0, 1, 2, 0, 0, 0, 2, 1, 0, 0, 2, 0, 1, 0, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 1, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 0, 2, 1, 0, 0, 2, 0, 1, 1, 2, 1, 0, 1, 2, 1, 1, 0, 2, 0, 1, 0, 2, 0, 1, 1, 2, 0, 1, 0, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 0, 2, 0, 0, 1, 2, 0, 1, 1, 2, 0, 0, 0, 2, 1, 1, 1, 2, 0, 0, 0, 2, 1, 0, 1, 2, 1, 1, 1, 2, 0, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 0, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 0, 0, 2, 0, 1, 1, 2, 1, 0, 1, 2, 1, 1, 0, 2, 0, 1, 0, 2, 1, 1, 1, 2, 0, 1, 0, 2, 1, 0, 1, 2, 1, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 0, 1, 1, 2, 1, 1, 0, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], spriteFlags: []};
var mapFilterFlags_16405022 = [0];
var buttonDown_16531014 = [false];
var playerX_16531015 = [divInt(screenWidth_12775220[0], 2)];
var playerY_16531016 = [divInt(screenWidth_12775220[0], 2)];
var playerWidth_16531018 = [2];
var playerHeight_16531020 = [2];
var pressedLeft_16531021 = [false];
var pressedRight_16531022 = [false];
var pressedUp_16531023 = [false];
var pressedDown_16531024 = [false];
function newSeq_14630077(len_14630080) {
  var result_14630082 = [];

    result_14630082 = new Array(len_14630080); for (var i=0;i<len_14630080;++i) {result_14630082[i]=null;}
  return result_14630082;

}
function new_12591272() {
  var result_12591276 = null;

  BeforeRet: do {
    var r_12591401 = null;
    r_12591401 = ({kind: 0, name: [], id: 0, axes: [{Field0: 0.0, Field1: 0.0, Field2: 0}, {Field0: 0.0, Field1: 0.0, Field2: 0}, {Field0: 0.0, Field1: 0.0, Field2: 0}, {Field0: 0.0, Field1: 0.0, Field2: 0}, {Field0: 0.0, Field1: 0.0, Field2: 0}, {Field0: 0.0, Field1: 0.0, Field2: 0}], buttons: new Int32Array(16), deadzone: 0.0, invertX: false, invertY: false, useRightStick: false});
    result_12591276 = r_12591401;
    break BeforeRet;
  } while (false);

  return result_12591276;

}
function newNicoController_12591267(id_12591269) {
  var result_12591270 = null;

    result_12591270 = new_12591272();
    result_12591270.id = ((id_12591269)|0);
    if ((-1 < id_12591269)) {
    result_12591270.kind = 1;
    result_12591270.deadzone = 5.0000000000000000e-001;
    }
    else {
      result_12591270.kind = 0;
      result_12591270.name = nimCopy(null, makeNimstrLit("KEYBOARD"), NTI1208013);
    }
    
    rawEcho(makeNimstrLit("added game controller: "), cstrToNimstr((((id_12591269)|0))+""), makeNimstrLit(": "), reprEnum(result_12591270.kind, NTI12591202), makeNimstrLit(": "), result_12591270.name);

  return result_12591270;

}
function isNimException_1395704() {
    return lastJSError && lastJSError.m_type;

  
}
function init_14630070(org_14630072, app_14630073) {
    var Tmp2;

    basePath_12775256[0] = nimCopy(null, [], NTI1208013);
    assetPath_12775257[0] = nimCopy(null, makeNimstrLit("assets/"), NTI1208013);
    writePath_12775258[0] = nimCopy(null, [], NTI1208013);
    controllers_12775242[0] = nimCopy(null, newSeq_14630077(0), NTI14630081);
    controllers_12775242[0].push(newNicoController_12591267(-1));;
++excHandler;
    Tmp2 = framePtr;
    try {
    audioContext_14357019[0] = new AudioContext();
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
    framePtr = Tmp2;
    if (lastJSError && (lastJSError instanceof TypeError)) {
    audioContext_14357019[0] = null;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Tmp2;
    }
    if (!((audioContext_14357019[0] == null))) {
    rawEcho(makeNimstrLit("audioContext established"));
    sfxGain_14360044[0] = audioContext_14357019[0].createGain();
    sfxGain_14360044[0].gain.value = 1.0000000000000000e+000;
    musicGain_14360045[0] = audioContext_14357019[0].createGain();
    musicGain_14360045[0].gain.value = 1.0000000000000000e+000;
    masterGain_14360046[0] = audioContext_14357019[0].createGain();
    masterGain_14360046[0].gain.value = 1.0000000000000000e+000;
    sfxGain_14360044[0].connect(masterGain_14360046[0]);
    musicGain_14360045[0].connect(masterGain_14360046[0]);
    masterGain_14360046[0].connect(audioContext_14357019[0].destination);
    L3: do {
      var c_14635024 = null;
      var i_16531198 = 0;
      if ((i_16531198 <= 15)) {
      L4: do {
          L5: while (true) {
          if (!true) break L5;
            c_14635024 = audioChannels_14357102[0][chckIndx(i_16531198, 0, (audioChannels_14357102[0]).length-1)];
            c_14635024.gain = audioContext_14357019[0].createGain();
            c_14635024.gain.gain.value = 1.0000000000000000e+000;
            if ((15 <= i_16531198)) {
            break L4;
            }
            
            i_16531198 = addInt(i_16531198, 1);
          }
      } while(false);
      }
      
    } while(false);
    }
    else {
    rawEcho(makeNimstrLit("no audioContext"));
    }
    

  
}
function setPalette_15090034(p_15090036) {
    nimCopy(currentPalette_12775140[0], p_15090036, NTI12591076);

  
}
function RGB_12815071(r_12815073, g_12815074, b_12815075) {
  var result_12815080 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: do {
    var colontmp__16531204 = r_12815073;
    var colontmp__16531205 = g_12815074;
    var colontmp__16531206 = b_12815075;
    nimCopy(result_12815080, {Field0: colontmp__16531204, Field1: colontmp__16531205, Field2: colontmp__16531206}, NTI12815076);
    break BeforeRet;
  } while (false);

  return result_12815080;

}
function loadPalettePico8_15021300() {
  var result_15090093 = {Field0: 0, Field1: arrayConstr(256, {Field0: 0, Field1: 0, Field2: 0}, NTI12591080)};

    nimCopy(result_15090093.Field1[chckIndx(0, 0, (result_15090093.Field1).length-1)], RGB_12815071(0, 0, 0), NTI12591080);
    nimCopy(result_15090093.Field1[chckIndx(1, 0, (result_15090093.Field1).length-1)], RGB_12815071(29, 43, 83), NTI12591080);
    nimCopy(result_15090093.Field1[chckIndx(2, 0, (result_15090093.Field1).length-1)], RGB_12815071(126, 37, 83), NTI12591080);
    nimCopy(result_15090093.Field1[chckIndx(3, 0, (result_15090093.Field1).length-1)], RGB_12815071(0, 135, 81), NTI12591080);
    nimCopy(result_15090093.Field1[chckIndx(4, 0, (result_15090093.Field1).length-1)], RGB_12815071(171, 82, 54), NTI12591080);
    nimCopy(result_15090093.Field1[chckIndx(5, 0, (result_15090093.Field1).length-1)], RGB_12815071(95, 87, 79), NTI12591080);
    nimCopy(result_15090093.Field1[chckIndx(6, 0, (result_15090093.Field1).length-1)], RGB_12815071(194, 195, 199), NTI12591080);
    nimCopy(result_15090093.Field1[chckIndx(7, 0, (result_15090093.Field1).length-1)], RGB_12815071(255, 241, 232), NTI12591080);
    nimCopy(result_15090093.Field1[chckIndx(8, 0, (result_15090093.Field1).length-1)], RGB_12815071(255, 0, 77), NTI12591080);
    nimCopy(result_15090093.Field1[chckIndx(9, 0, (result_15090093.Field1).length-1)], RGB_12815071(255, 163, 0), NTI12591080);
    nimCopy(result_15090093.Field1[chckIndx(10, 0, (result_15090093.Field1).length-1)], RGB_12815071(255, 240, 36), NTI12591080);
    nimCopy(result_15090093.Field1[chckIndx(11, 0, (result_15090093.Field1).length-1)], RGB_12815071(0, 231, 86), NTI12591080);
    nimCopy(result_15090093.Field1[chckIndx(12, 0, (result_15090093.Field1).length-1)], RGB_12815071(41, 173, 255), NTI12591080);
    nimCopy(result_15090093.Field1[chckIndx(13, 0, (result_15090093.Field1).length-1)], RGB_12815071(131, 118, 156), NTI12591080);
    nimCopy(result_15090093.Field1[chckIndx(14, 0, (result_15090093.Field1).length-1)], RGB_12815071(255, 119, 168), NTI12591080);
    nimCopy(result_15090093.Field1[chckIndx(15, 0, (result_15090093.Field1).length-1)], RGB_12815071(255, 204, 170), NTI12591080);
    result_15090093.Field0 = 16;

  return result_15090093;

}
function sysFatal_1325418(message_1325422) {
    raiseException({message: nimCopy(null, message_1325422, NTI1208013), m_type: NTI1214641, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}
function raiseAssert_1325414(msg_1325416) {
    sysFatal_1325418(msg_1325416);

  
}
function failedAssertImpl_1325480(msg_1325482) {
    raiseAssert_1325414(msg_1325482);

  
}
function rotl_14738630(x_14738632, k_14738633) {
  var result_14738634 = 0;

    result_14738634 = ((x_14738632 << k_14738633) | ((x_14738632 >>> 0) >>> ((64 - k_14738633) >>> 0)));

  return result_14738634;

}
function next_14738658(r_14738661) {
  var result_14738662 = 0;

    var s0_14738663 = r_14738661.a0;
    var s1_14738664 = r_14738661.a1;
    result_14738662 = ((s0_14738663 + s1_14738664) >>> 0);
    s1_14738664 = (s1_14738664 ^ s0_14738663);
    r_14738661.a0 = ((rotl_14738630(s0_14738663, 55) ^ s1_14738664) ^ (s1_14738664 << 14));
    r_14738661.a1 = rotl_14738630(s1_14738664, 36);

  return result_14738662;

}
function initRand_14760214(seed_14760216) {
  var result_14760217 = [({a0: 0, a1: 0})];

    if (!(!((seed_14760216 == 0)))) {
    failedAssertImpl_1325480(makeNimstrLit("random.nim(568, 12) `seed != 0` "));
    }
    
    result_14760217[0].a0 = Math.floor(seed_14760216 / Math.pow(2,16));
    result_14760217[0].a1 = (seed_14760216 & 65535);
    var _ = next_14738658(result_14760217[0]);

  return result_14760217[0];

}
function randomize_14775222(seed_14775224) {
    nimCopy(state_14738405[0], initRand_14760214(seed_14775224), NTI14738402);

  
}
function epochTime_11745141() {
  var result_11745143 = 0.0;

    result_11745143 = HEX2F_1575648(new Date().getTime(), 1000);

  return result_11745143;

}
function loadConfig_14630055() {
  
}
function new_12775765() {
  var result_12775769 = null;

  BeforeRet: do {
    var r_12775801 = null;
    r_12775801 = ({data: [], channels: 0, w: 0, h: 0, tw: 0, th: 0, filename: [], spriteFlags: []});
    result_12775769 = r_12775801;
    break BeforeRet;
  } while (false);

  return result_12775769;

}
function newSeq_12775839(len_12775842) {
  var result_12775844 = [];

    result_12775844 = new Array(len_12775842); for (var i=0;i<len_12775842;++i) {result_12775844[i]=0;}
  return result_12775844;

}
function newSurface_12775759(w_12775761, h_12775762) {
  var result_12775763 = null;

    result_12775763 = new_12775765();
    result_12775763.data = nimCopy(null, newSeq_12775839(chckRange(mulInt(w_12775761, h_12775762), 0, 2147483647)), NTI12775843);
    result_12775763.channels = 1;
    result_12775763.w = w_12775761;
    result_12775763.h = h_12775762;

  return result_12775763;

}
function setSpritesheet_16275015(index_16275017) {
      var Tmp1;

      if ((index_16275017 < 0)) Tmp1 = true; else {        Tmp1 = (16 <= index_16275017);      }    if (Tmp1) {
    raiseException({message: (makeNimstrLit("Invalid spritesheet ") || []).concat(cstrToNimstr((index_16275017)+"") || []), parent: null, m_type: NTI1214617, name: null, trace: [], up: null}, "Exception");
    }
    
    if ((spritesheets_12775263[0][chckIndx(index_16275017, 0, (spritesheets_12775263[0]).length-1)] == null)) {
    raiseException({message: (makeNimstrLit("No spritesheet loaded: ") || []).concat(cstrToNimstr((index_16275017)+"") || []), parent: null, m_type: NTI1214617, name: null, trace: [], up: null}, "Exception");
    }
    
    spritesheet_12775264[0] = spritesheets_12775263[0][chckIndx(index_16275017, 0, (spritesheets_12775263[0]).length-1)];

  
}
function new_15815303() {
  var result_15815307 = null;

  BeforeRet: do {
    var r_15815401 = null;
    r_15815401 = ({rects: ({data: [], counter: 0}), data: [], w: 0, h: 0});
    result_15815307 = r_15815401;
    break BeforeRet;
  } while (false);

  return result_15815307;

}
function nucruneLen(s_2512025) {
  var result_2512026 = 0;

    result_2512026 = 0;
    var i_2512028 = 0;
    L1: do {
        L2: while (true) {
        if (!(i_2512028 < (s_2512025).length)) break L2;
          if ((s_2512025[chckIndx(i_2512028, 0, (s_2512025).length-1)] <= 127)) {
          i_2512028 = addInt(i_2512028, 1);
          }
          else {
          if ((((s_2512025[chckIndx(i_2512028, 0, (s_2512025).length-1)] >>> 0) >>> 5) == 6)) {
          i_2512028 = addInt(i_2512028, 2);
          }
          else {
          if ((((s_2512025[chckIndx(i_2512028, 0, (s_2512025).length-1)] >>> 0) >>> 4) == 14)) {
          i_2512028 = addInt(i_2512028, 3);
          }
          else {
          if ((((s_2512025[chckIndx(i_2512028, 0, (s_2512025).length-1)] >>> 0) >>> 3) == 30)) {
          i_2512028 = addInt(i_2512028, 4);
          }
          else {
          if ((((s_2512025[chckIndx(i_2512028, 0, (s_2512025).length-1)] >>> 0) >>> 2) == 62)) {
          i_2512028 = addInt(i_2512028, 5);
          }
          else {
          if ((((s_2512025[chckIndx(i_2512028, 0, (s_2512025).length-1)] >>> 0) >>> 1) == 126)) {
          i_2512028 = addInt(i_2512028, 6);
          }
          else {
          i_2512028 = addInt(i_2512028, 1);
          }
          }}}}}
          result_2512026 = addInt(result_2512026, 1);
        }
    } while(false);

  return result_2512026;

}
function initTable_15830011(initialSize_15830015) {
  var result_15830017 = ({data: [], counter: 0});

    var correctSizeHEX60gensym162_15835001 = slotsNeeded_2415048(chckRange(initialSize_15830015, 0, 2147483647));
    result_15830017.counter = 0;
    result_15830017.data = new Array(chckRange(correctSizeHEX60gensym162_15835001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym162_15835001, 0, 2147483647);++i) {result_15830017.data[i]={Field0: 0, Field1: 0, Field2: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}};}
  return result_15830017;

}
function hashWangYi1_2350417(x_2350420) {
  var result_2350421 = 0;

            if (typeof BigInt == 'undefined') {
          result_2350421 = x_2350420; // For Node < 10.4, etc. we do the old identity hash
        } else {          // Otherwise we match the low 32-bits of C/C++ hash
          function hi_xor_lo_js(a, b) {
            const prod = BigInt(a) * BigInt(b);
            const mask = (BigInt(1) << BigInt(64)) - BigInt(1);
            return (prod >> BigInt(64)) ^ (prod & mask);
          }
          const P0  = BigInt(0xa0761d64)<<BigInt(32)|BigInt(0x78bd642f);
          const P1  = BigInt(0xe7037ed1)<<BigInt(32)|BigInt(0xa0b428db);
          const P58 = BigInt(0xeb44acca)<<BigInt(32)|BigInt(0xb455d165)^BigInt(8);
          var res   = hi_xor_lo_js(hi_xor_lo_js(P0, BigInt(x_2350420) ^ P1), P58);
          result_2350421  = Number(res & ((BigInt(1) << BigInt(53)) - BigInt(1)));
        }

  return result_2350421;

}
function hash_16095001(x_16095004) {
  var result_16095005 = 0;

    result_16095005 = hashWangYi1_2350417(x_16095004);

  return result_16095005;

}
function isFilled_2412218(hcode_2412220) {
  var result_2412221 = false;

    result_2412221 = !((hcode_2412220 == 0));

  return result_2412221;

}
function HEX3DHEX3D_3405064(a_3405066, b_3405067) {
  var result_3405068 = false;

  BeforeRet: do {
    result_3405068 = (((a_3405066)|0) == ((b_3405067)|0));
    break BeforeRet;
  } while (false);

  return result_3405068;

}
function nextTry_2415014(h_2415016, maxHash_2415017) {
  var result_2415018 = 0;

    result_2415018 = (addInt(h_2415016, 1) & maxHash_2415017);

  return result_2415018;

}
function rawGet_16090332(t_16090336, key_16090337, hc_16090338, hc_16090338_Idx) {
            var Tmp3;

  var result_16090339 = 0;

  BeforeRet: do {
    hc_16090338[hc_16090338_Idx] = hash_16095001(key_16090337);
    if ((hc_16090338[hc_16090338_Idx] == 0)) {
    hc_16090338[hc_16090338_Idx] = 314159265;
    }
    
    if (((t_16090336.data).length == 0)) {
    result_16090339 = -1;
    break BeforeRet;
    }
    
    var h_16100160 = (hc_16090338[hc_16090338_Idx] & ((t_16090336.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_2412218(t_16090336.data[chckIndx(h_16100160, 0, (t_16090336.data).length-1)].Field0)) break L2;
            if (!(t_16090336.data[chckIndx(h_16100160, 0, (t_16090336.data).length-1)].Field0 == hc_16090338[hc_16090338_Idx])) Tmp3 = false; else {              Tmp3 = HEX3DHEX3D_3405064(t_16090336.data[chckIndx(h_16100160, 0, (t_16090336.data).length-1)].Field1, key_16090337);            }          if (Tmp3) {
          result_16090339 = h_16100160;
          break BeforeRet;
          }
          
          h_16100160 = nextTry_2415014(h_16100160, ((t_16090336.data).length-1));
        }
    } while(false);
    result_16090339 = subInt(-1, h_16100160);
  } while (false);

  return result_16090339;

}
function hasKey_16090316(t_16090321, key_16090322) {
  var result_16090323 = false;

    var hc_16090324 = [0];
    result_16090323 = (0 <= rawGet_16090332(t_16090321, key_16090322, hc_16090324, 0));

  return result_16090323;

}
function HEX3CHEX3DHEX25_1212474(x_1212476, y_1212477) {
  var result_1212478 = false;

    result_1212478 = ((x_1212476 >>> 0) <= (y_1212477 >>> 0));

  return result_1212478;

}
function nuctoUTF8(c_2755474) {
  var result_2755475 = [];

    result_2755475 = nimCopy(null, [], NTI1208013);
    var iHEX60gensym49_2760001 = c_2755474;
    if (HEX3CHEX3DHEX25_1212474(iHEX60gensym49_2760001, 127)) {
    (result_2755475.length = 1);
    result_2755475[chckIndx(0, 0, (result_2755475).length-1)] = chckRange(iHEX60gensym49_2760001, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_1212474(iHEX60gensym49_2760001, 2047)) {
    (result_2755475.length = 2);
    result_2755475[chckIndx(0, 0, (result_2755475).length-1)] = chckRange(((iHEX60gensym49_2760001 >> 6) | 192), 0, 255);
    result_2755475[chckIndx(1, 0, (result_2755475).length-1)] = chckRange(((iHEX60gensym49_2760001 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_1212474(iHEX60gensym49_2760001, 65535)) {
    (result_2755475.length = 3);
    result_2755475[chckIndx(0, 0, (result_2755475).length-1)] = chckRange(((iHEX60gensym49_2760001 >> 12) | 224), 0, 255);
    result_2755475[chckIndx(1, 0, (result_2755475).length-1)] = chckRange((((iHEX60gensym49_2760001 >> 6) & 63) | 128), 0, 255);
    result_2755475[chckIndx(2, 0, (result_2755475).length-1)] = chckRange(((iHEX60gensym49_2760001 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_1212474(iHEX60gensym49_2760001, 2097151)) {
    (result_2755475.length = 4);
    result_2755475[chckIndx(0, 0, (result_2755475).length-1)] = chckRange(((iHEX60gensym49_2760001 >> 18) | 240), 0, 255);
    result_2755475[chckIndx(1, 0, (result_2755475).length-1)] = chckRange((((iHEX60gensym49_2760001 >> 12) & 63) | 128), 0, 255);
    result_2755475[chckIndx(2, 0, (result_2755475).length-1)] = chckRange((((iHEX60gensym49_2760001 >> 6) & 63) | 128), 0, 255);
    result_2755475[chckIndx(3, 0, (result_2755475).length-1)] = chckRange(((iHEX60gensym49_2760001 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_1212474(iHEX60gensym49_2760001, 67108863)) {
    (result_2755475.length = 5);
    result_2755475[chckIndx(0, 0, (result_2755475).length-1)] = chckRange(((iHEX60gensym49_2760001 >> 24) | 248), 0, 255);
    result_2755475[chckIndx(1, 0, (result_2755475).length-1)] = chckRange((((iHEX60gensym49_2760001 >> 18) & 63) | 128), 0, 255);
    result_2755475[chckIndx(2, 0, (result_2755475).length-1)] = chckRange((((iHEX60gensym49_2760001 >> 12) & 63) | 128), 0, 255);
    result_2755475[chckIndx(3, 0, (result_2755475).length-1)] = chckRange((((iHEX60gensym49_2760001 >> 6) & 63) | 128), 0, 255);
    result_2755475[chckIndx(4, 0, (result_2755475).length-1)] = chckRange(((iHEX60gensym49_2760001 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_1212474(iHEX60gensym49_2760001, 2147483647)) {
    (result_2755475.length = 6);
    result_2755475[chckIndx(0, 0, (result_2755475).length-1)] = chckRange(((iHEX60gensym49_2760001 >> 30) | 252), 0, 255);
    result_2755475[chckIndx(1, 0, (result_2755475).length-1)] = chckRange((((iHEX60gensym49_2760001 >> 24) & 63) | 128), 0, 255);
    result_2755475[chckIndx(2, 0, (result_2755475).length-1)] = chckRange((((iHEX60gensym49_2760001 >> 18) & 63) | 128), 0, 255);
    result_2755475[chckIndx(3, 0, (result_2755475).length-1)] = chckRange((((iHEX60gensym49_2760001 >> 12) & 63) | 128), 0, 255);
    result_2755475[chckIndx(4, 0, (result_2755475).length-1)] = chckRange((((iHEX60gensym49_2760001 >> 6) & 63) | 128), 0, 255);
    result_2755475[chckIndx(5, 0, (result_2755475).length-1)] = chckRange(((iHEX60gensym49_2760001 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  return result_2755475;

}
function HEX24_3125214(rune_3125216) {
  var result_3125217 = [];

    result_3125217 = nimCopy(null, nuctoUTF8(rune_3125216), NTI1208013);

  return result_3125217;

}
function mustRehash_16135601(t_16135604) {
  var result_16135605 = false;

    if (!((t_16135604.counter < (t_16135604.data).length))) {
    failedAssertImpl_1325480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_16135605 = ((mulInt((t_16135604.data).length, 2) < mulInt(t_16135604.counter, 3)) || (subInt((t_16135604.data).length, t_16135604.counter) < 4));

  return result_16135605;

}
function rawInsert_16161131(t_16161137, data_16161140, data_16161140_Idx, key_16161141, val_16161143, hc_16161144, h_16161145) {
    data_16161140[data_16161140_Idx][chckIndx(h_16161145, 0, (data_16161140[data_16161140_Idx]).length-1)].Field1 = key_16161141;
    nimCopy(data_16161140[data_16161140_Idx][chckIndx(h_16161145, 0, (data_16161140[data_16161140_Idx]).length-1)].Field2, val_16161143, NTI12705648);
    data_16161140[data_16161140_Idx][chckIndx(h_16161145, 0, (data_16161140[data_16161140_Idx]).length-1)].Field0 = hc_16161144;

  
}
function enlarge_16160172(t_16160178) {
    var n_16160186 = [];
    n_16160186 = new Array(chckRange(mulInt((t_16160178.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_16160178.data).length, 2), 0, 2147483647);++i) {n_16160186[i]={Field0: 0, Field1: 0, Field2: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}};}    var Tmp1 = t_16160178.data; t_16160178.data = n_16160186; n_16160186 = Tmp1;    L2: do {
      var i_16160358 = 0;
      var colontmp__16531275 = 0;
      colontmp__16531275 = ((n_16160186).length-1);
      var res_16531280 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16531280 <= colontmp__16531275)) break L4;
            i_16160358 = res_16531280;
            var eh_16160518 = n_16160186[chckIndx(i_16160358, 0, (n_16160186).length-1)].Field0;
            if (isFilled_2412218(eh_16160518)) {
            var j_16160525 = (eh_16160518 & ((t_16160178.data).length-1));
            L5: do {
                L6: while (true) {
                if (!isFilled_2412218(t_16160178.data[chckIndx(j_16160525, 0, (t_16160178.data).length-1)].Field0)) break L6;
                  j_16160525 = nextTry_2415014(j_16160525, ((t_16160178.data).length-1));
                }
            } while(false);
            rawInsert_16161131(t_16160178, t_16160178, "data", n_16160186[chckIndx(i_16160358, 0, (n_16160186).length-1)].Field1, n_16160186[chckIndx(i_16160358, 0, (n_16160186).length-1)].Field2, eh_16160518, j_16160525);
            }
            
            res_16531280 = addInt(res_16531280, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_16161650(t_16161654, key_16161655, hc_16161656) {
  var result_16161657 = 0;

  BeforeRet: do {
    if (((t_16161654.data).length == 0)) {
    result_16161657 = -1;
    break BeforeRet;
    }
    
    var h_16165160 = (hc_16161656 & ((t_16161654.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_2412218(t_16161654.data[chckIndx(h_16165160, 0, (t_16161654.data).length-1)].Field0)) break L2;
          if (((t_16161654.data[chckIndx(h_16165160, 0, (t_16161654.data).length-1)].Field0 == hc_16161656) && HEX3DHEX3D_3405064(t_16161654.data[chckIndx(h_16165160, 0, (t_16161654.data).length-1)].Field1, key_16161655))) {
          result_16161657 = h_16165160;
          break BeforeRet;
          }
          
          h_16165160 = nextTry_2415014(h_16165160, ((t_16161654.data).length-1));
        }
    } while(false);
    result_16161657 = subInt(-1, h_16165160);
  } while (false);

  return result_16161657;

}
function HEX5BHEX5DHEX3D_16105123(t_16105129, key_16105130, val_16105132) {
    if (((t_16105129.data).length == 0)) {
    var correctSizeHEX60gensym218_16115001 = slotsNeeded_2415048(32);
    t_16105129.counter = 0;
    t_16105129.data = new Array(chckRange(correctSizeHEX60gensym218_16115001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym218_16115001, 0, 2147483647);++i) {t_16105129.data[i]={Field0: 0, Field1: 0, Field2: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}};}    }
    
    var hc_16120601 = [0];
    var index_16120610 = rawGet_16090332(t_16105129, key_16105130, hc_16120601, 0);
    if ((0 <= index_16120610)) {
    nimCopy(t_16105129.data[chckIndx(index_16120610, 0, (t_16105129.data).length-1)].Field2, val_16105132, NTI12705648);
    }
    else {
      if (((t_16105129.data).length == 0)) {
      var correctSizeHEX60gensym221_16130001 = slotsNeeded_2415048(32);
      t_16105129.counter = 0;
      t_16105129.data = new Array(chckRange(correctSizeHEX60gensym221_16130001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym221_16130001, 0, 2147483647);++i) {t_16105129.data[i]={Field0: 0, Field1: 0, Field2: {Field0: 0, Field1: 0, Field2: 0, Field3: 0}};}      }
      
      if (mustRehash_16135601(t_16105129)) {
      enlarge_16160172(t_16105129);
      index_16120610 = rawGetKnownHC_16161650(t_16105129, key_16105130, hc_16120601[0]);
      }
      
      index_16120610 = subInt(-1, index_16120610);
      rawInsert_16161131(t_16105129, t_16105129, "data", key_16105130, val_16105132, hc_16120601[0], index_16120610);
      t_16105129.counter = addInt(t_16105129.counter, 1);
    }
    

  
}
function len_16165906(t_16165911) {
  var result_16165912 = 0;

    result_16165912 = t_16165911.counter;

  return result_16165912;

}
function createFontFromSurface_15815297(surface_15815299, chars_15815300) {
  var result_15815301 = null;

  BeforeRet: do {
    var font_15815436 = new_15815303();
    font_15815436.w = surface_15815299.w;
    font_15815436.h = surface_15815299.h;
    font_15815436.data = nimCopy(null, newSeq_12775839(chckRange(mulInt(font_15815436.w, font_15815436.h), 0, 2147483647)), NTI12775843);
    var borderColor_15815453 = 2;
    var solidColor_15815454 = 1;
    var transparentColor_15815455 = 0;
    if ((surface_15815299.channels == 4)) {
    console.log("loading font from RGBA", toJSStr(surface_15815299.filename), "chars", nucruneLen(chars_15815300));
    var borderColorRGBA_15820002 = {Field0: surface_15815299.data[chckIndx(0, 0, (surface_15815299.data).length-1)], Field1: surface_15815299.data[chckIndx(1, 0, (surface_15815299.data).length-1)], Field2: surface_15815299.data[chckIndx(2, 0, (surface_15815299.data).length-1)], Field3: surface_15815299.data[chckIndx(3, 0, (surface_15815299.data).length-1)]};
    var transparentColorRGBA_15820004 = {Field0: surface_15815299.data[chckIndx(4, 0, (surface_15815299.data).length-1)], Field1: surface_15815299.data[chckIndx(5, 0, (surface_15815299.data).length-1)], Field2: surface_15815299.data[chckIndx(6, 0, (surface_15815299.data).length-1)], Field3: surface_15815299.data[chckIndx(7, 0, (surface_15815299.data).length-1)]};
    L1: do {
      var i_15820012 = 0;
      var colontmp__16531214 = 0;
      colontmp__16531214 = mulInt(font_15815436.w, font_15815436.h);
      var i_16531215 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16531215 < colontmp__16531214)) break L3;
            i_15820012 = i_16531215;
            var col_15820014 = {Field0: surface_15815299.data[chckIndx(addInt(mulInt(i_15820012, surface_15815299.channels), 0), 0, (surface_15815299.data).length-1)], Field1: surface_15815299.data[chckIndx(addInt(mulInt(i_15820012, surface_15815299.channels), 1), 0, (surface_15815299.data).length-1)], Field2: surface_15815299.data[chckIndx(addInt(mulInt(i_15820012, surface_15815299.channels), 2), 0, (surface_15815299.data).length-1)], Field3: surface_15815299.data[chckIndx(addInt(mulInt(i_15820012, surface_15815299.channels), 3), 0, (surface_15815299.data).length-1)]};
            if ((col_15820014["Field3"] == 0)) {
            font_15815436.data[chckIndx(i_15820012, 0, (font_15815436.data).length-1)] = transparentColor_15815455;
            }
            else {
            if ((127 < col_15820014["Field0"])) {
            font_15815436.data[chckIndx(i_15820012, 0, (font_15815436.data).length-1)] = borderColor_15815453;
            }
            else {
              font_15815436.data[chckIndx(i_15820012, 0, (font_15815436.data).length-1)] = solidColor_15815454;
            }
            }
            i_16531215 = addInt(i_16531215, 1);
          }
      } while(false);
    } while(false);
    }
    else {
    if ((surface_15815299.channels == 1)) {
    console.log("loading font from indexed", toJSStr(surface_15815299.filename));
    L4: do {
      var i_15830008 = 0;
      var colontmp__16531218 = 0;
      colontmp__16531218 = mulInt(font_15815436.w, font_15815436.h);
      var i_16531219 = 0;
      L5: do {
          L6: while (true) {
          if (!(i_16531219 < colontmp__16531218)) break L6;
            i_15830008 = i_16531219;
            font_15815436.data[chckIndx(i_15830008, 0, (font_15815436.data).length-1)] = surface_15815299.data[chckIndx(i_15830008, 0, (surface_15815299.data).length-1)];
            i_16531219 = addInt(i_16531219, 1);
          }
      } while(false);
    } while(false);
    }
    }
    nimCopy(font_15815436.rects, initTable_15830011(128), NTI12705671);
    var newChar_15840630 = false;
    var currentRect_15840636 = nimCopy(null, {Field0: 0, Field1: 0, Field2: 0, Field3: 0}, NTI12705648);
    var i_15840638 = 0;
    var charPos_15840640 = 0;
    L7: do {
      var x_15840648 = 0;
      var i_16531254 = 0;
      L8: do {
          L9: while (true) {
          if (!(i_16531254 < font_15815436.w)) break L9;
            x_15840648 = i_16531254;
            var color_15840649 = font_15815436.data[chckIndx(x_15840648, 0, (font_15815436.data).length-1)];
            if ((color_15840649 == borderColor_15815453)) {
            currentRect_15840636.Field2 = subInt(x_15840648, currentRect_15840636.Field0);
            if (!((currentRect_15840636.Field2 == 0))) {
            currentRect_15840636.Field3 = subInt(font_15815436.h, 1);
            L10: do {
              var y_15845008 = 0;
              var i_16531223 = 0;
              L11: do {
                  L12: while (true) {
                  if (!(i_16531223 < font_15815436.h)) break L12;
                    y_15845008 = i_16531223;
                    var color_15845009 = font_15815436.data[chckIndx(addInt(mulInt(y_15845008, font_15815436.w), x_15840648), 0, (font_15815436.data).length-1)];
                    if ((color_15845009 == borderColor_15815453)) {
                    currentRect_15840636.Field3 = y_15845008;
                    }
                    
                    i_16531223 = addInt(i_16531223, 1);
                  }
              } while(false);
            } while(false);
            var charId_15845010 = 0;
            if ((chars_15815300[chckIndx(charPos_15840640, 0, (chars_15815300).length-1)] <= 127)) {
            charId_15845010 = chckRange(chars_15815300[chckIndx(charPos_15840640, 0, (chars_15815300).length-1)], -2147483648, 2147483647);
            charPos_15840640 = addInt(charPos_15840640, 1);
            }
            else {
            if ((((chars_15815300[chckIndx(charPos_15840640, 0, (chars_15815300).length-1)] >>> 0) >>> 5) == 6)) {
            if ((charPos_15840640 <= subInt((chars_15815300).length, 2))) {
            charId_15845010 = chckRange((((chars_15815300[chckIndx(charPos_15840640, 0, (chars_15815300).length-1)] & 31) << 6) | (chars_15815300[chckIndx(addInt(charPos_15840640, 1), 0, (chars_15815300).length-1)] & 63)), -2147483648, 2147483647);
            charPos_15840640 = addInt(charPos_15840640, 2);
            }
            else {
              charId_15845010 = 65533;
              charPos_15840640 = addInt(charPos_15840640, 1);
            }
            
            }
            else {
            if ((((chars_15815300[chckIndx(charPos_15840640, 0, (chars_15815300).length-1)] >>> 0) >>> 4) == 14)) {
            if ((charPos_15840640 <= subInt((chars_15815300).length, 3))) {
            charId_15845010 = chckRange(((((chars_15815300[chckIndx(charPos_15840640, 0, (chars_15815300).length-1)] & 15) << 12) | ((chars_15815300[chckIndx(addInt(charPos_15840640, 1), 0, (chars_15815300).length-1)] & 63) << 6)) | (chars_15815300[chckIndx(addInt(charPos_15840640, 2), 0, (chars_15815300).length-1)] & 63)), -2147483648, 2147483647);
            charPos_15840640 = addInt(charPos_15840640, 3);
            }
            else {
              charId_15845010 = 65533;
              charPos_15840640 = addInt(charPos_15840640, 1);
            }
            
            }
            else {
            if ((((chars_15815300[chckIndx(charPos_15840640, 0, (chars_15815300).length-1)] >>> 0) >>> 3) == 30)) {
            if ((charPos_15840640 <= subInt((chars_15815300).length, 4))) {
            charId_15845010 = chckRange((((((chars_15815300[chckIndx(charPos_15840640, 0, (chars_15815300).length-1)] & 7) << 18) | ((chars_15815300[chckIndx(addInt(charPos_15840640, 1), 0, (chars_15815300).length-1)] & 63) << 12)) | ((chars_15815300[chckIndx(addInt(charPos_15840640, 2), 0, (chars_15815300).length-1)] & 63) << 6)) | (chars_15815300[chckIndx(addInt(charPos_15840640, 3), 0, (chars_15815300).length-1)] & 63)), -2147483648, 2147483647);
            charPos_15840640 = addInt(charPos_15840640, 4);
            }
            else {
              charId_15845010 = 65533;
              charPos_15840640 = addInt(charPos_15840640, 1);
            }
            
            }
            else {
            if ((((chars_15815300[chckIndx(charPos_15840640, 0, (chars_15815300).length-1)] >>> 0) >>> 2) == 62)) {
            if ((charPos_15840640 <= subInt((chars_15815300).length, 5))) {
            charId_15845010 = chckRange(((((((chars_15815300[chckIndx(charPos_15840640, 0, (chars_15815300).length-1)] & 3) << 24) | ((chars_15815300[chckIndx(addInt(charPos_15840640, 1), 0, (chars_15815300).length-1)] & 63) << 18)) | ((chars_15815300[chckIndx(addInt(charPos_15840640, 2), 0, (chars_15815300).length-1)] & 63) << 12)) | ((chars_15815300[chckIndx(addInt(charPos_15840640, 3), 0, (chars_15815300).length-1)] & 63) << 6)) | (chars_15815300[chckIndx(addInt(charPos_15840640, 4), 0, (chars_15815300).length-1)] & 63)), -2147483648, 2147483647);
            charPos_15840640 = addInt(charPos_15840640, 5);
            }
            else {
              charId_15845010 = 65533;
              charPos_15840640 = addInt(charPos_15840640, 1);
            }
            
            }
            else {
            if ((((chars_15815300[chckIndx(charPos_15840640, 0, (chars_15815300).length-1)] >>> 0) >>> 1) == 126)) {
            if ((charPos_15840640 <= subInt((chars_15815300).length, 6))) {
            charId_15845010 = chckRange((((((((chars_15815300[chckIndx(charPos_15840640, 0, (chars_15815300).length-1)] & 1) << 30) | ((chars_15815300[chckIndx(addInt(charPos_15840640, 1), 0, (chars_15815300).length-1)] & 63) << 24)) | ((chars_15815300[chckIndx(addInt(charPos_15840640, 2), 0, (chars_15815300).length-1)] & 63) << 18)) | ((chars_15815300[chckIndx(addInt(charPos_15840640, 3), 0, (chars_15815300).length-1)] & 63) << 12)) | ((chars_15815300[chckIndx(addInt(charPos_15840640, 4), 0, (chars_15815300).length-1)] & 63) << 6)) | (chars_15815300[chckIndx(addInt(charPos_15840640, 5), 0, (chars_15815300).length-1)] & 63)), -2147483648, 2147483647);
            charPos_15840640 = addInt(charPos_15840640, 6);
            }
            else {
              charId_15845010 = 65533;
              charPos_15840640 = addInt(charPos_15840640, 1);
            }
            
            }
            else {
              charId_15845010 = chckRange(chars_15815300[chckIndx(charPos_15840640, 0, (chars_15815300).length-1)], -2147483648, 2147483647);
              charPos_15840640 = addInt(charPos_15840640, 1);
            }
            }}}}}
            if (hasKey_16090316(font_15815436.rects, charId_15845010)) {
            raiseException({message: (makeNimstrLit("font already has character: ") || []).concat(HEX24_3125214(charId_15845010) || [],makeNimstrLit(" index: ") || [],cstrToNimstr((i_15840638)+"") || []), parent: null, m_type: NTI1214617, name: null, trace: [], up: null}, "Exception");
            }
            
            HEX5BHEX5DHEX3D_16105123(font_15815436.rects, charId_15845010, currentRect_15840636);
            i_15840638 = addInt(i_15840638, 1);
            }
            
            newChar_15840630 = true;
            currentRect_15840636.Field0 = addInt(x_15840648, 1);
            }
            
            i_16531254 = addInt(i_16531254, 1);
          }
      } while(false);
    } while(false);
    rawEcho(makeNimstrLit("loaded font with "), cstrToNimstr((len_16165906(font_15815436.rects))+""), makeNimstrLit(" chars"));
    if (!((len_16165906(font_15815436.rects) == nucruneLen(chars_15815300)))) {
    raiseException({message: (makeNimstrLit("didn\'t load all characters from font, loaded: ") || []).concat(cstrToNimstr((len_16165906(font_15815436.rects))+"") || [],makeNimstrLit(" bitmaps of specified chars ") || [],cstrToNimstr((nucruneLen(chars_15815300))+"") || []), parent: null, m_type: NTI1214617, name: null, trace: [], up: null}, "Exception");
    }
    
    result_15815301 = font_15815436;
    break BeforeRet;
  } while (false);

  return result_15815301;

}
function setFont_15021237(fontId_15021239) {
  BeforeRet: do {
    if ((16 < fontId_15021239)) {
    break BeforeRet;
    }
    
    currentFontId_12775292[0] = fontId_15021239;
    currentFont_12775291[0] = fonts_12775290[0][chckIndx(currentFontId_12775292[0], 0, (fonts_12775290[0]).length-1)];
  } while (false);

  
}
function loadDefaultFont_16176014(index_16176016) {
    var shouldReplace_16176024 = (currentFont_12775291[0] == fonts_12775290[0][chckIndx(index_16176016, 0, (fonts_12775290[0]).length-1)]);
    fonts_12775290[0][chckIndx(index_16176016, 0, (fonts_12775290[0]).length-1)] = createFontFromSurface_15815297(defaultFontSurface_16175071, makeNimstrLit(" !\"#$%&\'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{}~"));
    if (shouldReplace_16176024) {
    console.log("updating current font ", index_16176016);
    setFont_15021237(chckRange(index_16176016, 0, 15));
    }
    

  
}
function clip_15021416() {
    clipMinX_12775333[0] = 0;
    clipMaxX_12775334[0] = subInt(screenWidth_12775220[0], 1);
    clipMinY_12775335[0] = 0;
    clipMaxY_12775336[0] = subInt(screenHeight_12775223[0], 1);
    clippingRect_12775337[0].Field0 = 0;
    clippingRect_12775337[0].Field1 = 0;
    clippingRect_12775337[0].Field2 = subInt(screenWidth_12775220[0], 1);
    clippingRect_12775337[0].Field3 = subInt(screenHeight_12775223[0], 1);

  
}
function init_15035529(org_15035531, app_15035532) {
    controllers_12775242[0] = nimCopy(null, newSeq_14630077(0), NTI14630081);
    init_14630070(org_15035531, app_15035532);
    setPalette_15090034(loadPalettePico8_15021300());
    initialized_12775155[0] = true;
    randomize_14775222(epochTime_11745141());
    loadConfig_14630055();
    spritesheets_12775263[0][chckIndx(0, 0, (spritesheets_12775263[0]).length-1)] = newSurface_12775759(128, 128);
    spritesheets_12775263[0][chckIndx(0, 0, (spritesheets_12775263[0]).length-1)].tw = 8;
    spritesheets_12775263[0][chckIndx(0, 0, (spritesheets_12775263[0]).length-1)].th = 8;
    setSpritesheet_16275015(0);
    loadDefaultFont_16176014(0);
    clip_15021416();

  
}
function getContext2D_12956722(c_12956724) {
  var result_12956725 = null;

    result_12956725=c_12956724.getContext('2d');

  return result_12956725;

}
function resizeCanvas_14360402(w_14360404, h_14360405, scale_14360406) {
    rawEcho(makeNimstrLit("resizing canvas to "), cstrToNimstr((w_14360404)+""), makeNimstrLit(" x "), cstrToNimstr((h_14360405)+""), makeNimstrLit(" at scale "), cstrToNimstr((scale_14360406)+""));
    swCanvas_12775196[0] = newSurface_12775759(w_14360404, h_14360405);
    screenWidth_12775220[0] = w_14360404;
    screenHeight_12775223[0] = h_14360405;
    screenScale_12775259[0] = scale_14360406;
    if ((canvas_14357016[0] == null)) {
    canvas_14357016[0] = document.createElement("canvas");
    }
    
    canvas_14357016[0].width = w_14360404;
    canvas_14357016[0].height = h_14360405;
    canvas_14357016[0].style.width = toJSStr((cstrToNimstr((mulInt(w_14360404, scale_14360406))+"") || []).concat(makeNimstrLit("px") || []));
    canvas_14357016[0].style.height = toJSStr((cstrToNimstr((mulInt(h_14360405, scale_14360406))+"") || []).concat(makeNimstrLit("px") || []));
    ctx_14357014[0] = getContext2D_12956722(canvas_14357016[0]);
    swCanvas32_14357015[0] = ctx_14357014[0].getImageData(0.0, 0.0, w_14360404, h_14360405);
    stencilBuffer_12775197[0] = newSurface_12775759(w_14360404, h_14360405);

  
}
function max_1295014(x_1295016, y_1295017) {
    var Tmp1;
      var Tmp2;

  var result_1295018 = 0.0;

      if ((y_1295017 <= x_1295016)) Tmp2 = true; else {        Tmp2 = !((y_1295017 == y_1295017));      }    if (Tmp2) {
    Tmp1 = x_1295016;
    }
    else {
    Tmp1 = y_1295017;
    }
    
    result_1295018 = Tmp1;

  return result_1295018;

}
function min_1285281(x_1285283, y_1285284) {
    var Tmp1;
      var Tmp2;

  var result_1285285 = 0.0;

      if ((x_1285283 <= y_1285284)) Tmp2 = true; else {        Tmp2 = !((y_1285284 == y_1285284));      }    if (Tmp2) {
    Tmp1 = x_1285283;
    }
    else {
    Tmp1 = y_1285284;
    }
    
    result_1285285 = Tmp1;

  return result_1285285;

}
function resize_14360398(displayW_14360400, displayH_14360401) {
    rawEcho(makeNimstrLit("display "), cstrToNimstr((displayW_14360400)+""), makeNimstrLit(" x "), cstrToNimstr((displayH_14360401)+""));
    rawEcho(makeNimstrLit("canvas target size "), cstrToNimstr((targetScreenWidth_12775212[0])+""), makeNimstrLit(" x "), cstrToNimstr((targetScreenHeight_12775215[0])+""));
    screenScale_12775259[0] = max_1295014(1.0000000000000000e+000, min_1285281(Math.floor((displayW_14360400 / targetScreenWidth_12775212[0])), Math.floor((displayH_14360401 / targetScreenHeight_12775215[0]))));
    rawEcho(makeNimstrLit("scale "), cstrToNimstr(nimFloatToString(screenScale_12775259[0])));
    if (fixedScreenSize_12775216[0]) {
    var canvasW_14635092 = targetScreenWidth_12775212[0];
    var canvasH_14635093 = targetScreenHeight_12775215[0];
    resizeCanvas_14360402(canvasW_14635092, canvasH_14635093, ((screenScale_12775259[0])|0));
    }
    else {
      screenWidth_12775220[0] = divInt(displayW_14360400, ((screenScale_12775259[0])|0));
      screenHeight_12775223[0] = divInt(displayH_14360401, ((screenScale_12775259[0])|0));
      resizeCanvas_14360402(screenWidth_12775220[0], screenHeight_12775223[0], ((screenScale_12775259[0])|0));
    }
    

  
}
function sgn_14370406(x_14370409) {
  var result_14370410 = 0;

    result_14370410 = (((0 < x_14370409) ? 1:0) - ((x_14370409 < 0) ? 1:0));

  return result_14370410;

}
function find_14395134(a_14395138, item_14395139) {
  var result_14395140 = 0;

  BeforeRet: do {
    result_14395140 = 0;
    L1: do {
      var i_14395173 = null;
      var i_14395173_Idx = 0;
      var i_16531341 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16531341 < (a_14395138).length)) break L3;
            i_14395173 = a_14395138; i_14395173_Idx = chckIndx(i_16531341, 0, (a_14395138).length-1);
            if ((i_14395173[i_14395173_Idx] == item_14395139)) {
            break BeforeRet;
            }
            
            result_14395140 = addInt(result_14395140, 1);
            i_16531341 = addInt(i_16531341, 1);
          }
      } while(false);
    } while(false);
    result_14395140 = -1;
  } while (false);

  return result_14395140;

}
function contains_14395120(a_14395124, item_14395125) {
  var result_14395126 = false;

  BeforeRet: do {
    result_14395126 = (0 <= find_14395134(a_14395124, item_14395125));
    break BeforeRet;
  } while (false);

  return result_14395126;

}
function toPint_14395366(x_14395369) {
  var result_14395370 = 0;

  BeforeRet: do {
    result_14395370 = ((x_14395369)|0);
    break BeforeRet;
  } while (false);

  return result_14395370;

}
function toPint_12775100(x_12775102) {
  var result_12775103 = 0;

  BeforeRet: do {
    result_12775103 = ((Math.floor(x_12775102))|0);
    break BeforeRet;
  } while (false);

  return result_12775103;

}
function setButtonState_12685015(self_12685017, button_12685018, down_12685019) {
    var Tmp1;

  BeforeRet: do {
    if ((15 < button_12685018)) {
    break BeforeRet;
    }
    
    if (down_12685019) {
    Tmp1 = 1;
    }
    else {
    Tmp1 = -2;
    }
    
    self_12685017.buttons[chckIndx(button_12685018, 0, (self_12685017.buttons).length-1)] = Tmp1;
  } while (false);

  
}
function HEX21HEX26_2336070(h_2336072, val_2336073) {
  var result_2336074 = 0;

    var h_2336075 = (h_2336072 >>> 0);
    var val_2336076 = (val_2336073 >>> 0);
    var res_2336077 = ((h_2336075 + val_2336076) >>> 0);
    res_2336077 = ((res_2336077 + (res_2336077 << 10)) >>> 0);
    res_2336077 = (res_2336077 ^ ((res_2336077 >>> 0) >>> 6));
    result_2336074 = (res_2336077|0);

  return result_2336074;

}
function HEX21HEX24_2336105(h_2336107) {
  var result_2336108 = 0;

    var h_2336109 = (h_2336107 >>> 0);
    var res_2336117 = ((h_2336109 + (h_2336109 << 3)) >>> 0);
    res_2336117 = (res_2336117 ^ ((res_2336117 >>> 0) >>> 11));
    res_2336117 = ((res_2336117 + (res_2336117 << 15)) >>> 0);
    result_2336108 = (res_2336117|0);

  return result_2336108;

}
function hash_12591109(a_12591111) {
  var result_12591112 = 0;

    var h_12591113 = 0;
    h_12591113 = HEX21HEX26_2336070(h_12591113, ((((a_12591111)|0))|0));
    result_12591112 = HEX21HEX24_2336105(h_12591113);

  return result_12591112;

}
function rawGet_14410340(t_14410344, key_14410345, hc_14410346, hc_14410346_Idx) {
            var Tmp3;

  var result_14410347 = 0;

  BeforeRet: do {
    hc_14410346[hc_14410346_Idx] = hash_12591109(key_14410345);
    if ((hc_14410346[hc_14410346_Idx] == 0)) {
    hc_14410346[hc_14410346_Idx] = 314159265;
    }
    
    if (((t_14410344.data).length == 0)) {
    result_14410347 = -1;
    break BeforeRet;
    }
    
    var h_14420140 = (hc_14410346[hc_14410346_Idx] & ((t_14410344.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_2412218(t_14410344.data[chckIndx(h_14420140, 0, (t_14410344.data).length-1)].Field0)) break L2;
            if (!(t_14410344.data[chckIndx(h_14420140, 0, (t_14410344.data).length-1)].Field0 == hc_14410346[hc_14410346_Idx])) Tmp3 = false; else {              Tmp3 = (t_14410344.data[chckIndx(h_14420140, 0, (t_14410344.data).length-1)].Field1 == key_14410345);            }          if (Tmp3) {
          result_14410347 = h_14420140;
          break BeforeRet;
          }
          
          h_14420140 = nextTry_2415014(h_14420140, ((t_14410344.data).length-1));
        }
    } while(false);
    result_14410347 = subInt(-1, h_14420140);
  } while (false);

  return result_14410347;

}
function hasKey_14410324(t_14410329, key_14410330) {
  var result_14410331 = false;

    var hc_14410332 = [0];
    result_14410331 = (0 <= rawGet_14410340(t_14410329, key_14410330, hc_14410332, 0));

  return result_14410331;

}
function toNicoKeycode_14357230(x_14357232) {
      var Tmp1;

  var result_14357233 = 0;

  BeforeRet: do {
    var x_14357234 = x_14357232;
      if (!(65 <= x_14357234)) Tmp1 = false; else {        Tmp1 = (x_14357234 <= 90);      }    if (Tmp1) {
    x_14357234 = addInt(x_14357234, 32);
    }
    
    result_14357233 = chckRange(x_14357234, 0, 1073742110);
    break BeforeRet;
  } while (false);

  return result_14357233;

}
function HEX5BHEX5D_14420821(t_14420827, key_14420828) {
  var result_14420830 = null;
  var result_14420830_Idx = 0;

    var hcHEX60gensym22_14420831 = [0];
    var indexHEX60gensym22_14420840 = rawGet_14410340(t_14420827, key_14420828, hcHEX60gensym22_14420831, 0);
    if ((0 <= indexHEX60gensym22_14420840)) {
    result_14420830 = t_14420827.data[chckIndx(indexHEX60gensym22_14420840, 0, (t_14420827.data).length-1)]; result_14420830_Idx = "Field2";
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(reprEnum(key_14420828, NTI11746506) || []), parent: null, m_type: NTI1214645, name: null, trace: [], up: null}, "KeyError");
    }
    

  return [result_14420830, result_14420830_Idx];

}
function mustRehash_14455601(t_14455604) {
  var result_14455605 = false;

    if (!((t_14455604.counter < (t_14455604.data).length))) {
    failedAssertImpl_1325480(makeNimstrLit("hashcommon.nim(34, 9) `\x0At.counter < t.dataLen` "));
    }
    
    result_14455605 = ((mulInt((t_14455604.data).length, 2) < mulInt(t_14455604.counter, 3)) || (subInt((t_14455604.data).length, t_14455604.counter) < 4));

  return result_14455605;

}
function rawInsert_14481122(t_14481128, data_14481131, data_14481131_Idx, key_14481132, val_14481134, hc_14481135, h_14481136) {
    data_14481131[data_14481131_Idx][chckIndx(h_14481136, 0, (data_14481131[data_14481131_Idx]).length-1)].Field1 = key_14481132;
    data_14481131[data_14481131_Idx][chckIndx(h_14481136, 0, (data_14481131[data_14481131_Idx]).length-1)].Field2 = val_14481134;
    data_14481131[data_14481131_Idx][chckIndx(h_14481136, 0, (data_14481131[data_14481131_Idx]).length-1)].Field0 = hc_14481135;

  
}
function enlarge_14480161(t_14480167) {
    var n_14480175 = [];
    n_14480175 = new Array(chckRange(mulInt((t_14480167.data).length, 2), 0, 2147483647)); for (var i=0;i<chckRange(mulInt((t_14480167.data).length, 2), 0, 2147483647);++i) {n_14480175[i]={Field0: 0, Field1: 0, Field2: 0};}    var Tmp1 = t_14480167.data; t_14480167.data = n_14480175; n_14480175 = Tmp1;    L2: do {
      var i_14480335 = 0;
      var colontmp__16531400 = 0;
      colontmp__16531400 = ((n_14480175).length-1);
      var res_16531401 = 0;
      L3: do {
          L4: while (true) {
          if (!(res_16531401 <= colontmp__16531400)) break L4;
            i_14480335 = res_16531401;
            var eh_14480491 = n_14480175[chckIndx(i_14480335, 0, (n_14480175).length-1)].Field0;
            if (isFilled_2412218(eh_14480491)) {
            var j_14480498 = (eh_14480491 & ((t_14480167.data).length-1));
            L5: do {
                L6: while (true) {
                if (!isFilled_2412218(t_14480167.data[chckIndx(j_14480498, 0, (t_14480167.data).length-1)].Field0)) break L6;
                  j_14480498 = nextTry_2415014(j_14480498, ((t_14480167.data).length-1));
                }
            } while(false);
            rawInsert_14481122(t_14480167, t_14480167, "data", n_14480175[chckIndx(i_14480335, 0, (n_14480175).length-1)].Field1, n_14480175[chckIndx(i_14480335, 0, (n_14480175).length-1)].Field2, eh_14480491, j_14480498);
            }
            
            res_16531401 = addInt(res_16531401, 1);
          }
      } while(false);
    } while(false);

  
}
function rawGetKnownHC_14481644(t_14481648, key_14481649, hc_14481650) {
  var result_14481651 = 0;

  BeforeRet: do {
    if (((t_14481648.data).length == 0)) {
    result_14481651 = -1;
    break BeforeRet;
    }
    
    var h_14485140 = (hc_14481650 & ((t_14481648.data).length-1));
    L1: do {
        L2: while (true) {
        if (!isFilled_2412218(t_14481648.data[chckIndx(h_14485140, 0, (t_14481648.data).length-1)].Field0)) break L2;
          if (((t_14481648.data[chckIndx(h_14485140, 0, (t_14481648.data).length-1)].Field0 == hc_14481650) && (t_14481648.data[chckIndx(h_14485140, 0, (t_14481648.data).length-1)].Field1 == key_14481649))) {
          result_14481651 = h_14485140;
          break BeforeRet;
          }
          
          h_14485140 = nextTry_2415014(h_14485140, ((t_14481648.data).length-1));
        }
    } while(false);
    result_14481651 = subInt(-1, h_14485140);
  } while (false);

  return result_14481651;

}
function HEX5BHEX5DHEX3D_14425144(t_14425150, key_14425151, val_14425153) {
    if (((t_14425150.data).length == 0)) {
    var correctSizeHEX60gensym15_14435001 = slotsNeeded_2415048(32);
    t_14425150.counter = 0;
    t_14425150.data = new Array(chckRange(correctSizeHEX60gensym15_14435001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym15_14435001, 0, 2147483647);++i) {t_14425150.data[i]={Field0: 0, Field1: 0, Field2: 0};}    }
    
    var hc_14440601 = [0];
    var index_14440610 = rawGet_14410340(t_14425150, key_14425151, hc_14440601, 0);
    if ((0 <= index_14440610)) {
    t_14425150.data[chckIndx(index_14440610, 0, (t_14425150.data).length-1)].Field2 = val_14425153;
    }
    else {
      if (((t_14425150.data).length == 0)) {
      var correctSizeHEX60gensym18_14450001 = slotsNeeded_2415048(32);
      t_14425150.counter = 0;
      t_14425150.data = new Array(chckRange(correctSizeHEX60gensym18_14450001, 0, 2147483647)); for (var i=0;i<chckRange(correctSizeHEX60gensym18_14450001, 0, 2147483647);++i) {t_14425150.data[i]={Field0: 0, Field1: 0, Field2: 0};}      }
      
      if (mustRehash_14455601(t_14425150)) {
      enlarge_14480161(t_14425150);
      index_14440610 = rawGetKnownHC_14481644(t_14425150, key_14425151, hc_14440601[0]);
      }
      
      index_14440610 = subInt(-1, index_14440610);
      rawInsert_14481122(t_14425150, t_14425150, "data", key_14425151, val_14425153, hc_14440601[0], index_14440610);
      t_14425150.counter = addInt(t_14425150.counter, 1);
    }
    

  
}
function createWindow_14370310(title_14370312, w_14370313, h_14370314, scale_14370315, fullscreen_14370316) {
    function HEX3Aanonymous_14370317(e_14370320) {
        resize_14360398(window.innerWidth, window.innerHeight);

      
    }
    function HEX3Aanonymous_14370334(e_14370337) {
        var e_14370338 = e_14370337;
        mouseDetected_12775338[0] = true;
        var scale_14370339 = (canvas_14357016[0].clientWidth / screenWidth_12775220[0]);
        mouseX_12775339[0] = (((e_14370338.offsetX / scale_14370339))|0);
        mouseY_12775340[0] = (((e_14370338.offsetY / scale_14370339))|0);
        mouseRawX_12775341[0] = e_14370338.offsetX;
        mouseRawY_12775342[0] = e_14370338.offsetY;

      
    }
    function HEX3Aanonymous_14370383(e_14370386) {
        var e_14370387 = e_14370386;
        mouseButtonsDown_12775352[0][chckIndx(e_14370387.button, 0, (mouseButtonsDown_12775352[0]).length-1)] = true;
        e_14370387.preventDefault();

      
    }
    function HEX3Aanonymous_14370401(e_14370404) {
        var e_14370405 = e_14370404;
        mouseWheelState_12775357[0] = sgn_14370406(e_14370405.deltaY);
        e_14370405.preventDefault();

      
    }
    function HEX3Aanonymous_14370460(e_14370463) {
        var e_14370464 = e_14370463;
        mouseButtonsDown_12775352[0][chckIndx(e_14370464.button, 0, (mouseButtonsDown_12775352[0]).length-1)] = false;
        e_14370464.preventDefault();

      
    }
    function HEX3Aanonymous_14370478(e_14370481) {
        e_14370481.preventDefault();

      
    }
    function HEX3Aanonymous_14370495(e_14370498) {
        if ((fullscreen_14370316 && !(requestedFullscreen_14370291[0]))) {
        canvas_14357016[0].requestFullscreen();
        }
        
        var e_14370499 = e_14370498;
        e_14370499.preventDefault();
        var scale_14370500 = (canvas_14357016[0].clientWidth / screenWidth_12775220[0]);
        if (touchMouseEmulation_12775143[0]) {
        mouseButtonsDown_12775352[0][chckIndx(0, 0, (mouseButtonsDown_12775352[0]).length-1)] = true;
        mouseX_12775339[0] = (((subInt(e_14370499.touches[chckIndx(0, 0, (e_14370499.touches).length-1)].pageX, e_14370499.target.offsetLeft) / scale_14370500))|0);
        mouseY_12775340[0] = (((subInt(e_14370499.touches[chckIndx(0, 0, (e_14370499.touches).length-1)].pageY, e_14370499.target.offsetTop) / scale_14370500))|0);
        }
        
        L1: do {
          var t_14380214 = null;
          var t_14380214_Idx = 0;
          var i_16531298 = 0;
          var L_16531299 = (e_14370499.changedTouches).length;
          L2: do {
              L3: while (true) {
              if (!(i_16531298 < L_16531299)) break L3;
                t_14380214 = e_14370499.changedTouches; t_14380214_Idx = chckIndx(i_16531298, 0, (e_14370499.changedTouches).length-1);
                var sx_14380215 = subInt(t_14380214[t_14380214_Idx].pageX, e_14370499.target.offsetLeft);
                var sy_14380216 = subInt(t_14380214[t_14380214_Idx].pageY, e_14370499.target.offsetTop);
                touches_12775142[0].push({state: 0, id: t_14380214[t_14380214_Idx].identifier, sx: sx_14380215, sy: sy_14380216, x: (((sx_14380215 / scale_14370500))|0), y: (((sy_14380216 / scale_14370500))|0), xrel: 0.0, yrel: 0.0, xrelraw: 0.0, yrelraw: 0.0});;
                i_16531298 = addInt(i_16531298, 1);
                if (!(((e_14370499.changedTouches).length == L_16531299))) {
                failedAssertImpl_1325480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);

      
    }
    function HEX3Aanonymous_14380329(e_14380332) {
        var e_14380333 = e_14380332;
        e_14380333.preventDefault();
        var scale_14380334 = (canvas_14357016[0].clientWidth / screenWidth_12775220[0]);
        if (touchMouseEmulation_12775143[0]) {
        mouseX_12775339[0] = (((subInt(e_14380333.touches[chckIndx(0, 0, (e_14380333.touches).length-1)].pageX, e_14380333.target.offsetLeft) / scale_14380334))|0);
        mouseY_12775340[0] = (((subInt(e_14380333.touches[chckIndx(0, 0, (e_14380333.touches).length-1)].pageY, e_14380333.target.offsetTop) / scale_14380334))|0);
        }
        
        L1: do {
          var t_14380342 = null;
          var t_14380342_Idx = 0;
          var i_16531336 = 0;
          var L_16531337 = (e_14380333.changedTouches).length;
          L2: do {
              L3: while (true) {
              if (!(i_16531336 < L_16531337)) break L3;
                t_14380342 = e_14380333.changedTouches; t_14380342_Idx = chckIndx(i_16531336, 0, (e_14380333.changedTouches).length-1);
                L4: do {
                  var et_14390215 = null;
                  var i_16531333 = 0;
                  var L_16531334 = (touches_12775142[0]).length;
                  L5: do {
                      L6: while (true) {
                      if (!(i_16531333 < L_16531334)) break L6;
                        et_14390215 = touches_12775142[0][chckIndx(i_16531333, 0, (touches_12775142[0]).length-1)];
                        if ((et_14390215.id == t_14380342[t_14380342_Idx].identifier)) {
                        if (!(contains_14395120([0, 3, 4], et_14390215.state))) {
                        et_14390215.state = 2;
                        }
                        
                        var sx_14395230 = subInt(t_14380342[t_14380342_Idx].pageX, e_14380333.target.offsetLeft);
                        var sy_14395231 = subInt(t_14380342[t_14380342_Idx].pageY, e_14380333.target.offsetTop);
                        et_14390215.xrelraw = (sx_14395230 - et_14390215.sx);
                        et_14390215.yrelraw = (sy_14395231 - et_14390215.sy);
                        et_14390215.xrel = ((sx_14395230 - et_14390215.sx) / scale_14380334);
                        et_14390215.yrel = ((sy_14395231 - et_14390215.sy) / scale_14380334);
                        et_14390215.sx = sx_14395230;
                        et_14390215.sy = sy_14395231;
                        et_14390215.x = (((sx_14395230 / scale_14380334))|0);
                        et_14390215.y = (((sy_14395231 / scale_14380334))|0);
                        break L4;
                        }
                        
                        i_16531333 = addInt(i_16531333, 1);
                        if (!(((touches_12775142[0]).length == L_16531334))) {
                        failedAssertImpl_1325480(makeNimstrLit("iterators.nim(213, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                i_16531336 = addInt(i_16531336, 1);
                if (!(((e_14380333.changedTouches).length == L_16531337))) {
                failedAssertImpl_1325480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);

      
    }
    function HEX3Aanonymous_14395299(e_14395302) {
        var e_14395303 = e_14395302;
        var scale_14395304 = (canvas_14357016[0].clientWidth / screenWidth_12775220[0]);
        e_14395303.preventDefault();
        if (touchMouseEmulation_12775143[0]) {
        mouseButtonsDown_12775352[0][chckIndx(0, 0, (mouseButtonsDown_12775352[0]).length-1)] = false;
        }
        
        L1: do {
          var t_14395312 = null;
          var t_14395312_Idx = 0;
          var i_16531354 = 0;
          var L_16531355 = (e_14395303.changedTouches).length;
          L2: do {
              L3: while (true) {
              if (!(i_16531354 < L_16531355)) break L3;
                t_14395312 = e_14395303.changedTouches; t_14395312_Idx = chckIndx(i_16531354, 0, (e_14395303.changedTouches).length-1);
                L4: do {
                  var et_14395323 = null;
                  var i_16531351 = 0;
                  var L_16531352 = (touches_12775142[0]).length;
                  L5: do {
                      L6: while (true) {
                      if (!(i_16531351 < L_16531352)) break L6;
                        et_14395323 = touches_12775142[0][chckIndx(i_16531351, 0, (touches_12775142[0]).length-1)];
                        if ((et_14395323.id == t_14395312[t_14395312_Idx].identifier)) {
                        et_14395323.state = 3;
                        var sx_14395324 = subInt(t_14395312[t_14395312_Idx].pageX, e_14395303.target.offsetLeft);
                        var sy_14395325 = subInt(t_14395312[t_14395312_Idx].pageY, e_14395303.target.offsetTop);
                        et_14395323.sx = sx_14395324;
                        et_14395323.sy = sy_14395325;
                        et_14395323.xrelraw = (sx_14395324 - et_14395323.sx);
                        et_14395323.yrelraw = (sy_14395325 - et_14395323.sy);
                        et_14395323.xrel = ((sx_14395324 - et_14395323.sx) / scale_14395304);
                        et_14395323.yrel = ((sy_14395325 - et_14395323.sy) / scale_14395304);
                        et_14395323.x = (((sx_14395324 / scale_14395304))|0);
                        et_14395323.y = (((sy_14395325 / scale_14395304))|0);
                        break L4;
                        }
                        
                        i_16531351 = addInt(i_16531351, 1);
                        if (!(((touches_12775142[0]).length == L_16531352))) {
                        failedAssertImpl_1325480(makeNimstrLit("iterators.nim(213, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                i_16531354 = addInt(i_16531354, 1);
                if (!(((e_14395303.changedTouches).length == L_16531355))) {
                failedAssertImpl_1325480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);

      
    }
    function HEX3Aanonymous_14395339(e_14395342) {
        var e_14395343 = e_14395342;
        e_14395343.preventDefault();
        var scale_14395344 = (canvas_14357016[0].clientWidth / screenWidth_12775220[0]);
        if (touchMouseEmulation_12775143[0]) {
        mouseButtonsDown_12775352[0][chckIndx(0, 0, (mouseButtonsDown_12775352[0]).length-1)] = false;
        }
        
        L1: do {
          var t_14395352 = null;
          var t_14395352_Idx = 0;
          var i_16531372 = 0;
          var L_16531373 = (e_14395343.changedTouches).length;
          L2: do {
              L3: while (true) {
              if (!(i_16531372 < L_16531373)) break L3;
                t_14395352 = e_14395343.changedTouches; t_14395352_Idx = chckIndx(i_16531372, 0, (e_14395343.changedTouches).length-1);
                L4: do {
                  var et_14395363 = null;
                  var i_16531369 = 0;
                  var L_16531370 = (touches_12775142[0]).length;
                  L5: do {
                      L6: while (true) {
                      if (!(i_16531369 < L_16531370)) break L6;
                        et_14395363 = touches_12775142[0][chckIndx(i_16531369, 0, (touches_12775142[0]).length-1)];
                        if ((et_14395363.id == t_14395352[t_14395352_Idx].identifier)) {
                        et_14395363.state = 4;
                        var sx_14395364 = subInt(t_14395352[t_14395352_Idx].pageX, e_14395343.target.offsetLeft);
                        var sy_14395365 = subInt(t_14395352[t_14395352_Idx].pageY, e_14395343.target.offsetTop);
                        et_14395363.xrelraw = subInt(toPint_14395366(sx_14395364), toPint_12775100(et_14395363.sx));
                        et_14395363.yrelraw = subInt(toPint_14395366(sy_14395365), toPint_12775100(et_14395363.sy));
                        et_14395363.xrel = (subInt(toPint_14395366(sx_14395364), toPint_12775100(et_14395363.sx)) / scale_14395344);
                        et_14395363.yrel = (subInt(toPint_14395366(sy_14395365), toPint_12775100(et_14395363.sy)) / scale_14395344);
                        et_14395363.x = (((sx_14395364 / scale_14395344))|0);
                        et_14395363.y = (((sy_14395365 / scale_14395344))|0);
                        break L4;
                        }
                        
                        i_16531369 = addInt(i_16531369, 1);
                        if (!(((touches_12775142[0]).length == L_16531370))) {
                        failedAssertImpl_1325480(makeNimstrLit("iterators.nim(213, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                i_16531372 = addInt(i_16531372, 1);
                if (!(((e_14395343.changedTouches).length == L_16531373))) {
                failedAssertImpl_1325480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          } while(false);
        } while(false);

      
    }
    function HEX3Aanonymous_14400009(event_14400012) {
          var Tmp7;
            var Tmp8;

        var event_14400013 = event_14400012;
        L1: do {
          var btn_14400088 = 0;
          var keys_14400089 = [];
          var i_16531387 = 0;
          if ((i_16531387 <= 15)) {
          L2: do {
              L3: while (true) {
              if (!true) break L3;
                btn_14400088 = i_16531387;
                keys_14400089 = keymap_12775232[0][chckIndx(i_16531387, 0, (keymap_12775232[0]).length-1)];
                L4: do {
                  var key_14410214 = null;
                  var key_14410214_Idx = 0;
                  var i_16531380 = 0;
                  var L_16531381 = (keys_14400089).length;
                  L5: do {
                      L6: while (true) {
                      if (!(i_16531380 < L_16531381)) break L6;
                        key_14410214 = keys_14400089; key_14410214_Idx = chckIndx(i_16531380, 0, (keys_14400089).length-1);
                        if ((event_14400013.keyCode == key_14410214[key_14410214_Idx])) {
                        if ((controllers_12775242[0][chckIndx(0, 0, (controllers_12775242[0]).length-1)].buttons[chckIndx(btn_14400088, 0, (controllers_12775242[0][chckIndx(0, 0, (controllers_12775242[0]).length-1)].buttons).length-1)] <= 0)) {
                        setButtonState_12685015(controllers_12775242[0][chckIndx(0, 0, (controllers_12775242[0]).length-1)], btn_14400088, true);
                        }
                        
                        event_14400013.preventDefault();
                        }
                        
                        i_16531380 = addInt(i_16531380, 1);
                        if (!(((keys_14400089).length == L_16531381))) {
                        failedAssertImpl_1325480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                if ((15 <= i_16531387)) {
                break L2;
                }
                
                i_16531387 = addInt(i_16531387, 1);
              }
          } while(false);
          }
          
        } while(false);
          if (!(hasKey_14410324(keysDown_12705629[0], toNicoKeycode_14357230(event_14400013.keyCode)))) Tmp7 = true; else {            Tmp7 = ((Tmp8 = HEX5BHEX5D_14420821(keysDown_12705629[0], toNicoKeycode_14357230(event_14400013.keyCode)), Tmp8)[0][Tmp8[1]] == 0);          }        if (Tmp7) {
        HEX5BHEX5DHEX3D_14425144(keysDown_12705629[0], toNicoKeycode_14357230(event_14400013.keyCode), 1);
        }
        

      
    }
    function HEX3Aanonymous_14485723(event_14485726) {
        var event_14485727 = event_14485726;
        L1: do {
          var btn_14485738 = 0;
          var keys_14485739 = [];
          var i_16531412 = 0;
          if ((i_16531412 <= 15)) {
          L2: do {
              L3: while (true) {
              if (!true) break L3;
                btn_14485738 = i_16531412;
                keys_14485739 = keymap_12775232[0][chckIndx(i_16531412, 0, (keymap_12775232[0]).length-1)];
                L4: do {
                  var key_14485747 = null;
                  var key_14485747_Idx = 0;
                  var i_16531409 = 0;
                  var L_16531410 = (keys_14485739).length;
                  L5: do {
                      L6: while (true) {
                      if (!(i_16531409 < L_16531410)) break L6;
                        key_14485747 = keys_14485739; key_14485747_Idx = chckIndx(i_16531409, 0, (keys_14485739).length-1);
                        if ((event_14485727.keyCode == key_14485747[key_14485747_Idx])) {
                        setButtonState_12685015(controllers_12775242[0][chckIndx(0, 0, (controllers_12775242[0]).length-1)], btn_14485738, false);
                        event_14485727.preventDefault();
                        }
                        
                        i_16531409 = addInt(i_16531409, 1);
                        if (!(((keys_14485739).length == L_16531410))) {
                        failedAssertImpl_1325480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  } while(false);
                } while(false);
                if ((15 <= i_16531412)) {
                break L2;
                }
                
                i_16531412 = addInt(i_16531412, 1);
              }
          } while(false);
          }
          
        } while(false);
        HEX5BHEX5DHEX3D_14425144(keysDown_12705629[0], toNicoKeycode_14357230(event_14485727.keyCode), 0);

      
    }

    targetScreenWidth_12775212[0] = w_14370313;
    targetScreenHeight_12775215[0] = h_14370314;
    document.title = toJSStr(title_14370312);
    if (fixedScreenSize_12775216[0]) {
    resizeCanvas_14360402(targetScreenWidth_12775212[0], targetScreenHeight_12775215[0], scale_14370315);
    }
    else {
    resize_14360398(window.innerWidth, window.innerHeight);
    }
    
    window.addEventListener("resize", HEX3Aanonymous_14370317, false);
    canvas_14357016[0].onmousemove = HEX3Aanonymous_14370334;
    canvas_14357016[0].onmousedown = HEX3Aanonymous_14370383;
    canvas_14357016[0].addEventListener("wheel", HEX3Aanonymous_14370401, false);
    canvas_14357016[0].onmouseup = HEX3Aanonymous_14370460;
    canvas_14357016[0].addEventListener("contextmenu", HEX3Aanonymous_14370478, false);
    canvas_14357016[0].addEventListener("touchstart", HEX3Aanonymous_14370495, false);
    canvas_14357016[0].addEventListener("touchmove", HEX3Aanonymous_14380329, false);
    canvas_14357016[0].addEventListener("touchend", HEX3Aanonymous_14395299, false);
    canvas_14357016[0].addEventListener("touchcancel", HEX3Aanonymous_14395339, false);
    var holder_14395409 = document.getElementById("nicogame");
    if (!((holder_14395409 == null))) {
    holder_14395409.appendChild(canvas_14357016[0]);
    }
    
    frame_12775294[0] = 0;
    window.onkeydown = HEX3Aanonymous_14400009;
    window.onkeyup = HEX3Aanonymous_14485723;

  
}
function createWindow_16465171(title_16465173, w_16465174, h_16465175, scale_16465176, fullscreen_16465177) {
    createWindow_14370310(title_16465173, w_16465174, h_16465175, scale_16465176, fullscreen_16465177);
    clip_15021416();

  
}
function present_14360407() {
    L1: do {
      var i_14370245 = 0;
      var v_14370246 = null;
      var v_14370246_Idx = 0;
      var i_16531457 = 0;
      var L_16531458 = (swCanvas_12775196[0].data).length;
      L2: do {
          L3: while (true) {
          if (!(i_16531457 < L_16531458)) break L3;
            i_14370245 = i_16531457;
            v_14370246 = swCanvas_12775196[0].data; v_14370246_Idx = chckIndx(i_16531457, 0, (swCanvas_12775196[0].data).length-1);
            swCanvas32_14357015[0].data[chckIndx(mulInt(i_14370245, 4), 0, (swCanvas32_14357015[0].data).length-1)] = currentPalette_12775140[0].Field1[chckIndx(paletteMapDisplay_12775304[0][chckIndx(v_14370246[v_14370246_Idx], 0, (paletteMapDisplay_12775304[0]).length-1)], 0, (currentPalette_12775140[0].Field1).length-1)]["Field0"];
            swCanvas32_14357015[0].data[chckIndx(addInt(mulInt(i_14370245, 4), 1), 0, (swCanvas32_14357015[0].data).length-1)] = currentPalette_12775140[0].Field1[chckIndx(paletteMapDisplay_12775304[0][chckIndx(v_14370246[v_14370246_Idx], 0, (paletteMapDisplay_12775304[0]).length-1)], 0, (currentPalette_12775140[0].Field1).length-1)]["Field1"];
            swCanvas32_14357015[0].data[chckIndx(addInt(mulInt(i_14370245, 4), 2), 0, (swCanvas32_14357015[0].data).length-1)] = currentPalette_12775140[0].Field1[chckIndx(paletteMapDisplay_12775304[0][chckIndx(v_14370246[v_14370246_Idx], 0, (paletteMapDisplay_12775304[0]).length-1)], 0, (currentPalette_12775140[0].Field1).length-1)]["Field2"];
            swCanvas32_14357015[0].data[chckIndx(addInt(mulInt(i_14370245, 4), 3), 0, (swCanvas32_14357015[0].data).length-1)] = 255;
            i_16531457 = addInt(i_16531457, 1);
            if (!(((swCanvas_12775196[0].data).length == L_16531458))) {
            failedAssertImpl_1325480(makeNimstrLit("iterators.nim(147, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    ctx_14357014[0].putImageData(swCanvas32_14357015[0], 0.0, 0.0);

  
}
function update_12595262(self_12595264) {
              var Tmp7;
              var Tmp8;

    L1: do {
      var i_12595436 = 0;
      var res_16531464 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_16531464 <= 15)) break L3;
            i_12595436 = chckRange(res_16531464, 0, 15);
            if ((self_12595264.kind == 1)) {
            if ((i_12595436 == 9)) {
            if ((self_12595264.deadzone < self_12595264.axes[chckIndx(4, 0, (self_12595264.axes).length-1)].Field0)) {
            self_12595264.buttons[chckIndx(i_12595436, 0, (self_12595264.buttons).length-1)] = addInt(self_12595264.buttons[chckIndx(i_12595436, 0, (self_12595264.buttons).length-1)], 1);
            }
            else {
              self_12595264.buttons[chckIndx(i_12595436, 0, (self_12595264.buttons).length-1)] = 0;
            }
            
            }
            else {
            if ((i_12595436 == 12)) {
            if ((self_12595264.deadzone < self_12595264.axes[chckIndx(5, 0, (self_12595264.axes).length-1)].Field0)) {
            self_12595264.buttons[chckIndx(i_12595436, 0, (self_12595264.buttons).length-1)] = addInt(self_12595264.buttons[chckIndx(i_12595436, 0, (self_12595264.buttons).length-1)], 1);
            }
            else {
              self_12595264.buttons[chckIndx(i_12595436, 0, (self_12595264.buttons).length-1)] = 0;
            }
            
            }
            }
            }
            
            if ((self_12595264.buttons[chckIndx(i_12595436, 0, (self_12595264.buttons).length-1)] == -1)) {
            self_12595264.buttons[chckIndx(i_12595436, 0, (self_12595264.buttons).length-1)] = 0;
            }
            else {
            if ((self_12595264.buttons[chckIndx(i_12595436, 0, (self_12595264.buttons).length-1)] == -2)) {
            self_12595264.buttons[chckIndx(i_12595436, 0, (self_12595264.buttons).length-1)] = -1;
            }
            }
            if ((1 <= self_12595264.buttons[chckIndx(i_12595436, 0, (self_12595264.buttons).length-1)])) {
            self_12595264.buttons[chckIndx(i_12595436, 0, (self_12595264.buttons).length-1)] = addInt(self_12595264.buttons[chckIndx(i_12595436, 0, (self_12595264.buttons).length-1)], 1);
            }
            
            res_16531464 = addInt(res_16531464, 1);
          }
      } while(false);
    } while(false);
    L4: do {
      var i_12610236 = 0;
      var res_16531472 = 0;
      L5: do {
          L6: while (true) {
          if (!(res_16531472 <= 5)) break L6;
            i_12610236 = chckRange(res_16531472, 0, 5);
              if (!(self_12595264.axes[chckIndx(i_12610236, 0, (self_12595264.axes).length-1)].Field1 < -(self_12595264.deadzone))) Tmp7 = false; else {                Tmp7 = (self_12595264.axes[chckIndx(i_12610236, 0, (self_12595264.axes).length-1)].Field0 < -(self_12595264.deadzone));              }            if (Tmp7) {
            self_12595264.axes[chckIndx(i_12610236, 0, (self_12595264.axes).length-1)].Field2 = addInt(self_12595264.axes[chckIndx(i_12610236, 0, (self_12595264.axes).length-1)].Field2, 1);
            }
            else {
              if (!(self_12595264.deadzone < self_12595264.axes[chckIndx(i_12610236, 0, (self_12595264.axes).length-1)].Field1)) Tmp8 = false; else {                Tmp8 = (self_12595264.deadzone < self_12595264.axes[chckIndx(i_12610236, 0, (self_12595264.axes).length-1)].Field0);              }            if (Tmp8) {
            self_12595264.axes[chckIndx(i_12610236, 0, (self_12595264.axes).length-1)].Field2 = addInt(self_12595264.axes[chckIndx(i_12610236, 0, (self_12595264.axes).length-1)].Field2, 1);
            }
            else {
              self_12595264.axes[chckIndx(i_12610236, 0, (self_12595264.axes).length-1)].Field2 = 0;
            }
            }
            res_16531472 = addInt(res_16531472, 1);
          }
      } while(false);
    } while(false);

  
}
function len_14590139(t_14590144) {
  var result_14590145 = 0;

    result_14590145 = t_14590144.counter;

  return result_14590145;

}
function resetChannel_14495160(self_14495163) {
    var Tmp2;

    if (!((self_14495163.source == null))) {
    self_14495163.source.disconnect();
++excHandler;
    Tmp2 = framePtr;
    try {
    self_14495163.source.stop();
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
    framePtr = Tmp2;
    lastJSError = prevJSError;
    } finally {
    framePtr = Tmp2;
    }
    self_14495163.source = null;
    }
    
    self_14495163.kind = 0;

  
}
function note_12755141(n_12755143) {
  var result_12755144 = 0.0;

  BeforeRet: do {
    result_12755144 = (Math.pow(2.0000000000000000e+000, ((n_12755143 - 6.9000000000000000e+001) / 1.2000000000000000e+001)) * 4.4000000000000000e+002);
    break BeforeRet;
  } while (false);

  return result_12755144;

}
function initNoiseBuffer_14635156(samples_14635158, freq_14635159) {
            var Tmp4;

  var result_14635160 = null;

  BeforeRet: do {
    var b_14635161 = audioContext_14357019[0].createBuffer(1, samples_14635158, ((sampleRate_12775147[0])|0));
    var data_14635162 = b_14635161.getChannelData(0);
    var nextClick_14635164 = 0;
    var outputValue_14635165 = 0.0;
    var lfsr_14635168 = 65261;
    L1: do {
      var i_14635176 = 0;
      var i_16531505 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16531505 < samples_14635158)) break L3;
            i_14635176 = i_16531505;
            var lsb_14635177 = ((lfsr_14635168 & 1) >>> 0);
            lfsr_14635168 = (lfsr_14635168 >> 1);
            if ((lsb_14635177 == 1)) {
            lfsr_14635168 = (lfsr_14635168 ^ 46080);
            }
            
            if ((lsb_14635177 == 1)) {
            Tmp4 = 1.0000000000000000e+000;
            }
            else {
            Tmp4 = -1.0000000000000000e+000;
            }
            
            outputValue_14635165 = Tmp4;
            nextClick_14635164 = subInt(nextClick_14635164, 1);
            if ((nextClick_14635164 <= 0)) {
            nextClick_14635164 = ((((1.0000000000000000e+000 / freq_14635159) * sampleRate_12775147[0]))|0);
            }
            
            data_14635162[chckIndx(i_14635176, 0, (data_14635162).length-1)] = outputValue_14635165;
            i_16531505 = addInt(i_16531505, 1);
          }
      } while(false);
    } while(false);
    result_14635160 = b_14635161;
    break BeforeRet;
  } while (false);

  return result_14635160;

}
function synthSetOsc_14357224(self_14357227, newShape_14357228, trigger_14357229) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  BeforeRet: do {
    if ((audioContext_14357019[0] == null)) {
    break BeforeRet;
    }
    
      if (!(newShape_14357228 == self_14357227.shape)) Tmp1 = false; else {        Tmp1 = !((self_14357227.source == null));      }    if (Tmp1) {
    break BeforeRet;
    }
    
    self_14357227.shape = newShape_14357228;
    if (!((self_14357227.source == null))) {
    self_14357227.source.disconnect();
    self_14357227.source.stop();
    self_14357227.source = null;
    }
    
      if ((self_14357227.shape == 7)) Tmp2 = true; else {        Tmp2 = (self_14357227.shape == 8);      }    if (Tmp2) {
    var osc_14690019 = audioContext_14357019[0].createBufferSource();
    if ((self_14357227.shape == 7)) {
    if ((noiseBuffer_14357020[0] == null)) {
    noiseBuffer_14357020[0] = initNoiseBuffer_14635156(4096, 4.0960000000000000e+003);
    }
    
    osc_14690019.buffer = noiseBuffer_14357020[0];
    }
    else {
    if ((self_14357227.shape == 8)) {
    if ((noiseBuffer2_14357021[0] == null)) {
    noiseBuffer2_14357021[0] = initNoiseBuffer_14635156(128, 1.2800000000000000e+002);
    }
    
    osc_14690019.buffer = noiseBuffer2_14357021[0];
    }
    }
    self_14357227.source = osc_14690019;
    osc_14690019.loop = true;
    }
    else {
      var osc_14690048 = audioContext_14357019[0].createOscillator();
      switch (self_14357227.shape) {
      case 1:
        Tmp3 = makeNimstrLit("sine");
        break;
      case 2:
        Tmp3 = makeNimstrLit("square");
        break;
      case 5:
        Tmp3 = makeNimstrLit("sawtooth");
        break;
      case 6:
        Tmp3 = makeNimstrLit("triangle");
        break;
      default: 
        Tmp3 = makeNimstrLit("sine");
        break;
      }
      osc_14690048.type = toJSStr(Tmp3);
      osc_14690048.frequency.value = self_14357227.freq;
      if ((self_14357227.shape == 3)) {
      var d_14690054 = 1.2500000000000000e-001;
      var real_14690058 = new Float64Array(32);
      var imag_14690062 = new Float64Array(32);
      real_14690058[chckIndx(0, 0, (real_14690058).length-1)] = d_14690054;
      imag_14690062[chckIndx(0, 0, (imag_14690062).length-1)] = 0.0;
      L4: do {
        var i_14690071 = 0;
        var i_16531494 = 1;
        L5: do {
            L6: while (true) {
            if (!(i_16531494 < 32)) break L6;
              i_14690071 = i_16531494;
              real_14690058[chckIndx(i_14690071, 0, (real_14690058).length-1)] = ((2.0000000000000000e+000 / (i_14690071 * 3.1415926535897931e+000)) * Math.sin(((i_14690071 * 3.1415926535897931e+000) * d_14690054)));
              imag_14690062[chckIndx(i_14690071, 0, (imag_14690062).length-1)] = 0.0;
              i_16531494 = addInt(i_16531494, 1);
            }
        } while(false);
      } while(false);
      var p_14690085 = audioContext_14357019[0].createPeriodicWave(Float32Array.from(real_14690058), Float32Array.from(imag_14690062));
      osc_14690048.setPeriodicWave(p_14690085);
      }
      else {
      if ((self_14357227.shape == 4)) {
      var d_14690091 = 2.5000000000000000e-001;
      var real_14690095 = new Float64Array(32);
      var imag_14690099 = new Float64Array(32);
      real_14690095[chckIndx(0, 0, (real_14690095).length-1)] = d_14690091;
      imag_14690099[chckIndx(0, 0, (imag_14690099).length-1)] = 0.0;
      L7: do {
        var i_14690108 = 0;
        var i_16531499 = 1;
        L8: do {
            L9: while (true) {
            if (!(i_16531499 < 32)) break L9;
              i_14690108 = i_16531499;
              real_14690095[chckIndx(i_14690108, 0, (real_14690095).length-1)] = ((2.0000000000000000e+000 / (i_14690108 * 3.1415926535897931e+000)) * Math.sin(((i_14690108 * 3.1415926535897931e+000) * d_14690091)));
              imag_14690099[chckIndx(i_14690108, 0, (imag_14690099).length-1)] = 0.0;
              i_16531499 = addInt(i_16531499, 1);
            }
        } while(false);
      } while(false);
      var p_14690122 = audioContext_14357019[0].createPeriodicWave(Float32Array.from(real_14690095), Float32Array.from(imag_14690099));
      osc_14690048.setPeriodicWave(p_14690122);
      }
      }
      self_14357227.source = osc_14690048;
    }
    
    self_14357227.source.start();
    self_14357227.source.connect(self_14357227.gain);
    self_14357227.gain.connect(sfxGain_14360044[0]);
  } while (false);

  
}
function lerp_14525011(a_14525014, b_14525015, t_14525016) {
  var result_14525017 = 0.0;

  BeforeRet: do {
    result_14525017 = (a_14525014 + ((b_14525015 - a_14525014) * t_14525016));
    break BeforeRet;
  } while (false);

  return result_14525017;

}
function clamp_14545015(x_14545018, a_14545019, b_14545020) {
  var result_14545021 = 0.0;

  BeforeRet: do {
    if ((x_14545018 < a_14545019)) {
    result_14545021 = a_14545019;
    break BeforeRet;
    }
    
    if ((b_14545020 < x_14545018)) {
    result_14545021 = b_14545020;
    break BeforeRet;
    }
    
    result_14545021 = x_14545018;
    break BeforeRet;
  } while (false);

  return result_14545021;

}
function clamp_14550043(x_14550046, a_14550047, b_14550048) {
  var result_14550049 = 0.0;

  BeforeRet: do {
    if ((x_14550046 < a_14550047)) {
    result_14550049 = a_14550047;
    break BeforeRet;
    }
    
    if ((b_14550048 < x_14550046)) {
    result_14550049 = b_14550048;
    break BeforeRet;
    }
    
    result_14550049 = x_14550046;
    break BeforeRet;
  } while (false);

  return result_14550049;

}
function lerp_14550023(a_14550026, b_14550027, t_14550028) {
  var result_14550029 = 0.0;

  BeforeRet: do {
    result_14550029 = (a_14550026 + ((b_14550027 - a_14550026) * t_14550028));
    break BeforeRet;
  } while (false);

  return result_14550029;

}
function audioClock_14500052(self_14500055) {
      var Tmp2;
      var Tmp4;

  BeforeRet: do {
    switch (self_14500055.kind) {
    case 0:
      break;
    case 1:
      if ((0 < self_14500055.length)) {
      self_14500055.length = subInt(self_14500055.length, 1);
      if ((self_14500055.length == 0)) {
      resetChannel_14495160(self_14500055);
      break BeforeRet;
      }
      
      }
      
      if ((0 <= self_14500055.synthDataIndex)) {
      var i_14510010 = divInt(self_14500055.synthDataIndex, addInt(((self_14500055.synthData.Field0)|0), 1));
      if ((i_14510010 < ((self_14500055.synthData.Field2)|0))) {
      self_14500055.basefreq = note_12755141(((self_14500055.synthData.Field1[chckIndx(i_14510010, 0, (self_14500055.synthData.Field1).length-1)].Field0)|0));
      self_14500055.targetFreq = self_14500055.basefreq;
      self_14500055.freq = self_14500055.basefreq;
      self_14500055.trigger = true;
      self_14500055.init = chckRange(self_14500055.synthData.Field1[chckIndx(i_14510010, 0, (self_14500055.synthData.Field1).length-1)].Field1, 0, 15);
      self_14500055.env = 0;
      self_14500055.envPhase = 0;
      self_14500055.pchange = 0;
      synthSetOsc_14357224(self_14500055, self_14500055.synthData.Field1[chckIndx(i_14510010, 0, (self_14500055.synthData.Field1).length-1)].Field2, false);
      self_14500055.synthDataIndex = addInt(self_14500055.synthDataIndex, 1);
      }
      else {
        if ((0 < self_14500055.synthData.Field3)) {
        if (!((self_14500055.synthData.Field3 == 15))) {
        self_14500055.synthData.Field3 = ((self_14500055.synthData.Field3 - 1) & 0xff);
        }
        
        if ((0 < self_14500055.synthData.Field3)) {
        self_14500055.synthDataIndex = 0;
        }
        
        }
        else {
        resetChannel_14495160(self_14500055);
        }
        
      }
      
      }
      
      if ((self_14500055.glide == 0)) {
      self_14500055.freq = self_14500055.targetFreq;
      }
      else {
        self_14500055.freq = lerp_14525011(self_14500055.freq, self_14500055.targetFreq, (1.0000000000000000e+000 - (self_14500055.glide / 1.6000000000000000e+001)));
      }
      
      self_14500055.envPhase = addInt(self_14500055.envPhase, 1);
      if (!((self_14500055.pchange == 0))) {
      self_14500055.targetFreq = (self_14500055.targetFreq + ((self_14500055.targetFreq * self_14500055.pchange) / 1.2800000000000000e+002));
      if (((sampleRate_12775147[0] / 2.0000000000000000e+000) < self_14500055.targetFreq)) {
      self_14500055.targetFreq = (sampleRate_12775147[0] / 2.0000000000000000e+000);
      }
      
      self_14500055.basefreq = self_14500055.targetFreq;
      self_14500055.freq = self_14500055.targetFreq;
      }
      
      if ((0 < self_14500055.vibamount)) {
      self_14500055.targetFreq = (self_14500055.basefreq + (((Math.sin((self_14500055.envPhase / self_14500055.vibspeed)) * self_14500055.basefreq) * 2.9999999999999999e-002) * self_14500055.vibamount));
      }
      
      if (!((self_14500055.source == null))) {
++excHandler;
      Tmp2 = framePtr;
      try {
      self_14500055.source.frequency.value = self_14500055.freq;
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
      framePtr = Tmp2;
++excHandler;
      Tmp4 = framePtr;
      try {
      self_14500055.source.playbackRate.value = (self_14500055.freq / 1.0000000000000000e+003);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
      framePtr = Tmp4;
      lastJSError = prevJSError;
      } finally {
      framePtr = Tmp4;
      }
      lastJSError = prevJSError;
      } finally {
      framePtr = Tmp2;
      }
      }
      
      if ((self_14500055.env < 0)) {
      self_14500055.envValue = clamp_14545015(lerp_14525011((self_14500055.init / 1.5000000000000000e+001), 0.0, HEX2F_1575648(self_14500055.envPhase, mulInt(negInt(self_14500055.env), 4))), 0.0, 1.0000000000000000e+000);
      if ((self_14500055.envValue <= 0.0)) {
      resetChannel_14495160(self_14500055);
      break BeforeRet;
      }
      
      }
      else {
      if ((0 < self_14500055.env)) {
      self_14500055.envValue = clamp_14545015(lerp_14525011((self_14500055.init / 1.5000000000000000e+001), 1.0000000000000000e+000, HEX2F_1575648(self_14500055.envPhase, mulInt(self_14500055.env, 4))), 0.0, 1.0000000000000000e+000);
      }
      else {
      if ((self_14500055.env == 0)) {
      self_14500055.envValue = (self_14500055.init / 1.5000000000000000e+001);
      }
      }}
      self_14500055.gain.gain.value = clamp_14550043(lerp_14550023(self_14500055.gain.gain.value, self_14500055.envValue, 9.0000000000000002e-001), 0.0, 1.0000000000000000e+000);
      break;
    default: 
      break;
    }
  } while (false);

  
}
function audioClock_14550136() {
    if (!((audioContext_14357019[0] == null))) {
    sfxGain_14360044[0].gain.value = sfxVolume_12775145[0];
    musicGain_14360045[0].gain.value = musicVolume_12775146[0];
    masterGain_14360046[0].gain.value = masterVolume_12775144[0];
    L1: do {
      var channel_14555059 = null;
      var i_16531477 = 0;
      if ((i_16531477 <= 15)) {
      L2: do {
          L3: while (true) {
          if (!true) break L3;
            channel_14555059 = audioChannels_14357102[0][chckIndx(i_16531477, 0, (audioChannels_14357102[0]).length-1)];
            audioClock_14500052(channel_14555059);
            if ((15 <= i_16531477)) {
            break L2;
            }
            
            i_16531477 = addInt(i_16531477, 1);
          }
      } while(false);
      }
      
    } while(false);
    }
    

  
}
function step_14555097() {
              var Tmp11;
              var Tmp15;

  BeforeRet: do {
    if ((0 < loading_12775191[0])) {
    console.log("loading...", loading_12775191[0]);
    present_14360407();
    frame_12775294[0] = addInt(frame_12775294[0], 1);
    break BeforeRet;
    }
    
    mouseRelX_12775343[0] = (subInt(mouseRawX_12775341[0], lastMouseRawX_12775347[0]) / screenScale_12775259[0]);
    mouseRelY_12775344[0] = (subInt(mouseRawY_12775342[0], lastMouseRawY_12775348[0]) / screenScale_12775259[0]);
    L1: do {
      var i_14565071 = 0;
      var b_14565072 = false;
      var i_16531424 = 0;
      if ((i_16531424 <= 2)) {
      L2: do {
          L3: while (true) {
          if (!true) break L3;
            i_14565071 = i_16531424;
            b_14565072 = mouseButtonsDown_12775352[0][chckIndx(i_16531424, 0, (mouseButtonsDown_12775352[0]).length-1)];
            if (b_14565072) {
            mouseButtons_12775356[0][chckIndx(i_14565071, 0, (mouseButtons_12775356[0]).length-1)] = addInt(mouseButtons_12775356[0][chckIndx(i_14565071, 0, (mouseButtons_12775356[0]).length-1)], 1);
            }
            else {
              if ((0 < mouseButtons_12775356[0][chckIndx(i_14565071, 0, (mouseButtons_12775356[0]).length-1)])) {
              mouseButtons_12775356[0][chckIndx(i_14565071, 0, (mouseButtons_12775356[0]).length-1)] = -1;
              }
              else {
                mouseButtons_12775356[0][chckIndx(i_14565071, 0, (mouseButtons_12775356[0]).length-1)] = 0;
              }
              
            }
            
            if ((2 <= i_16531424)) {
            break L2;
            }
            
            i_16531424 = addInt(i_16531424, 1);
          }
      } while(false);
      }
      
    } while(false);
    L4: do {
      var controller_14580214 = null;
      var controller_14580214_Idx = 0;
      var i_16531428 = 0;
      var L_16531429 = (controllers_12775242[0]).length;
      L5: do {
          L6: while (true) {
          if (!(i_16531428 < L_16531429)) break L6;
            controller_14580214 = controllers_12775242[0]; controller_14580214_Idx = chckIndx(i_16531428, 0, (controllers_12775242[0]).length-1);
            update_12595262(controller_14580214[controller_14580214_Idx]);
            i_16531428 = addInt(i_16531428, 1);
            if (!(((controllers_12775242[0]).length == L_16531429))) {
            failedAssertImpl_1325480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    if (!((updateFunc_12775277[0] == null))) {
    updateFunc_12775277[0](timeStep_12775253[0]);
    }
    
    if (!((drawFunc_12775280[0] == null))) {
    drawFunc_12775280[0]();
    }
    
    L7: do {
      var k_14600229 = 0;
      var v_14600230 = 0;
      var L_16531439 = len_14590139(keysDown_12705629[0]);
      L8: do {
        var h_16531441 = 0;
        var colontmp__16531442 = 0;
        colontmp__16531442 = ((keysDown_12705629[0].data).length-1);
        var res_16531443 = 0;
        L9: do {
            L10: while (true) {
            if (!(res_16531443 <= colontmp__16531442)) break L10;
              h_16531441 = res_16531443;
              if (isFilled_2412218(keysDown_12705629[0].data[chckIndx(h_16531441, 0, (keysDown_12705629[0].data).length-1)].Field0)) {
              k_14600229 = keysDown_12705629[0].data[chckIndx(h_16531441, 0, (keysDown_12705629[0].data).length-1)].Field1;
              v_14600230 = keysDown_12705629[0].data[chckIndx(h_16531441, 0, (keysDown_12705629[0].data).length-1)].Field2;
              if ((0 < chckRange(v_14600230, -2147483648, 2147483647))) {
              (Tmp11 = HEX5BHEX5D_14420821(keysDown_12705629[0], k_14600229), Tmp11)[0][Tmp11[1]] = ((Tmp11[0][Tmp11[1]] + 1) >>> 0);
              }
              
              if (!((len_14590139(keysDown_12705629[0]) == L_16531439))) {
              failedAssertImpl_1325480(makeNimstrLit("tables.nim(681, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_16531443 = addInt(res_16531443, 1);
            }
        } while(false);
      } while(false);
    } while(false);
    lastMouseRawX_12775347[0] = mouseRawX_12775341[0];
    lastMouseRawY_12775348[0] = mouseRawY_12775342[0];
    L12: do {
      var touch_14605188 = null;
      var i_16531448 = 0;
      var L_16531449 = (touches_12775142[0]).length;
      L13: do {
          L14: while (true) {
          if (!(i_16531448 < L_16531449)) break L14;
            touch_14605188 = touches_12775142[0][chckIndx(i_16531448, 0, (touches_12775142[0]).length-1)];
              if ((touch_14605188.state == 0)) Tmp15 = true; else {                Tmp15 = (touch_14605188.state == 2);              }            if (Tmp15) {
            touch_14605188.state = 1;
            }
            
            i_16531448 = addInt(i_16531448, 1);
            if (!(((touches_12775142[0]).length == L_16531449))) {
            failedAssertImpl_1325480(makeNimstrLit("iterators.nim(213, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    var posHEX60gensym50_14610002 = 0;
    L16: do {
      var iHEX60gensym50_14610015 = 0;
      var colontmp__16531452 = 0;
      colontmp__16531452 = (touches_12775142[0]).length;
      var i_16531453 = 0;
      L17: do {
          L18: while (true) {
          if (!(i_16531453 < colontmp__16531452)) break L18;
            iHEX60gensym50_14610015 = i_16531453;
            var it_14610020 = nimCopy(null, touches_12775142[0][chckIndx(iHEX60gensym50_14610015, 0, (touches_12775142[0]).length-1)], NTI12591064);
            if (!(contains_14395120([3, 4], it_14610020.state))) {
            if (!((posHEX60gensym50_14610002 == iHEX60gensym50_14610015))) {
            nimCopy(touches_12775142[0][chckIndx(posHEX60gensym50_14610002, 0, (touches_12775142[0]).length-1)], touches_12775142[0][chckIndx(iHEX60gensym50_14610015, 0, (touches_12775142[0]).length-1)], NTI12591064);
            }
            
            posHEX60gensym50_14610002 = addInt(posHEX60gensym50_14610002, 1);
            }
            
            i_16531453 = addInt(i_16531453, 1);
          }
      } while(false);
    } while(false);
    if (touches_12775142[0].length < chckRange(posHEX60gensym50_14610002, 0, 2147483647)) { for (var i=touches_12775142[0].length;i<chckRange(posHEX60gensym50_14610002, 0, 2147483647);++i) touches_12775142[0].push(({id: 0, x: 0, y: 0, sx: 0.0, sy: 0.0, xrel: 0.0, yrel: 0.0, xrelraw: 0.0, yrelraw: 0.0, state: 0})); }
               else { touches_12775142[0].length = chckRange(posHEX60gensym50_14610002, 0, 2147483647); };
    present_14360407();
    audioClock_14550136();
    mouseWheelState_12775357[0] = 0;
    frame_12775294[0] = addInt(frame_12775294[0], 1);
  } while (false);

  
}
function run_14730051() {
    if (!((interval_14357018[0] == null))) {
    window.clearInterval(interval_14357018[0]);
    }
    
    interval_14357018[0] = window.setInterval(step_14555097, (((timeStep_12775253[0] * 1.0000000000000000e+003))|0));

  
}
function run_16465690(init_16465694, update_16465698, draw_16465701) {
    if (!(!((update_16465698 == null)))) {
    failedAssertImpl_1325480(makeNimstrLit("nico.nim(2923, 9) `update != nil` "));
    }
    
    if (!(!((draw_16465701 == null)))) {
    failedAssertImpl_1325480(makeNimstrLit("nico.nim(2924, 9) `draw != nil` "));
    }
    
    initFunc_12775273[0] = init_16465694;
    updateFunc_12775277[0] = update_16465698;
    drawFunc_12775280[0] = draw_16465701;
    if (!((initFunc_12775273[0] == null))) {
    initFunc_12775273[0]();
    }
    
    if (!(running_12775156[0])) {
    running_12775156[0] = true;
    run_14730051();
    }
    

  
}
function joinPath_14736002(a_14736004, b_14736005) {
  var result_14736006 = [];

  BeforeRet: do {
    if ((a_14736004[chckIndx(((a_14736004).length-1), 0, (a_14736004).length-1)] == 47)) {
    result_14736006 = nimCopy(null, (a_14736004 || []).concat(b_14736005 || []), NTI1208013);
    break BeforeRet;
    }
    
    result_14736006 = nimCopy(null, (a_14736004 || []).concat(makeNimstrLit("/") || [],b_14736005 || []), NTI1208013);
    break BeforeRet;
  } while (false);

  return result_14736006;

}
function readFile_14490043(filename_14490045) {
  var result_14490046 = [];

  BeforeRet: do {
    var xhr_14490047 = new XMLHttpRequest();
    xhr_14490047.open("GET", toJSStr(filename_14490045), false, null, null);
    xhr_14490047.send();
    if ((xhr_14490047.status == 200)) {
    result_14490046 = nimCopy(null, cstrToNimstr(xhr_14490047.responseText), NTI1208013);
    break BeforeRet;
    }
    else {
      raiseException({message: (makeNimstrLit("unable to open file: ") || []).concat(filename_14490045 || []), parent: null, m_type: NTI1214623, name: null, trace: [], up: null}, "IOError");
    }
    
  } while (false);

  return result_14490046;

}
function nsuRemoveSuffixCharSet(s_10225054, s_10225054_Idx, chars_10225056) {
          var Tmp3;

  BeforeRet: do {
    if (((s_10225054[s_10225054_Idx]).length == 0)) {
    break BeforeRet;
    }
    
    var last_10225058 = ((s_10225054[s_10225054_Idx]).length-1);
    L1: do {
        L2: while (true) {
          if (!(-1 < last_10225058)) Tmp3 = false; else {            Tmp3 = (chars_10225056[s_10225054[s_10225054_Idx][chckIndx(last_10225058, 0, (s_10225054[s_10225054_Idx]).length-1)]] != undefined);          }        if (!Tmp3) break L2;
          last_10225058 = subInt(last_10225058, 1);
        }
    } while(false);
    (s_10225054[s_10225054_Idx].length = chckRange(addInt(last_10225058, 1), 0, 2147483647));
  } while (false);

  
}
function newSurfaceRGBA_12775886(w_12775888, h_12775889) {
  var result_12775890 = null;

    result_12775890 = new_12775765();
    result_12775890.data = nimCopy(null, newSeq_12775839(chckRange(mulInt(mulInt(w_12775888, h_12775889), 4), 0, 2147483647)), NTI12775843);
    result_12775890.channels = 4;
    result_12775890.w = w_12775888;
    result_12775890.h = h_12775889;

  return result_12775890;

}
function loadSurfaceRGBA_14495032(filename_14495034, callback_14495038) {
    filename_14495034 = nimCopy(null, filename_14495034, NTI1208013);
    function HEX3Aanonymous_14495046(event_14495049) {
        loading_12775191[0] = subInt(loading_12775191[0], 1);
        var target_14495056 = event_14495049.target;
        console.log("image loaded: ", target_14495056.src);
        var canvas_14495057 = document.createElement("canvas");
        var ctx_14495058 = getContext2D_12956722(canvas_14495057);
        var w_14495059 = target_14495056.width;
        var h_14495060 = target_14495056.height;
        canvas_14495057.width = w_14495059;
        canvas_14495057.height = h_14495060;
        ctx_14495058.drawImage(target_14495056, 0.0, 0.0);
        var imgData_14495061 = ctx_14495058.getImageData(0.0, 0.0, w_14495059, h_14495060);
        var surface_14495062 = newSurfaceRGBA_12775886(w_14495059, h_14495060);
        surface_14495062.filename = nimCopy(null, filename_14495034, NTI1208013);
        surface_14495062.data = nimCopy(null, imgData_14495061.data, NTI12956044);
        callback_14495038(surface_14495062);

      
    }
    function HEX3Aanonymous_14495091(event_14495094) {
        callback_14495038(null);

      
    }

    loading_12775191[0] = addInt(loading_12775191[0], 1);
    var img_14495045 = document.createElement("img");
    img_14495045.addEventListener("load", HEX3Aanonymous_14495046, false);
    img_14495045.addEventListener("error", HEX3Aanonymous_14495091, false);
    img_14495045.src = toJSStr(filename_14495034);

  
}
function loadFont_16180014(index_16180016, filename_16180017) {
    var Tmp2;
    function HEX3Aanonymous_16185005(surface_16185007) {
        fonts_12775290[0][chckIndx(index_16180016, 0, (fonts_12775290[0]).length-1)] = createFontFromSurface_15815297(surface_16185007, chars_16180026[0]);
        if (shouldReplace_16180025) {
        console.log("updating current font ", index_16180016);
        setFont_15021237(chckRange(index_16180016, 0, 15));
        }
        

      
    }

    var shouldReplace_16180025 = (currentFont_12775291[0] == fonts_12775290[0][chckIndx(index_16180016, 0, (fonts_12775290[0]).length-1)]);
    var chars_16180026 = [[]];
    var datPath_16180027 = [];
++excHandler;
    Tmp2 = framePtr;
    try {
    datPath_16180027 = nimCopy(null, joinPath_14736002(assetPath_12775257[0], (filename_16180017 || []).concat(makeNimstrLit(".dat") || [])), NTI1208013);
    chars_16180026[0] = nimCopy(null, readFile_14490043(datPath_16180027), NTI1208013);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
    framePtr = Tmp2;
    if (lastJSError && (isObj(lastJSError.m_type, NTI1214623))) {
    raiseException({message: (makeNimstrLit("Missing ") || []).concat(datPath_16180027 || [],makeNimstrLit(" needed if not passing chars to loadFont") || []), parent: null, m_type: NTI1214617, name: null, trace: [], up: null}, "Exception");
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Tmp2;
    }
    nsuRemoveSuffixCharSet(chars_16180026, 0, ConstSet2);
    loadSurfaceRGBA_14495032(joinPath_14736002(assetPath_12775257[0], filename_16180017), HEX3Aanonymous_16185005);

  
}
function gameInit_16531038() {
    loadFont_16180014(0, makeNimstrLit("font.png"));

  
}
function axis_12620056(self_12620058, axis_12620059) {
  var result_12620060 = 0.0;

  BeforeRet: do {
    result_12620060 = self_12620058.axes[chckIndx(axis_12620059, 0, (self_12620058.axes).length-1)].Field0;
    break BeforeRet;
  } while (false);

  return result_12620060;

}
function btn_12635014(self_12635016, button_12635017) {
    var Tmp1;
    var Tmp2;
    var Tmp3;
    var Tmp4;

  var result_12635018 = false;

  BeforeRet: do {
    if ((button_12635017 == 0)) {
    if ((0 < self_12635016.buttons[chckIndx(button_12635017, 0, (self_12635016.buttons).length-1)])) Tmp1 = true; else {      Tmp1 = (axis_12620056(self_12635016, 0) < -(self_12635016.deadzone));    }    result_12635018 = Tmp1;
    break BeforeRet;
    }
    else {
    if ((button_12635017 == 1)) {
    if ((0 < self_12635016.buttons[chckIndx(button_12635017, 0, (self_12635016.buttons).length-1)])) Tmp2 = true; else {      Tmp2 = (self_12635016.deadzone < axis_12620056(self_12635016, 0));    }    result_12635018 = Tmp2;
    break BeforeRet;
    }
    else {
    if ((button_12635017 == 2)) {
    if ((0 < self_12635016.buttons[chckIndx(button_12635017, 0, (self_12635016.buttons).length-1)])) Tmp3 = true; else {      Tmp3 = (axis_12620056(self_12635016, 1) < -(self_12635016.deadzone));    }    result_12635018 = Tmp3;
    break BeforeRet;
    }
    else {
    if ((button_12635017 == 3)) {
    if ((0 < self_12635016.buttons[chckIndx(button_12635017, 0, (self_12635016.buttons).length-1)])) Tmp4 = true; else {      Tmp4 = (self_12635016.deadzone < axis_12620056(self_12635016, 1));    }    result_12635018 = Tmp4;
    break BeforeRet;
    }
    }}}
    result_12635018 = (0 < self_12635016.buttons[chckIndx(button_12635017, 0, (self_12635016.buttons).length-1)]);
    break BeforeRet;
  } while (false);

  return result_12635018;

}
function btn_15035021(b_15035023) {
  var result_15095022 = false;

  BeforeRet: do {
    L1: do {
      var c_15095030 = null;
      var c_15095030_Idx = 0;
      var i_16531514 = 0;
      var L_16531515 = (controllers_12775242[0]).length;
      L2: do {
          L3: while (true) {
          if (!(i_16531514 < L_16531515)) break L3;
            c_15095030 = controllers_12775242[0]; c_15095030_Idx = chckIndx(i_16531514, 0, (controllers_12775242[0]).length-1);
            if (btn_12635014(c_15095030[c_15095030_Idx], b_15035023)) {
            result_15095022 = true;
            break BeforeRet;
            }
            
            i_16531514 = addInt(i_16531514, 1);
            if (!(((controllers_12775242[0]).length == L_16531515))) {
            failedAssertImpl_1325480(makeNimstrLit("iterators.nim(204, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while(false);
    } while(false);
    result_15095022 = false;
    break BeforeRet;
  } while (false);

  return result_15095022;

}
function playerInput_16531053() {
    pressedLeft_16531021[0] = btn_15035021(0);
    pressedRight_16531022[0] = btn_15035021(1);
    pressedUp_16531023[0] = btn_15035021(2);
    pressedDown_16531024[0] = btn_15035021(3);

  
}
function playerMove_16531068() {
    if (pressedLeft_16531021[0]) {
    playerX_16531015[0] = subInt(playerX_16531015[0], 1);
    }
    
    if (pressedRight_16531022[0]) {
    playerX_16531015[0] = addInt(playerX_16531015[0], 1);
    }
    
    if (pressedUp_16531023[0]) {
    playerY_16531016[0] = subInt(playerY_16531016[0], 1);
    }
    
    if (pressedDown_16531024[0]) {
    playerY_16531016[0] = addInt(playerY_16531016[0], 1);
    }
    

  
}
function gameUpdate_16531107(dt_16531109) {
    buttonDown_16531014[0] = btn_15035021(4);
    playerInput_16531053();
    playerMove_16531068();

  
}
function get_12765014(s_12765016, x_12765017, y_12765018) {
      var Tmp1;
      var Tmp2;

  var result_12765019 = 0;

  BeforeRet: do {
      if (((x_12765017 < 0) || (y_12765018 < 0))) Tmp2 = true; else {        Tmp2 = (s_12765016.w <= x_12765017);      }      if (Tmp2) Tmp1 = true; else {        Tmp1 = (s_12765016.h <= y_12765018);      }    if (Tmp1) {
    result_12765019 = 0;
    break BeforeRet;
    }
    
    result_12765019 = s_12765016.data[chckIndx(addInt(mulInt(y_12765018, s_12765016.w), x_12765017), 0, (s_12765016.data).length-1)];
    break BeforeRet;
  } while (false);

  return result_12765019;

}
function stencilTest_15021580(x_15021582, y_15021583, nv_15021584) {
  var result_15021585 = false;

  BeforeRet: do {
    if ((stencilMode_12775207[0] == 0)) {
    result_15021585 = true;
    break BeforeRet;
    }
    
    var v_15021591 = get_12765014(stencilBuffer_12775197[0], x_15021582, y_15021583);
    switch (stencilMode_12775207[0]) {
    case 0:
      result_15021585 = true;
      break BeforeRet;
      break;
    case 1:
      result_15021585 = (nv_15021584 == v_15021591);
      break BeforeRet;
      break;
    case 2:
      result_15021585 = (nv_15021584 < v_15021591);
      break BeforeRet;
      break;
    case 3:
      result_15021585 = (v_15021591 < nv_15021584);
      break BeforeRet;
      break;
    case 4:
      result_15021585 = (nv_15021584 <= v_15021591);
      break BeforeRet;
      break;
    case 5:
      result_15021585 = (v_15021591 <= nv_15021584);
      break BeforeRet;
      break;
    case 6:
      result_15021585 = !((nv_15021584 == v_15021591));
      break BeforeRet;
      break;
    }
  } while (false);

  return result_15021585;

}
function ditherPass_15090493(x_15090495, y_15090496) {
  var result_15090497 = false;

  BeforeRet: do {
    var x4_15090498 = modInt(x_15090495, 4);
    var y4_15090499 = modInt(y_15090496, 4);
    var bit_15090500 = ((((y4_15090499 * 4) & 0xffff) + x4_15090498) & 0xffff);
    result_15090497 = !(((gDitherPattern_12775250[0] & (1 << bit_15090500)) == 0));
    break BeforeRet;
  } while (false);

  return result_15090497;

}
function set_12755277(s_12755279, x_12755280, y_12755281, v_12755282) {
      var Tmp1;
      var Tmp2;

  BeforeRet: do {
      if (((x_12755280 < 0) || (y_12755281 < 0))) Tmp2 = true; else {        Tmp2 = (s_12755279.w <= x_12755280);      }      if (Tmp2) Tmp1 = true; else {        Tmp1 = (s_12755279.h <= y_12755281);      }    if (Tmp1) {
    break BeforeRet;
    }
    
    s_12755279.data[chckIndx(addInt(mulInt(y_12755281, s_12755279.w), x_12755280), 0, (s_12755279.data).length-1)] = v_12755282;
  } while (false);

  
}
function psetRaw_15035768(x_15035770, y_15035771, c_15035772) {
    if (stencilTest_15021580(x_15035770, y_15035771, stencilRef_12775209[0])) {
    if (ditherPass_15090493(x_15035770, y_15035771)) {
    set_12755277(swCanvas_12775196[0], x_15035770, y_15035771, c_15035772);
    }
    else {
    if ((0 <= ditherColor_15090339[0])) {
    set_12755277(swCanvas_12775196[0], x_15035770, y_15035771, ditherColor_15090339[0]);
    }
    }
    if (stencilWrite_12775208[0]) {
    set_12755277(stencilBuffer_12775197[0], x_15035770, y_15035771, stencilRef_12775209[0]);
    }
    
    }
    

  
}
function cls_15135177() {
    L1: do {
      var y_15135184 = 0;
      var res_16531524 = clipMinY_12775335[0];
      L2: do {
          L3: while (true) {
          if (!(res_16531524 <= clipMaxY_12775336[0])) break L3;
            y_15135184 = res_16531524;
            L4: do {
              var x_15135190 = 0;
              var res_16531519 = clipMinX_12775333[0];
              L5: do {
                  L6: while (true) {
                  if (!(res_16531519 <= clipMaxX_12775334[0])) break L6;
                    x_15135190 = res_16531519;
                    psetRaw_15035768(x_15135190, y_15135184, 0);
                    res_16531519 += 1;
                  }
              } while(false);
            } while(false);
            res_16531524 += 1;
          }
      } while(false);
    } while(false);

  
}
function setColor_15021289(colId_15021291) {
    currentColor_12775318[0] = colId_15021291;

  
}
function pset_15135286(x_15135288, y_15135289, c_15135290) {
      var Tmp1;
      var Tmp2;
      var Tmp3;

  BeforeRet: do {
    var x_15135291 = (x_15135288 - cameraX_12775295[0]);
    var y_15135292 = (y_15135289 - cameraY_12775296[0]);
      if ((((x_15135291)|0) < clipMinX_12775333[0])) Tmp3 = true; else {        Tmp3 = (((y_15135292)|0) < clipMinY_12775335[0]);      }      if (Tmp3) Tmp2 = true; else {        Tmp2 = (clipMaxX_12775334[0] < ((x_15135291)|0));      }      if (Tmp2) Tmp1 = true; else {        Tmp1 = (clipMaxY_12775336[0] < ((y_15135292)|0));      }    if (Tmp1) {
    break BeforeRet;
    }
    
    if (stencilTest_15021580(((x_15135291)|0), ((y_15135292)|0), stencilRef_12775209[0])) {
    if (ditherPass_15090493(((x_15135291)|0), ((y_15135292)|0))) {
    set_12755277(swCanvas_12775196[0], ((x_15135291)|0), ((y_15135292)|0), paletteMapDraw_12775300[0][c_15135290]);
    }
    else {
    if ((0 <= ditherColor_15090339[0])) {
    set_12755277(swCanvas_12775196[0], ((x_15135291)|0), ((y_15135292)|0), paletteMapDraw_12775300[0][ditherColor_15090339[0]]);
    }
    }
    if (stencilWrite_12775208[0]) {
    set_12755277(stencilBuffer_12775197[0], ((x_15135291)|0), ((y_15135292)|0), stencilRef_12775209[0]);
    }
    
    }
    
  } while (false);

  
}
function pset_15035202(x_15035204, y_15035205) {
    pset_15135286(x_15035204, y_15035205, currentColor_12775318[0]);

  
}
function hline_15035291(x0_15035293, y_15035294, x1_15035295) {
      var Tmp1;
      var Tmp2;

  BeforeRet: do {
    var minX_15385029 = (clipMinX_12775333[0] + ((cameraX_12775295[0])|0));
    var maxX_15385030 = (clipMaxX_12775334[0] + ((cameraX_12775295[0])|0));
      if (!(((x0_15035293)|0) < minX_15385029)) Tmp1 = false; else {        Tmp1 = (((x1_15035295)|0) < minX_15385029);      }    if (Tmp1) {
    break BeforeRet;
    }
    
      if (!(maxX_15385030 < ((x0_15035293)|0))) Tmp2 = false; else {        Tmp2 = (maxX_15385030 < ((x1_15035295)|0));      }    if (Tmp2) {
    break BeforeRet;
    }
    
    var x0_15395001 = x0_15035293;
    var x1_15395002 = x1_15035295;
    if ((x1_15395002 < x0_15395001)) {
    var Tmp3 = x1_15395002; x1_15395002 = x0_15395001; x0_15395001 = Tmp3;    }
    
    x0_15395001 = toPint_14395366(nimMax(((x0_15395001)|0), minX_15385029));
    x1_15395002 = toPint_14395366(nimMin(((x1_15395002)|0), maxX_15385030));
    L4: do {
      var x_15395018 = 0;
      var res_16531537 = x0_15395001;
      L5: do {
          L6: while (true) {
          if (!(res_16531537 <= x1_15395002)) break L6;
            x_15395018 = res_16531537;
            pset_15035202(x_15395018, y_15035294);
            res_16531537 += 1;
          }
      } while(false);
    } while(false);
  } while (false);

  
}
function boxfill_15035279(x_15035281, y_15035282, w_15035283, h_15035284) {
  BeforeRet: do {
    if (((w_15035283 == 0) || (h_15035284 == 0))) {
    break BeforeRet;
    }
    
    L1: do {
      var y_15215093 = 0;
      var colontmp__16531531 = 0;
      colontmp__16531531 = (y_15035282 + h_15035284);
      var res_16531533 = y_15035282;
      L2: do {
          L3: while (true) {
          if (!(res_16531533 < colontmp__16531531)) break L3;
            y_15215093 = res_16531533;
            hline_15035291(x_15035281, y_15215093, ((x_15035281 + w_15035283) - 1));
            res_16531533 += 1;
          }
      } while(false);
    } while(false);
  } while (false);

  
}
function HEX5BHEX5D_16195273(t_16195279, key_16195280) {
  var result_16195282 = null;

    var hcHEX60gensym22_16195283 = [0];
    var indexHEX60gensym22_16195292 = rawGet_16090332(t_16195279, key_16195280, hcHEX60gensym22_16195283, 0);
    if ((0 <= indexHEX60gensym22_16195292)) {
    result_16195282 = t_16195279.data[chckIndx(indexHEX60gensym22_16195292, 0, (t_16195279.data).length-1)].Field2;
    }
    else {
      raiseException({message: (makeNimstrLit("key not found: ") || []).concat(HEX24_3125214(key_16195280) || []), parent: null, m_type: NTI1214645, name: null, trace: [], up: null}, "KeyError");
    }
    

  return result_16195282;

}
function textWidth_15021277(text_15021279, scale_15021280) {
  var result_16220322 = 0;

    if ((currentFont_12775291[0] == null)) {
    raiseException({message: makeNimstrLit("No font selected"), parent: null, m_type: NTI1214617, name: null, trace: [], up: null}, "Exception");
    }
    
    L1: do {
      var c_16225002 = 0;
      var i_16531572 = 0;
      var result_16531573 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16531572 < (text_15021279).length)) break L3;
            if ((text_15021279[chckIndx(i_16531572, 0, (text_15021279).length-1)] <= 127)) {
            result_16531573 = chckRange(text_15021279[chckIndx(i_16531572, 0, (text_15021279).length-1)], -2147483648, 2147483647);
            i_16531572 = addInt(i_16531572, 1);
            }
            else {
            if ((((text_15021279[chckIndx(i_16531572, 0, (text_15021279).length-1)] >>> 0) >>> 5) == 6)) {
            if ((i_16531572 <= subInt((text_15021279).length, 2))) {
            result_16531573 = chckRange((((text_15021279[chckIndx(i_16531572, 0, (text_15021279).length-1)] & 31) << 6) | (text_15021279[chckIndx(addInt(i_16531572, 1), 0, (text_15021279).length-1)] & 63)), -2147483648, 2147483647);
            i_16531572 = addInt(i_16531572, 2);
            }
            else {
              result_16531573 = 65533;
              i_16531572 = addInt(i_16531572, 1);
            }
            
            }
            else {
            if ((((text_15021279[chckIndx(i_16531572, 0, (text_15021279).length-1)] >>> 0) >>> 4) == 14)) {
            if ((i_16531572 <= subInt((text_15021279).length, 3))) {
            result_16531573 = chckRange(((((text_15021279[chckIndx(i_16531572, 0, (text_15021279).length-1)] & 15) << 12) | ((text_15021279[chckIndx(addInt(i_16531572, 1), 0, (text_15021279).length-1)] & 63) << 6)) | (text_15021279[chckIndx(addInt(i_16531572, 2), 0, (text_15021279).length-1)] & 63)), -2147483648, 2147483647);
            i_16531572 = addInt(i_16531572, 3);
            }
            else {
              result_16531573 = 65533;
              i_16531572 = addInt(i_16531572, 1);
            }
            
            }
            else {
            if ((((text_15021279[chckIndx(i_16531572, 0, (text_15021279).length-1)] >>> 0) >>> 3) == 30)) {
            if ((i_16531572 <= subInt((text_15021279).length, 4))) {
            result_16531573 = chckRange((((((text_15021279[chckIndx(i_16531572, 0, (text_15021279).length-1)] & 7) << 18) | ((text_15021279[chckIndx(addInt(i_16531572, 1), 0, (text_15021279).length-1)] & 63) << 12)) | ((text_15021279[chckIndx(addInt(i_16531572, 2), 0, (text_15021279).length-1)] & 63) << 6)) | (text_15021279[chckIndx(addInt(i_16531572, 3), 0, (text_15021279).length-1)] & 63)), -2147483648, 2147483647);
            i_16531572 = addInt(i_16531572, 4);
            }
            else {
              result_16531573 = 65533;
              i_16531572 = addInt(i_16531572, 1);
            }
            
            }
            else {
            if ((((text_15021279[chckIndx(i_16531572, 0, (text_15021279).length-1)] >>> 0) >>> 2) == 62)) {
            if ((i_16531572 <= subInt((text_15021279).length, 5))) {
            result_16531573 = chckRange(((((((text_15021279[chckIndx(i_16531572, 0, (text_15021279).length-1)] & 3) << 24) | ((text_15021279[chckIndx(addInt(i_16531572, 1), 0, (text_15021279).length-1)] & 63) << 18)) | ((text_15021279[chckIndx(addInt(i_16531572, 2), 0, (text_15021279).length-1)] & 63) << 12)) | ((text_15021279[chckIndx(addInt(i_16531572, 3), 0, (text_15021279).length-1)] & 63) << 6)) | (text_15021279[chckIndx(addInt(i_16531572, 4), 0, (text_15021279).length-1)] & 63)), -2147483648, 2147483647);
            i_16531572 = addInt(i_16531572, 5);
            }
            else {
              result_16531573 = 65533;
              i_16531572 = addInt(i_16531572, 1);
            }
            
            }
            else {
            if ((((text_15021279[chckIndx(i_16531572, 0, (text_15021279).length-1)] >>> 0) >>> 1) == 126)) {
            if ((i_16531572 <= subInt((text_15021279).length, 6))) {
            result_16531573 = chckRange((((((((text_15021279[chckIndx(i_16531572, 0, (text_15021279).length-1)] & 1) << 30) | ((text_15021279[chckIndx(addInt(i_16531572, 1), 0, (text_15021279).length-1)] & 63) << 24)) | ((text_15021279[chckIndx(addInt(i_16531572, 2), 0, (text_15021279).length-1)] & 63) << 18)) | ((text_15021279[chckIndx(addInt(i_16531572, 3), 0, (text_15021279).length-1)] & 63) << 12)) | ((text_15021279[chckIndx(addInt(i_16531572, 4), 0, (text_15021279).length-1)] & 63) << 6)) | (text_15021279[chckIndx(addInt(i_16531572, 5), 0, (text_15021279).length-1)] & 63)), -2147483648, 2147483647);
            i_16531572 = addInt(i_16531572, 6);
            }
            else {
              result_16531573 = 65533;
              i_16531572 = addInt(i_16531572, 1);
            }
            
            }
            else {
              result_16531573 = chckRange(text_15021279[chckIndx(i_16531572, 0, (text_15021279).length-1)], -2147483648, 2147483647);
              i_16531572 = addInt(i_16531572, 1);
            }
            }}}}}
            c_16225002 = result_16531573;
            if (!(hasKey_16090316(currentFont_12775291[0].rects, c_16225002))) {
            raiseException({message: (makeNimstrLit("character not in font: \'") || []).concat(HEX24_3125214(c_16225002) || [],makeNimstrLit("\'") || []), parent: null, m_type: NTI1214617, name: null, trace: [], up: null}, "Exception");
            }
            
            result_16220322 = addInt(result_16220322, toPint_14395366(addInt(mulInt(HEX5BHEX5D_16195273(currentFont_12775291[0].rects, c_16225002).Field2, ((scale_15021280)|0)), ((scale_15021280)|0))));
          }
      } while(false);
    } while(false);

  return result_16220322;

}
function substr_1591022(s_1591024, first_1591025, last_1591026) {
  var result_1591027 = [];

    var first_1591028 = nimMax(first_1591025, 0);
    var L_1591030 = nimMax(addInt(subInt(nimMin(last_1591026, ((s_1591024).length-1)), first_1591028), 1), 0);
    result_1591027 = nimCopy(null, mnewString(chckRange(L_1591030, 0, 2147483647)), NTI1208013);
    L1: do {
      var i_1591039 = 0;
      var colontmp__16531646 = 0;
      colontmp__16531646 = subInt(L_1591030, 1);
      var res_16531647 = 0;
      L2: do {
          L3: while (true) {
          if (!(res_16531647 <= colontmp__16531646)) break L3;
            i_1591039 = res_16531647;
            result_1591027[chckIndx(i_1591039, 0, (result_1591027).length-1)] = s_1591024[chckIndx(addInt(i_1591039, first_1591028), 0, (s_1591024).length-1)];
            res_16531647 = addInt(res_16531647, 1);
          }
      } while(false);
    } while(false);

  return result_1591027;

}
function HEX2BHEX3D_15430035(x_15430039, x_15430039_Idx, y_15430040) {
    x_15430039[x_15430039_Idx] = (x_15430039[x_15430039_Idx] + y_15430040);

  
}
function fontBlit_15515053(font_15515055, srcRect_15515056, dstRect_15515057, color_15515058) {
                        var Tmp8;
                        var Tmp9;
                        var Tmp10;
                        var Tmp11;
                        var Tmp12;

    var dx_15515059 = [dstRect_15515057.Field0];
    var dy_15515060 = [dstRect_15515057.Field1];
    var sx_15515061 = [srcRect_15515056.Field0];
    var sy_15515062 = [srcRect_15515056.Field1];
    var dw_15515063 = dstRect_15515057.Field2;
    var dh_15515064 = dstRect_15515057.Field3;
    var sw_15515065 = srcRect_15515056.Field2;
    var sh_15515066 = srcRect_15515056.Field3;
    L1: do {
      var y_15515074 = 0;
      var i_16531672 = 0;
      L2: do {
          L3: while (true) {
          if (!(i_16531672 < dstRect_15515057.Field3)) break L3;
            y_15515074 = i_16531672;
            dx_15515059[0] = dstRect_15515057.Field0;
            sx_15515061[0] = srcRect_15515056.Field0;
            L4: do {
              var x_15515082 = 0;
              var i_16531670 = 0;
              L5: do {
                  L6: while (true) {
                  if (!(i_16531670 < dstRect_15515057.Field2)) break L6;
                    x_15515082 = i_16531670;
                    L7: do {
                        if (((sx_15515061[0] < 0.0) || (sy_15515062[0] < 0.0))) Tmp9 = true; else {                          Tmp9 = (toPint_14395366((font_15515055.w - 1)) < toPint_12775100(sx_15515061[0]));                        }                        if (Tmp9) Tmp8 = true; else {                          Tmp8 = (toPint_14395366((font_15515055.h - 1)) < toPint_12775100(sy_15515062[0]));                        }                      if (Tmp8) {
                      break L7;
                      }
                      
                        if (((toPint_12775100(dx_15515059[0]) < toPint_14395366(clipMinX_12775333[0])) || (toPint_12775100(dy_15515060[0]) < toPint_14395366(clipMinY_12775335[0])))) Tmp11 = true; else {                          Tmp11 = (toPint_14395366(clipMaxX_12775334[0]) < toPint_12775100(dx_15515059[0]));                        }                        if (Tmp11) Tmp10 = true; else {                          Tmp10 = (toPint_14395366(clipMaxY_12775336[0]) < toPint_12775100(dy_15515060[0]));                        }                      if (Tmp10) {
                      break L7;
                      }
                      
                        if (!(font_15515055.data[((toPint_12775100(sy_15515062[0]) * toPint_14395366(font_15515055.w)) + toPint_12775100(sx_15515061[0]))] == 1)) Tmp12 = false; else {                          Tmp12 = ditherPass_15090493(((dx_15515059[0])|0), ((dy_15515060[0])|0));                        }                      if (Tmp12) {
                      swCanvas_12775196[0].data[((toPint_12775100(dy_15515060[0]) * toPint_14395366(swCanvas_12775196[0].w)) + toPint_12775100(dx_15515059[0]))] = currentColor_12775318[0];
                      }
                      else {
                      if ((0 <= ditherColor_15090339[0])) {
                      swCanvas_12775196[0].data[((toPint_12775100(dy_15515060[0]) * toPint_14395366(swCanvas_12775196[0].w)) + toPint_12775100(dx_15515059[0]))] = ditherColor_15090339[0];
                      }
                      }
                      HEX2BHEX3D_15430035(sx_15515061, 0, (1.0000000000000000e+000 * (sw_15515065 / dw_15515063)));
                      HEX2BHEX3D_15430035(dx_15515059, 0, 1.0000000000000000e+000);
                    } while(false);
                    i_16531670 += 1;
                  }
              } while(false);
            } while(false);
            HEX2BHEX3D_15430035(sy_15515062, 0, (1.0000000000000000e+000 * (sh_15515066 / dh_15515064)));
            HEX2BHEX3D_15430035(dy_15515060, 0, 1.0000000000000000e+000);
            i_16531672 += 1;
          }
      } while(false);
    } while(false);

  
}
function glyph_15021240(c_15021242, x_15021243, y_15021244, scale_15021245) {
    var Tmp2;

  var result_16190079 = 0;

  BeforeRet: do {
    if ((currentFont_12775291[0] == null)) {
    raiseException({message: makeNimstrLit("No font selected"), parent: null, m_type: NTI1214617, name: null, trace: [], up: null}, "Exception");
    }
    
    if (!(hasKey_16090316(currentFont_12775291[0].rects, c_15021242))) {
    break BeforeRet;
    }
    
    var src_16200028 = nimCopy(null, HEX5BHEX5D_16195273(currentFont_12775291[0].rects, c_15021242), NTI12705648);
    var dst_16200030 = nimCopy(null, {Field0: ((x_15021243)|0), Field1: ((y_15021244)|0), Field2: mulInt(src_16200028.Field2, ((scale_15021245)|0)), Field3: mulInt(src_16200028.Field3, ((scale_15021245)|0))}, NTI12705648);
++excHandler;
    Tmp2 = framePtr;
    try {
    fontBlit_15515053(currentFont_12775291[0], src_16200028, dst_16200030, currentColor_12775318[0]);
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
    framePtr = Tmp2;
    if (lastJSError && (isObj(lastJSError.m_type, NTI1214649))) {
    console.log("index error glyph: ", c_15021242, " @ ", x_15021243, ",", y_15021244);
    reraiseException();
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    framePtr = Tmp2;
    }
    result_16190079 = toPint_14395366(addInt(mulInt(src_16200028.Field2, ((scale_15021245)|0)), ((scale_15021245)|0)));
    break BeforeRet;
  } while (false);

  return result_16190079;

}
function print_15021259(text_15021261, x_15021262, y_15021263, scale_15021264) {
            var Tmp6;

    if ((currentFont_12775291[0] == null)) {
    raiseException({message: makeNimstrLit("No font selected"), parent: null, m_type: NTI1214617, name: null, trace: [], up: null}, "Exception");
    }
    
    var x_16210002 = subInt(x_15021262, cameraX_12775295[0]);
    var y_16210003 = subInt(y_15021263, cameraY_12775296[0]);
    var ix_16210004 = x_16210002;
    L1: do {
      var line_16210005 = [];
      var first_16531640 = 0;
      var last_16531641 = 0;
      var eolpos_16531642 = 0;
      L2: do {
          L3: while (true) {
          if (!true) break L3;
            L4: do {
                L5: while (true) {
                if (!((last_16531641 < (text_15021261).length) && !((ConstSet3[text_15021261[chckIndx(last_16531641, 0, (text_15021261).length-1)]] != undefined)))) break L5;
                  last_16531641 = addInt(last_16531641, 1);
                }
            } while(false);
            eolpos_16531642 = last_16531641;
            if ((last_16531641 < (text_15021261).length)) {
            if ((text_15021261[chckIndx(last_16531641, 0, (text_15021261).length-1)] == 10)) {
            last_16531641 = addInt(last_16531641, 1);
            }
            else {
            if ((text_15021261[chckIndx(last_16531641, 0, (text_15021261).length-1)] == 13)) {
            last_16531641 = addInt(last_16531641, 1);
            if (((last_16531641 < (text_15021261).length) && (text_15021261[chckIndx(last_16531641, 0, (text_15021261).length-1)] == 10))) {
            last_16531641 = addInt(last_16531641, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Tmp6 = subInt(last_16531641, 1);
            }
            else {
            Tmp6 = subInt(eolpos_16531642, 1);
            }
            
            line_16210005 = substr_1591022(text_15021261, first_16531640, Tmp6);
            L7: do {
              var c_16210006 = 0;
              var i_16531607 = 0;
              var result_16531608 = 0;
              L8: do {
                  L9: while (true) {
                  if (!(i_16531607 < (line_16210005).length)) break L9;
                    if ((line_16210005[chckIndx(i_16531607, 0, (line_16210005).length-1)] <= 127)) {
                    result_16531608 = chckRange(line_16210005[chckIndx(i_16531607, 0, (line_16210005).length-1)], -2147483648, 2147483647);
                    i_16531607 = addInt(i_16531607, 1);
                    }
                    else {
                    if ((((line_16210005[chckIndx(i_16531607, 0, (line_16210005).length-1)] >>> 0) >>> 5) == 6)) {
                    if ((i_16531607 <= subInt((line_16210005).length, 2))) {
                    result_16531608 = chckRange((((line_16210005[chckIndx(i_16531607, 0, (line_16210005).length-1)] & 31) << 6) | (line_16210005[chckIndx(addInt(i_16531607, 1), 0, (line_16210005).length-1)] & 63)), -2147483648, 2147483647);
                    i_16531607 = addInt(i_16531607, 2);
                    }
                    else {
                      result_16531608 = 65533;
                      i_16531607 = addInt(i_16531607, 1);
                    }
                    
                    }
                    else {
                    if ((((line_16210005[chckIndx(i_16531607, 0, (line_16210005).length-1)] >>> 0) >>> 4) == 14)) {
                    if ((i_16531607 <= subInt((line_16210005).length, 3))) {
                    result_16531608 = chckRange(((((line_16210005[chckIndx(i_16531607, 0, (line_16210005).length-1)] & 15) << 12) | ((line_16210005[chckIndx(addInt(i_16531607, 1), 0, (line_16210005).length-1)] & 63) << 6)) | (line_16210005[chckIndx(addInt(i_16531607, 2), 0, (line_16210005).length-1)] & 63)), -2147483648, 2147483647);
                    i_16531607 = addInt(i_16531607, 3);
                    }
                    else {
                      result_16531608 = 65533;
                      i_16531607 = addInt(i_16531607, 1);
                    }
                    
                    }
                    else {
                    if ((((line_16210005[chckIndx(i_16531607, 0, (line_16210005).length-1)] >>> 0) >>> 3) == 30)) {
                    if ((i_16531607 <= subInt((line_16210005).length, 4))) {
                    result_16531608 = chckRange((((((line_16210005[chckIndx(i_16531607, 0, (line_16210005).length-1)] & 7) << 18) | ((line_16210005[chckIndx(addInt(i_16531607, 1), 0, (line_16210005).length-1)] & 63) << 12)) | ((line_16210005[chckIndx(addInt(i_16531607, 2), 0, (line_16210005).length-1)] & 63) << 6)) | (line_16210005[chckIndx(addInt(i_16531607, 3), 0, (line_16210005).length-1)] & 63)), -2147483648, 2147483647);
                    i_16531607 = addInt(i_16531607, 4);
                    }
                    else {
                      result_16531608 = 65533;
                      i_16531607 = addInt(i_16531607, 1);
                    }
                    
                    }
                    else {
                    if ((((line_16210005[chckIndx(i_16531607, 0, (line_16210005).length-1)] >>> 0) >>> 2) == 62)) {
                    if ((i_16531607 <= subInt((line_16210005).length, 5))) {
                    result_16531608 = chckRange(((((((line_16210005[chckIndx(i_16531607, 0, (line_16210005).length-1)] & 3) << 24) | ((line_16210005[chckIndx(addInt(i_16531607, 1), 0, (line_16210005).length-1)] & 63) << 18)) | ((line_16210005[chckIndx(addInt(i_16531607, 2), 0, (line_16210005).length-1)] & 63) << 12)) | ((line_16210005[chckIndx(addInt(i_16531607, 3), 0, (line_16210005).length-1)] & 63) << 6)) | (line_16210005[chckIndx(addInt(i_16531607, 4), 0, (line_16210005).length-1)] & 63)), -2147483648, 2147483647);
                    i_16531607 = addInt(i_16531607, 5);
                    }
                    else {
                      result_16531608 = 65533;
                      i_16531607 = addInt(i_16531607, 1);
                    }
                    
                    }
                    else {
                    if ((((line_16210005[chckIndx(i_16531607, 0, (line_16210005).length-1)] >>> 0) >>> 1) == 126)) {
                    if ((i_16531607 <= subInt((line_16210005).length, 6))) {
                    result_16531608 = chckRange((((((((line_16210005[chckIndx(i_16531607, 0, (line_16210005).length-1)] & 1) << 30) | ((line_16210005[chckIndx(addInt(i_16531607, 1), 0, (line_16210005).length-1)] & 63) << 24)) | ((line_16210005[chckIndx(addInt(i_16531607, 2), 0, (line_16210005).length-1)] & 63) << 18)) | ((line_16210005[chckIndx(addInt(i_16531607, 3), 0, (line_16210005).length-1)] & 63) << 12)) | ((line_16210005[chckIndx(addInt(i_16531607, 4), 0, (line_16210005).length-1)] & 63) << 6)) | (line_16210005[chckIndx(addInt(i_16531607, 5), 0, (line_16210005).length-1)] & 63)), -2147483648, 2147483647);
                    i_16531607 = addInt(i_16531607, 6);
                    }
                    else {
                      result_16531608 = 65533;
                      i_16531607 = addInt(i_16531607, 1);
                    }
                    
                    }
                    else {
                      result_16531608 = chckRange(line_16210005[chckIndx(i_16531607, 0, (line_16210005).length-1)], -2147483648, 2147483647);
                      i_16531607 = addInt(i_16531607, 1);
                    }
                    }}}}}
                    c_16210006 = result_16531608;
                    x_16210002 = addInt(x_16210002, glyph_15021240(c_16210006, x_16210002, y_16210003, scale_15021264));
                  }
              } while(false);
            } while(false);
            x_16210002 = ix_16210004;
            y_16210003 = addInt(y_16210003, toPint_14395366(currentFont_12775291[0].h));
            if ((eolpos_16531642 == last_16531641)) {
            break L2;
            }
            
            first_16531640 = last_16531641;
          }
      } while(false);
    } while(false);

  
}
function printc_15021265(text_15021267, x_15021268, y_15021269, scale_15021270) {
    var width_16230216 = textWidth_15021277(text_15021267, scale_15021270);
    print_15021259(text_15021267, subInt(x_15021268, divInt(width_16230216, 2)), y_15021269, scale_15021270);

  
}
function gameDraw_16531123() {
    var Tmp1;

    cls_15135177();
    if (buttonDown_16531014[0]) {
    Tmp1 = 7;
    }
    else {
    Tmp1 = 3;
    }
    
    setColor_15021289(Tmp1);
    boxfill_15035279(toPint_14395366(playerX_16531015[0]), toPint_14395366(playerY_16531016[0]), toPint_14395366(playerWidth_16531018[0]), toPint_14395366(playerHeight_16531020[0]));
    printc_15021265(makeNimstrLit("Postmodern Jukebox"), toPint_14395366(divInt(screenWidth_12775220[0], 2)), toPint_14395366(divInt(screenHeight_12775223[0], 2)), 1);

  
}
init_15035529(makeNimstrLit("myOrg"), makeNimstrLit("myApp"));
createWindow_16465171(makeNimstrLit("myApp"), 128, 128, 4, false);
run_16465690(gameInit_16531038, gameUpdate_16531107, gameDraw_16531123);
